ARM GAS  /tmp/ccl7VXUQ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"task_blink.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.App_Task_Blink,"ax",%progbits
  16              		.align	1
  17              		.global	App_Task_Blink
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	App_Task_Blink:
  25              	.LFB70:
  26              		.file 1 "app/tasks/task_blink.c"
   1:app/tasks/task_blink.c **** /**
   2:app/tasks/task_blink.c ****  * @file
   3:app/tasks/task_blink.c ****  * @author Brandon Alba <branalba42@gmail.com>
   4:app/tasks/task_blink.c ****  *
   5:app/tasks/task_blink.c ****  * @section LICENSE
   6:app/tasks/task_blink.c ****  *
   7:app/tasks/task_blink.c ****  * Copyright © 2021 Brandon Alba
   8:app/tasks/task_blink.c ****  *
   9:app/tasks/task_blink.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
  10:app/tasks/task_blink.c ****  * of this software and associated documentation files (the “Software”), to deal
  11:app/tasks/task_blink.c ****  * in the Software without restriction, including without limitation the rights
  12:app/tasks/task_blink.c ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  13:app/tasks/task_blink.c ****  * copies of the Software, and to permit persons to whom the Software is
  14:app/tasks/task_blink.c ****  * furnished to do so, subject to the following conditions:
  15:app/tasks/task_blink.c ****  *
  16:app/tasks/task_blink.c ****  * The above copyright notice and this permission notice shall be included in
  17:app/tasks/task_blink.c ****  * all copies or substantial portions of the Software.
  18:app/tasks/task_blink.c ****  *
  19:app/tasks/task_blink.c ****  * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  20:app/tasks/task_blink.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  21:app/tasks/task_blink.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  22:app/tasks/task_blink.c ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  23:app/tasks/task_blink.c ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  24:app/tasks/task_blink.c ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  25:app/tasks/task_blink.c ****  * SOFTWARE.
  26:app/tasks/task_blink.c ****  *
  27:app/tasks/task_blink.c ****  * @section DESCRIPTION
  28:app/tasks/task_blink.c ****  *
  29:app/tasks/task_blink.c ****  * Source file for the application blink task.
  30:app/tasks/task_blink.c ****  *
  31:app/tasks/task_blink.c ****  */
  32:app/tasks/task_blink.c **** 
ARM GAS  /tmp/ccl7VXUQ.s 			page 2


  33:app/tasks/task_blink.c **** /* private includes */
  34:app/tasks/task_blink.c **** #include "task_blink.h"
  35:app/tasks/task_blink.c **** 
  36:app/tasks/task_blink.c **** /* ========================================================================== */
  37:app/tasks/task_blink.c **** /* PRIVATE FUNCTION PROTOTYPES                                                */
  38:app/tasks/task_blink.c **** /* ========================================================================== */
  39:app/tasks/task_blink.c **** void App_Task_Blink ( void *argument );
  40:app/tasks/task_blink.c **** 
  41:app/tasks/task_blink.c **** /* ========================================================================== */
  42:app/tasks/task_blink.c **** /* FUNCTION DEFINITIONS                                                       */
  43:app/tasks/task_blink.c **** /* ========================================================================== */
  44:app/tasks/task_blink.c **** 
  45:app/tasks/task_blink.c **** /*
  46:app/tasks/task_blink.c ****  * @brief Intializes and creates the blink task
  47:app/tasks/task_blink.c ****  *
  48:app/tasks/task_blink.c ****  * @retval 1 if successful, 0 otherwise
  49:app/tasks/task_blink.c ****  */
  50:app/tasks/task_blink.c **** int App_Task_Blink_Init ( void )
  51:app/tasks/task_blink.c **** {
  52:app/tasks/task_blink.c **** 
  53:app/tasks/task_blink.c ****     osThreadId_t blinkTaskHandle;
  54:app/tasks/task_blink.c ****     const osThreadAttr_t blinkTask_attributes = {
  55:app/tasks/task_blink.c ****         .name = "blinkTask",
  56:app/tasks/task_blink.c ****         .stack_size = 128 * 4,
  57:app/tasks/task_blink.c ****         .priority = (osPriority_t)osPriorityLow,
  58:app/tasks/task_blink.c ****     };
  59:app/tasks/task_blink.c **** 
  60:app/tasks/task_blink.c ****     blinkTaskHandle =
  61:app/tasks/task_blink.c ****         osThreadNew ( App_Task_Blink, NULL, &blinkTask_attributes );
  62:app/tasks/task_blink.c **** 
  63:app/tasks/task_blink.c ****     return ( osThreadGetState ( blinkTaskHandle ) == osThreadError ) ? 0 : 1;
  64:app/tasks/task_blink.c **** }
  65:app/tasks/task_blink.c **** 
  66:app/tasks/task_blink.c **** void App_Task_Blink ( void *argument )
  67:app/tasks/task_blink.c **** {
  27              		.loc 1 67 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33              		.loc 1 67 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  39              	.LVL1:
  40              	.L2:
  68:app/tasks/task_blink.c ****     /* infinite loop */
  69:app/tasks/task_blink.c ****     while ( 1 )
  41              		.loc 1 69 5 is_stmt 1 discriminator 1 view .LVU2
  70:app/tasks/task_blink.c ****     {
  71:app/tasks/task_blink.c ****         osDelay ( 500 );
  42              		.loc 1 71 9 discriminator 1 view .LVU3
  43 0002 4FF4FA70 		mov	r0, #500
  44 0006 FFF7FEFF 		bl	osDelay
ARM GAS  /tmp/ccl7VXUQ.s 			page 3


  45              	.LVL2:
  72:app/tasks/task_blink.c ****         HAL_GPIO_TogglePin ( GPIOC, GPIO_PIN_13 );
  46              		.loc 1 72 9 discriminator 1 view .LVU4
  47 000a 4FF40051 		mov	r1, #8192
  48 000e 0248     		ldr	r0, .L4
  49 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  50              	.LVL3:
  69:app/tasks/task_blink.c ****     {
  51              		.loc 1 69 11 discriminator 1 view .LVU5
  52 0014 F5E7     		b	.L2
  53              	.L5:
  54 0016 00BF     		.align	2
  55              	.L4:
  56 0018 00100140 		.word	1073811456
  57              		.cfi_endproc
  58              	.LFE70:
  60              		.section	.rodata.App_Task_Blink_Init.str1.4,"aMS",%progbits,1
  61              		.align	2
  62              	.LC0:
  63 0000 626C696E 		.ascii	"blinkTask\000"
  63      6B546173 
  63      6B00
  64              		.section	.text.App_Task_Blink_Init,"ax",%progbits
  65              		.align	1
  66              		.global	App_Task_Blink_Init
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu softvfp
  72              	App_Task_Blink_Init:
  73              	.LFB69:
  51:app/tasks/task_blink.c **** 
  74              		.loc 1 51 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 40
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 00B5     		push	{lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 14, -4
  82 0002 8BB0     		sub	sp, sp, #44
  83              	.LCFI2:
  84              		.cfi_def_cfa_offset 48
  53:app/tasks/task_blink.c ****     const osThreadAttr_t blinkTask_attributes = {
  85              		.loc 1 53 5 view .LVU7
  54:app/tasks/task_blink.c ****         .name = "blinkTask",
  86              		.loc 1 54 5 view .LVU8
  54:app/tasks/task_blink.c ****         .name = "blinkTask",
  87              		.loc 1 54 26 is_stmt 0 view .LVU9
  88 0004 2422     		movs	r2, #36
  89 0006 0021     		movs	r1, #0
  90 0008 01A8     		add	r0, sp, #4
  91 000a FFF7FEFF 		bl	memset
  92              	.LVL4:
  93 000e 0A4B     		ldr	r3, .L8
  94 0010 0193     		str	r3, [sp, #4]
  95 0012 4FF40073 		mov	r3, #512
ARM GAS  /tmp/ccl7VXUQ.s 			page 4


  96 0016 0693     		str	r3, [sp, #24]
  97 0018 0823     		movs	r3, #8
  98 001a 0793     		str	r3, [sp, #28]
  60:app/tasks/task_blink.c ****         osThreadNew ( App_Task_Blink, NULL, &blinkTask_attributes );
  99              		.loc 1 60 5 is_stmt 1 view .LVU10
  61:app/tasks/task_blink.c **** 
 100              		.loc 1 61 9 is_stmt 0 view .LVU11
 101 001c 01AA     		add	r2, sp, #4
 102 001e 0021     		movs	r1, #0
 103 0020 0648     		ldr	r0, .L8+4
 104 0022 FFF7FEFF 		bl	osThreadNew
 105              	.LVL5:
  63:app/tasks/task_blink.c **** }
 106              		.loc 1 63 5 is_stmt 1 view .LVU12
  63:app/tasks/task_blink.c **** }
 107              		.loc 1 63 14 is_stmt 0 view .LVU13
 108 0026 FFF7FEFF 		bl	osThreadGetState
 109              	.LVL6:
  64:app/tasks/task_blink.c **** 
 110              		.loc 1 64 1 view .LVU14
 111 002a 0130     		adds	r0, r0, #1
 112 002c 18BF     		it	ne
 113 002e 0120     		movne	r0, #1
 114 0030 0BB0     		add	sp, sp, #44
 115              	.LCFI3:
 116              		.cfi_def_cfa_offset 4
 117              		@ sp needed
 118 0032 5DF804FB 		ldr	pc, [sp], #4
 119              	.L9:
 120 0036 00BF     		.align	2
 121              	.L8:
 122 0038 00000000 		.word	.LC0
 123 003c 00000000 		.word	App_Task_Blink
 124              		.cfi_endproc
 125              	.LFE69:
 127              		.text
 128              	.Letext0:
 129              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 130              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 131              		.file 4 "base/os/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 132              		.file 5 "base/chip/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 133              		.file 6 "base/chip/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 134              		.file 7 "<built-in>"
ARM GAS  /tmp/ccl7VXUQ.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 task_blink.c
     /tmp/ccl7VXUQ.s:16     .text.App_Task_Blink:0000000000000000 $t
     /tmp/ccl7VXUQ.s:24     .text.App_Task_Blink:0000000000000000 App_Task_Blink
     /tmp/ccl7VXUQ.s:56     .text.App_Task_Blink:0000000000000018 $d
     /tmp/ccl7VXUQ.s:61     .rodata.App_Task_Blink_Init.str1.4:0000000000000000 $d
     /tmp/ccl7VXUQ.s:65     .text.App_Task_Blink_Init:0000000000000000 $t
     /tmp/ccl7VXUQ.s:72     .text.App_Task_Blink_Init:0000000000000000 App_Task_Blink_Init
     /tmp/ccl7VXUQ.s:122    .text.App_Task_Blink_Init:0000000000000038 $d

UNDEFINED SYMBOLS
osDelay
HAL_GPIO_TogglePin
memset
osThreadNew
osThreadGetState
