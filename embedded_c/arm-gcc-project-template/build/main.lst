ARM GAS  /tmp/cc6Ti7OS.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.App_RTOS_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	App_RTOS_Init:
  24              	.LFB70:
  25              		.file 1 "app/main.c"
   1:app/main.c    **** /**
   2:app/main.c    ****  * @file
   3:app/main.c    ****  * @author Brandon Alba <branalba42@gmail.com>
   4:app/main.c    ****  *
   5:app/main.c    ****  * @section LICENSE
   6:app/main.c    ****  *
   7:app/main.c    ****  * Copyright © 2021 Brandon Alba
   8:app/main.c    ****  *
   9:app/main.c    ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
  10:app/main.c    ****  * of this software and associated documentation files (the “Software”), to deal
  11:app/main.c    ****  * in the Software without restriction, including without limitation the rights
  12:app/main.c    ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  13:app/main.c    ****  * copies of the Software, and to permit persons to whom the Software is
  14:app/main.c    ****  * furnished to do so, subject to the following conditions:
  15:app/main.c    ****  *
  16:app/main.c    ****  * The above copyright notice and this permission notice shall be included in
  17:app/main.c    ****  * all copies or substantial portions of the Software.
  18:app/main.c    ****  *
  19:app/main.c    ****  * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  20:app/main.c    ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  21:app/main.c    ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  22:app/main.c    ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  23:app/main.c    ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  24:app/main.c    ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  25:app/main.c    ****  * SOFTWARE.
  26:app/main.c    ****  *
  27:app/main.c    ****  * @section DESCRIPTION
  28:app/main.c    ****  *
  29:app/main.c    ****  * Source file for the APP layer of the application.
  30:app/main.c    ****  *
  31:app/main.c    ****  */
  32:app/main.c    **** 
  33:app/main.c    **** /* ========================================================================== */
ARM GAS  /tmp/cc6Ti7OS.s 			page 2


  34:app/main.c    **** /* PRIVATE INCLUDES                                                           */
  35:app/main.c    **** /* ========================================================================== */
  36:app/main.c    **** 
  37:app/main.c    **** /* user-defined */
  38:app/main.c    **** #include "main.h"
  39:app/main.c    **** #include "task_blink.h"
  40:app/main.c    **** 
  41:app/main.c    **** /* ========================================================================== */
  42:app/main.c    **** /* EXTERNAL VARIABLES                                                         */
  43:app/main.c    **** /* ========================================================================== */
  44:app/main.c    **** 
  45:app/main.c    **** /* peripheral structs provided by HAL API */
  46:app/main.c    **** extern I2C_HandleTypeDef hi2c1;
  47:app/main.c    **** extern SPI_HandleTypeDef hspi1;
  48:app/main.c    **** extern UART_HandleTypeDef huart1;
  49:app/main.c    **** 
  50:app/main.c    **** /* ========================================================================== */
  51:app/main.c    **** /* PRIVATE VARIABLES                                                          */
  52:app/main.c    **** /* ========================================================================== */
  53:app/main.c    **** 
  54:app/main.c    **** uint8_t uart_rx_buffer[1];
  55:app/main.c    **** int count = 0;
  56:app/main.c    **** 
  57:app/main.c    **** /* ========================================================================== */
  58:app/main.c    **** /* PRIVATE FUNCTION PROTOTYPES                                                */
  59:app/main.c    **** /* ========================================================================== */
  60:app/main.c    **** static void App_RTOS_Init ( void );
  61:app/main.c    **** 
  62:app/main.c    **** /* ========================================================================== */
  63:app/main.c    **** /* FUNCTION DEFINITIONS                                                       */
  64:app/main.c    **** /* ========================================================================== */
  65:app/main.c    **** 
  66:app/main.c    **** /**
  67:app/main.c    ****  * @brief  The application entry point.
  68:app/main.c    ****  * @retval int
  69:app/main.c    ****  */
  70:app/main.c    **** int main ( void )
  71:app/main.c    **** {
  72:app/main.c    ****     /* Initialize the hardware */
  73:app/main.c    ****     Base_Chip_Init();
  74:app/main.c    **** 
  75:app/main.c    ****     /* initialize the RTOS */
  76:app/main.c    ****     App_RTOS_Init();
  77:app/main.c    **** 
  78:app/main.c    ****     /* infinite loop */
  79:app/main.c    ****     while ( 1 )
  80:app/main.c    ****     {
  81:app/main.c    ****         /* we should never get here since the scheduler should have taken over.
  82:app/main.c    ****          * Critical error if we reach this point */
  83:app/main.c    ****         Error_Handler();
  84:app/main.c    ****     }
  85:app/main.c    **** }
  86:app/main.c    **** 
  87:app/main.c    **** /**
  88:app/main.c    ****  * @brief Initializes the RTOS scheduler and other compoenents (tasks,
  89:app/main.c    ****  * semaphores, etc.), then starts the kernel.
  90:app/main.c    ****  * @retval None
ARM GAS  /tmp/cc6Ti7OS.s 			page 3


  91:app/main.c    ****  */
  92:app/main.c    **** void App_RTOS_Init ( void )
  93:app/main.c    **** {
  26              		.loc 1 93 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  94:app/main.c    ****     /* initialize RTOS scheduler */
  95:app/main.c    ****     osKernelInitialize();
  35              		.loc 1 95 5 view .LVU1
  36 0002 FFF7FEFF 		bl	osKernelInitialize
  37              	.LVL0:
  96:app/main.c    **** 
  97:app/main.c    ****     /* creating the tasks */
  98:app/main.c    ****     App_Task_Blink_Init();
  38              		.loc 1 98 5 view .LVU2
  39 0006 FFF7FEFF 		bl	App_Task_Blink_Init
  40              	.LVL1:
  99:app/main.c    **** 
 100:app/main.c    ****     /* start the RTOS */
 101:app/main.c    ****     osKernelStart();
  41              		.loc 1 101 5 view .LVU3
  42 000a FFF7FEFF 		bl	osKernelStart
  43              	.LVL2:
 102:app/main.c    **** }
  44              		.loc 1 102 1 is_stmt 0 view .LVU4
  45 000e 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE70:
  49              		.section	.text.main,"ax",%progbits
  50              		.align	1
  51              		.global	main
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu softvfp
  57              	main:
  58              	.LFB69:
  71:app/main.c    ****     /* Initialize the hardware */
  59              		.loc 1 71 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ Volatile: function does not return.
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64 0000 08B5     		push	{r3, lr}
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 3, -8
  68              		.cfi_offset 14, -4
  73:app/main.c    **** 
  69              		.loc 1 73 5 view .LVU6
  70 0002 FFF7FEFF 		bl	Base_Chip_Init
ARM GAS  /tmp/cc6Ti7OS.s 			page 4


  71              	.LVL3:
  76:app/main.c    **** 
  72              		.loc 1 76 5 view .LVU7
  73 0006 FFF7FEFF 		bl	App_RTOS_Init
  74              	.LVL4:
  75              	.L4:
  79:app/main.c    ****     {
  76              		.loc 1 79 5 discriminator 1 view .LVU8
  83:app/main.c    ****     }
  77              		.loc 1 83 9 discriminator 1 view .LVU9
  78 000a FFF7FEFF 		bl	Error_Handler
  79              	.LVL5:
  79:app/main.c    ****     {
  80              		.loc 1 79 11 discriminator 1 view .LVU10
  81 000e FCE7     		b	.L4
  82              		.cfi_endproc
  83              	.LFE69:
  85              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  86              		.align	1
  87              		.global	HAL_TIM_PeriodElapsedCallback
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu softvfp
  93              	HAL_TIM_PeriodElapsedCallback:
  94              	.LVL6:
  95              	.LFB71:
 103:app/main.c    **** 
 104:app/main.c    **** /**
 105:app/main.c    ****  * @brief  Period elapsed callback in non blocking mode
 106:app/main.c    ****  * @note   This function is called  when TIM3 interrupt took place, inside
 107:app/main.c    ****  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 108:app/main.c    ****  * a global variable "uwTick" used as application time base.
 109:app/main.c    ****  * @param  htim : TIM handle
 110:app/main.c    ****  * @retval None
 111:app/main.c    ****  */
 112:app/main.c    **** void HAL_TIM_PeriodElapsedCallback ( TIM_HandleTypeDef *htim )
 113:app/main.c    **** {
  96              		.loc 1 113 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		.loc 1 113 1 is_stmt 0 view .LVU12
 101 0000 08B5     		push	{r3, lr}
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 3, -8
 105              		.cfi_offset 14, -4
 114:app/main.c    ****     if ( htim->Instance == TIM3 )
 106              		.loc 1 114 5 is_stmt 1 view .LVU13
 107              		.loc 1 114 14 is_stmt 0 view .LVU14
 108 0002 0268     		ldr	r2, [r0]
 109              		.loc 1 114 8 view .LVU15
 110 0004 034B     		ldr	r3, .L10
 111 0006 9A42     		cmp	r2, r3
 112 0008 00D0     		beq	.L9
 113              	.LVL7:
ARM GAS  /tmp/cc6Ti7OS.s 			page 5


 114              	.L6:
 115:app/main.c    ****     {
 116:app/main.c    ****         HAL_IncTick();
 117:app/main.c    ****     }
 118:app/main.c    **** }
 115              		.loc 1 118 1 view .LVU16
 116 000a 08BD     		pop	{r3, pc}
 117              	.LVL8:
 118              	.L9:
 116:app/main.c    ****     }
 119              		.loc 1 116 9 is_stmt 1 view .LVU17
 120 000c FFF7FEFF 		bl	HAL_IncTick
 121              	.LVL9:
 122              		.loc 1 118 1 is_stmt 0 view .LVU18
 123 0010 FBE7     		b	.L6
 124              	.L11:
 125 0012 00BF     		.align	2
 126              	.L10:
 127 0014 00040040 		.word	1073742848
 128              		.cfi_endproc
 129              	.LFE71:
 131              		.global	count
 132              		.global	uart_rx_buffer
 133              		.section	.bss.count,"aw",%nobits
 134              		.align	2
 137              	count:
 138 0000 00000000 		.space	4
 139              		.section	.bss.uart_rx_buffer,"aw",%nobits
 140              		.align	2
 143              	uart_rx_buffer:
 144 0000 00       		.space	1
 145              		.text
 146              	.Letext0:
 147              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 148              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 149              		.file 4 "base/chip/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 150              		.file 5 "base/chip/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 151              		.file 6 "base/chip/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 152              		.file 7 "base/chip/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 153              		.file 8 "base/os/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 154              		.file 9 "app/tasks/task_blink.h"
 155              		.file 10 "base/chip/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 156              		.file 11 "base/base.h"
ARM GAS  /tmp/cc6Ti7OS.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc6Ti7OS.s:16     .text.App_RTOS_Init:0000000000000000 $t
     /tmp/cc6Ti7OS.s:23     .text.App_RTOS_Init:0000000000000000 App_RTOS_Init
     /tmp/cc6Ti7OS.s:50     .text.main:0000000000000000 $t
     /tmp/cc6Ti7OS.s:57     .text.main:0000000000000000 main
     /tmp/cc6Ti7OS.s:86     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc6Ti7OS.s:93     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc6Ti7OS.s:127    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/cc6Ti7OS.s:137    .bss.count:0000000000000000 count
     /tmp/cc6Ti7OS.s:143    .bss.uart_rx_buffer:0000000000000000 uart_rx_buffer
     /tmp/cc6Ti7OS.s:134    .bss.count:0000000000000000 $d
     /tmp/cc6Ti7OS.s:140    .bss.uart_rx_buffer:0000000000000000 $d

UNDEFINED SYMBOLS
osKernelInitialize
App_Task_Blink_Init
osKernelStart
Base_Chip_Init
Error_Handler
HAL_IncTick
