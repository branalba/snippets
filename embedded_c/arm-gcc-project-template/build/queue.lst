ARM GAS  /tmp/ccw4aonF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"queue.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	prvGetDisinheritPriorityAfterTimeout:
  24              	.LVL0:
  25              	.LFB32:
  26              		.file 1 "base/os/FreeRTOS/Source/queue.c"
   1:base/os/FreeRTOS/Source/queue.c **** /*
   2:base/os/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.0.1
   3:base/os/FreeRTOS/Source/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:base/os/FreeRTOS/Source/queue.c ****  *
   5:base/os/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:base/os/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:base/os/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:base/os/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:base/os/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:base/os/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:base/os/FreeRTOS/Source/queue.c ****  *
  12:base/os/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:base/os/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:base/os/FreeRTOS/Source/queue.c ****  *
  15:base/os/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:base/os/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:base/os/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:base/os/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:base/os/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:base/os/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:base/os/FreeRTOS/Source/queue.c ****  *
  22:base/os/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:base/os/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:base/os/FreeRTOS/Source/queue.c ****  *
  25:base/os/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:base/os/FreeRTOS/Source/queue.c ****  */
  27:base/os/FreeRTOS/Source/queue.c **** 
  28:base/os/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:base/os/FreeRTOS/Source/queue.c **** #include <string.h>
  30:base/os/FreeRTOS/Source/queue.c **** 
  31:base/os/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:base/os/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/ccw4aonF.s 			page 2


  33:base/os/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:base/os/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:base/os/FreeRTOS/Source/queue.c **** 
  36:base/os/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:base/os/FreeRTOS/Source/queue.c **** #include "task.h"
  38:base/os/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:base/os/FreeRTOS/Source/queue.c **** 
  40:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:base/os/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:base/os/FreeRTOS/Source/queue.c **** #endif
  43:base/os/FreeRTOS/Source/queue.c **** 
  44:base/os/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  45:base/os/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  46:base/os/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  47:base/os/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  48:base/os/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  49:base/os/FreeRTOS/Source/queue.c **** 
  50:base/os/FreeRTOS/Source/queue.c **** 
  51:base/os/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:base/os/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:base/os/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:base/os/FreeRTOS/Source/queue.c **** 
  55:base/os/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:base/os/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:base/os/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:base/os/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:base/os/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  60:base/os/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  61:base/os/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
  62:base/os/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
  63:base/os/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
  64:base/os/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
  65:base/os/FreeRTOS/Source/queue.c **** structure member). */
  66:base/os/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
  67:base/os/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  68:base/os/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  69:base/os/FreeRTOS/Source/queue.c **** 
  70:base/os/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  71:base/os/FreeRTOS/Source/queue.c **** zero. */
  72:base/os/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  73:base/os/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  74:base/os/FreeRTOS/Source/queue.c **** 
  75:base/os/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  76:base/os/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  77:base/os/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  78:base/os/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  79:base/os/FreeRTOS/Source/queue.c **** #else
  80:base/os/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  81:base/os/FreeRTOS/Source/queue.c **** #endif
  82:base/os/FreeRTOS/Source/queue.c **** 
  83:base/os/FreeRTOS/Source/queue.c **** /*
  84:base/os/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  85:base/os/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  86:base/os/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  87:base/os/FreeRTOS/Source/queue.c ****  */
  88:base/os/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
  89:base/os/FreeRTOS/Source/queue.c **** {
ARM GAS  /tmp/ccw4aonF.s 			page 3


  90:base/os/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  91:base/os/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  92:base/os/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  93:base/os/FreeRTOS/Source/queue.c **** 
  94:base/os/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  95:base/os/FreeRTOS/Source/queue.c **** 	{
  96:base/os/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  97:base/os/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  98:base/os/FreeRTOS/Source/queue.c **** 	} u;
  99:base/os/FreeRTOS/Source/queue.c **** 
 100:base/os/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 101:base/os/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 102:base/os/FreeRTOS/Source/queue.c **** 
 103:base/os/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 104:base/os/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 105:base/os/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 106:base/os/FreeRTOS/Source/queue.c **** 
 107:base/os/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 108:base/os/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 109:base/os/FreeRTOS/Source/queue.c **** 
 110:base/os/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 111:base/os/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 112:base/os/FreeRTOS/Source/queue.c **** 	#endif
 113:base/os/FreeRTOS/Source/queue.c **** 
 114:base/os/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 115:base/os/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 116:base/os/FreeRTOS/Source/queue.c **** 	#endif
 117:base/os/FreeRTOS/Source/queue.c **** 
 118:base/os/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 119:base/os/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 120:base/os/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 121:base/os/FreeRTOS/Source/queue.c **** 	#endif
 122:base/os/FreeRTOS/Source/queue.c **** 
 123:base/os/FreeRTOS/Source/queue.c **** } xQUEUE;
 124:base/os/FreeRTOS/Source/queue.c **** 
 125:base/os/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 126:base/os/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 127:base/os/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 128:base/os/FreeRTOS/Source/queue.c **** 
 129:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 130:base/os/FreeRTOS/Source/queue.c **** 
 131:base/os/FreeRTOS/Source/queue.c **** /*
 132:base/os/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 133:base/os/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 134:base/os/FreeRTOS/Source/queue.c ****  */
 135:base/os/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 136:base/os/FreeRTOS/Source/queue.c **** 
 137:base/os/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 138:base/os/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 139:base/os/FreeRTOS/Source/queue.c **** 	more user friendly. */
 140:base/os/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 141:base/os/FreeRTOS/Source/queue.c **** 	{
 142:base/os/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 143:base/os/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 144:base/os/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 145:base/os/FreeRTOS/Source/queue.c **** 
 146:base/os/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
ARM GAS  /tmp/ccw4aonF.s 			page 4


 147:base/os/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 148:base/os/FreeRTOS/Source/queue.c **** 	debuggers. */
 149:base/os/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 150:base/os/FreeRTOS/Source/queue.c **** 
 151:base/os/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 152:base/os/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 153:base/os/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 154:base/os/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 155:base/os/FreeRTOS/Source/queue.c **** 
 156:base/os/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 157:base/os/FreeRTOS/Source/queue.c **** 
 158:base/os/FreeRTOS/Source/queue.c **** /*
 159:base/os/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 160:base/os/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 161:base/os/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 162:base/os/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 163:base/os/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 164:base/os/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 165:base/os/FreeRTOS/Source/queue.c ****  */
 166:base/os/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 167:base/os/FreeRTOS/Source/queue.c **** 
 168:base/os/FreeRTOS/Source/queue.c **** /*
 169:base/os/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 170:base/os/FreeRTOS/Source/queue.c ****  *
 171:base/os/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 172:base/os/FreeRTOS/Source/queue.c ****  */
 173:base/os/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 174:base/os/FreeRTOS/Source/queue.c **** 
 175:base/os/FreeRTOS/Source/queue.c **** /*
 176:base/os/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 177:base/os/FreeRTOS/Source/queue.c ****  *
 178:base/os/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 179:base/os/FreeRTOS/Source/queue.c ****  */
 180:base/os/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 181:base/os/FreeRTOS/Source/queue.c **** 
 182:base/os/FreeRTOS/Source/queue.c **** /*
 183:base/os/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 184:base/os/FreeRTOS/Source/queue.c ****  * back of the queue.
 185:base/os/FreeRTOS/Source/queue.c ****  */
 186:base/os/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 187:base/os/FreeRTOS/Source/queue.c **** 
 188:base/os/FreeRTOS/Source/queue.c **** /*
 189:base/os/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 190:base/os/FreeRTOS/Source/queue.c ****  */
 191:base/os/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 192:base/os/FreeRTOS/Source/queue.c **** 
 193:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 194:base/os/FreeRTOS/Source/queue.c **** 	/*
 195:base/os/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 196:base/os/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 197:base/os/FreeRTOS/Source/queue.c **** 	 */
 198:base/os/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 199:base/os/FreeRTOS/Source/queue.c **** #endif
 200:base/os/FreeRTOS/Source/queue.c **** 
 201:base/os/FreeRTOS/Source/queue.c **** /*
 202:base/os/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 203:base/os/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
ARM GAS  /tmp/ccw4aonF.s 			page 5


 204:base/os/FreeRTOS/Source/queue.c ****  */
 205:base/os/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 206:base/os/FreeRTOS/Source/queue.c **** 
 207:base/os/FreeRTOS/Source/queue.c **** /*
 208:base/os/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 209:base/os/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 210:base/os/FreeRTOS/Source/queue.c ****  * as a mutex.
 211:base/os/FreeRTOS/Source/queue.c ****  */
 212:base/os/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 213:base/os/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 214:base/os/FreeRTOS/Source/queue.c **** #endif
 215:base/os/FreeRTOS/Source/queue.c **** 
 216:base/os/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 217:base/os/FreeRTOS/Source/queue.c **** 	/*
 218:base/os/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 219:base/os/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 220:base/os/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 221:base/os/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 222:base/os/FreeRTOS/Source/queue.c **** 	 * that priority.
 223:base/os/FreeRTOS/Source/queue.c **** 	 */
 224:base/os/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 225:base/os/FreeRTOS/Source/queue.c **** #endif
 226:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 227:base/os/FreeRTOS/Source/queue.c **** 
 228:base/os/FreeRTOS/Source/queue.c **** /*
 229:base/os/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 230:base/os/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 231:base/os/FreeRTOS/Source/queue.c ****  */
 232:base/os/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 233:base/os/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 234:base/os/FreeRTOS/Source/queue.c **** 	{														\
 235:base/os/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 236:base/os/FreeRTOS/Source/queue.c **** 		{													\
 237:base/os/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 238:base/os/FreeRTOS/Source/queue.c **** 		}													\
 239:base/os/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 240:base/os/FreeRTOS/Source/queue.c **** 		{													\
 241:base/os/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 242:base/os/FreeRTOS/Source/queue.c **** 		}													\
 243:base/os/FreeRTOS/Source/queue.c **** 	}														\
 244:base/os/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 245:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 246:base/os/FreeRTOS/Source/queue.c **** 
 247:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 248:base/os/FreeRTOS/Source/queue.c **** {
 249:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 250:base/os/FreeRTOS/Source/queue.c **** 
 251:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 252:base/os/FreeRTOS/Source/queue.c **** 
 253:base/os/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 254:base/os/FreeRTOS/Source/queue.c **** 	{
 255:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 256:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 257:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 258:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 259:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 260:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
ARM GAS  /tmp/ccw4aonF.s 			page 6


 261:base/os/FreeRTOS/Source/queue.c **** 
 262:base/os/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 263:base/os/FreeRTOS/Source/queue.c **** 		{
 264:base/os/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 265:base/os/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 266:base/os/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 267:base/os/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 268:base/os/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 269:base/os/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 270:base/os/FreeRTOS/Source/queue.c **** 			{
 271:base/os/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 272:base/os/FreeRTOS/Source/queue.c **** 				{
 273:base/os/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 274:base/os/FreeRTOS/Source/queue.c **** 				}
 275:base/os/FreeRTOS/Source/queue.c **** 				else
 276:base/os/FreeRTOS/Source/queue.c **** 				{
 277:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 278:base/os/FreeRTOS/Source/queue.c **** 				}
 279:base/os/FreeRTOS/Source/queue.c **** 			}
 280:base/os/FreeRTOS/Source/queue.c **** 			else
 281:base/os/FreeRTOS/Source/queue.c **** 			{
 282:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 283:base/os/FreeRTOS/Source/queue.c **** 			}
 284:base/os/FreeRTOS/Source/queue.c **** 		}
 285:base/os/FreeRTOS/Source/queue.c **** 		else
 286:base/os/FreeRTOS/Source/queue.c **** 		{
 287:base/os/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 288:base/os/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 289:base/os/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 290:base/os/FreeRTOS/Source/queue.c **** 		}
 291:base/os/FreeRTOS/Source/queue.c **** 	}
 292:base/os/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 293:base/os/FreeRTOS/Source/queue.c **** 
 294:base/os/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 295:base/os/FreeRTOS/Source/queue.c **** 	versions. */
 296:base/os/FreeRTOS/Source/queue.c **** 	return pdPASS;
 297:base/os/FreeRTOS/Source/queue.c **** }
 298:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 299:base/os/FreeRTOS/Source/queue.c **** 
 300:base/os/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 301:base/os/FreeRTOS/Source/queue.c **** 
 302:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 303:base/os/FreeRTOS/Source/queue.c **** 	{
 304:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 305:base/os/FreeRTOS/Source/queue.c **** 
 306:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 307:base/os/FreeRTOS/Source/queue.c **** 
 308:base/os/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 309:base/os/FreeRTOS/Source/queue.c **** 		supplied. */
 310:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 311:base/os/FreeRTOS/Source/queue.c **** 
 312:base/os/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 313:base/os/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 314:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 315:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 316:base/os/FreeRTOS/Source/queue.c **** 
 317:base/os/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
ARM GAS  /tmp/ccw4aonF.s 			page 7


 318:base/os/FreeRTOS/Source/queue.c **** 		{
 319:base/os/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 320:base/os/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 321:base/os/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 322:base/os/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 323:base/os/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 324:base/os/FreeRTOS/Source/queue.c **** 		}
 325:base/os/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 326:base/os/FreeRTOS/Source/queue.c **** 
 327:base/os/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 328:base/os/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 329:base/os/FreeRTOS/Source/queue.c **** 		but is already set. */
 330:base/os/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 331:base/os/FreeRTOS/Source/queue.c **** 
 332:base/os/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 333:base/os/FreeRTOS/Source/queue.c **** 		{
 334:base/os/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 335:base/os/FreeRTOS/Source/queue.c **** 			{
 336:base/os/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 337:base/os/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 338:base/os/FreeRTOS/Source/queue.c **** 				later deleted. */
 339:base/os/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 340:base/os/FreeRTOS/Source/queue.c **** 			}
 341:base/os/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 342:base/os/FreeRTOS/Source/queue.c **** 
 343:base/os/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 344:base/os/FreeRTOS/Source/queue.c **** 		}
 345:base/os/FreeRTOS/Source/queue.c **** 		else
 346:base/os/FreeRTOS/Source/queue.c **** 		{
 347:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 348:base/os/FreeRTOS/Source/queue.c **** 		}
 349:base/os/FreeRTOS/Source/queue.c **** 
 350:base/os/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 351:base/os/FreeRTOS/Source/queue.c **** 	}
 352:base/os/FreeRTOS/Source/queue.c **** 
 353:base/os/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 354:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 355:base/os/FreeRTOS/Source/queue.c **** 
 356:base/os/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 357:base/os/FreeRTOS/Source/queue.c **** 
 358:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 359:base/os/FreeRTOS/Source/queue.c **** 	{
 360:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 361:base/os/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 362:base/os/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 363:base/os/FreeRTOS/Source/queue.c **** 
 364:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 365:base/os/FreeRTOS/Source/queue.c **** 
 366:base/os/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 367:base/os/FreeRTOS/Source/queue.c **** 		{
 368:base/os/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 369:base/os/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 370:base/os/FreeRTOS/Source/queue.c **** 		}
 371:base/os/FreeRTOS/Source/queue.c **** 		else
 372:base/os/FreeRTOS/Source/queue.c **** 		{
 373:base/os/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 374:base/os/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
ARM GAS  /tmp/ccw4aonF.s 			page 8


 375:base/os/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 376:base/os/FreeRTOS/Source/queue.c **** 		}
 377:base/os/FreeRTOS/Source/queue.c **** 
 378:base/os/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 379:base/os/FreeRTOS/Source/queue.c **** 
 380:base/os/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 381:base/os/FreeRTOS/Source/queue.c **** 		{
 382:base/os/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 383:base/os/FreeRTOS/Source/queue.c **** 			storage area. */
 384:base/os/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 385:base/os/FreeRTOS/Source/queue.c **** 
 386:base/os/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 387:base/os/FreeRTOS/Source/queue.c **** 			{
 388:base/os/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 389:base/os/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 390:base/os/FreeRTOS/Source/queue.c **** 				deleted. */
 391:base/os/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 392:base/os/FreeRTOS/Source/queue.c **** 			}
 393:base/os/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 394:base/os/FreeRTOS/Source/queue.c **** 
 395:base/os/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 396:base/os/FreeRTOS/Source/queue.c **** 		}
 397:base/os/FreeRTOS/Source/queue.c **** 		else
 398:base/os/FreeRTOS/Source/queue.c **** 		{
 399:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 400:base/os/FreeRTOS/Source/queue.c **** 		}
 401:base/os/FreeRTOS/Source/queue.c **** 
 402:base/os/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 403:base/os/FreeRTOS/Source/queue.c **** 	}
 404:base/os/FreeRTOS/Source/queue.c **** 
 405:base/os/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 406:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 407:base/os/FreeRTOS/Source/queue.c **** 
 408:base/os/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 409:base/os/FreeRTOS/Source/queue.c **** {
 410:base/os/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 411:base/os/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 412:base/os/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 413:base/os/FreeRTOS/Source/queue.c **** 
 414:base/os/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 415:base/os/FreeRTOS/Source/queue.c **** 	{
 416:base/os/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 417:base/os/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 418:base/os/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 419:base/os/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 420:base/os/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 421:base/os/FreeRTOS/Source/queue.c **** 	}
 422:base/os/FreeRTOS/Source/queue.c **** 	else
 423:base/os/FreeRTOS/Source/queue.c **** 	{
 424:base/os/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 425:base/os/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 426:base/os/FreeRTOS/Source/queue.c **** 	}
 427:base/os/FreeRTOS/Source/queue.c **** 
 428:base/os/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 429:base/os/FreeRTOS/Source/queue.c **** 	defined. */
 430:base/os/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 431:base/os/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
ARM GAS  /tmp/ccw4aonF.s 			page 9


 432:base/os/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 433:base/os/FreeRTOS/Source/queue.c **** 
 434:base/os/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 435:base/os/FreeRTOS/Source/queue.c **** 	{
 436:base/os/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 437:base/os/FreeRTOS/Source/queue.c **** 	}
 438:base/os/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 439:base/os/FreeRTOS/Source/queue.c **** 
 440:base/os/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 441:base/os/FreeRTOS/Source/queue.c **** 	{
 442:base/os/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 443:base/os/FreeRTOS/Source/queue.c **** 	}
 444:base/os/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 445:base/os/FreeRTOS/Source/queue.c **** 
 446:base/os/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 447:base/os/FreeRTOS/Source/queue.c **** }
 448:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 449:base/os/FreeRTOS/Source/queue.c **** 
 450:base/os/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 451:base/os/FreeRTOS/Source/queue.c **** 
 452:base/os/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 453:base/os/FreeRTOS/Source/queue.c **** 	{
 454:base/os/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 455:base/os/FreeRTOS/Source/queue.c **** 		{
 456:base/os/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 457:base/os/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 458:base/os/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 459:base/os/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 460:base/os/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 461:base/os/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 462:base/os/FreeRTOS/Source/queue.c **** 
 463:base/os/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 464:base/os/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 465:base/os/FreeRTOS/Source/queue.c **** 
 466:base/os/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 467:base/os/FreeRTOS/Source/queue.c **** 
 468:base/os/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 469:base/os/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 470:base/os/FreeRTOS/Source/queue.c **** 		}
 471:base/os/FreeRTOS/Source/queue.c **** 		else
 472:base/os/FreeRTOS/Source/queue.c **** 		{
 473:base/os/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 474:base/os/FreeRTOS/Source/queue.c **** 		}
 475:base/os/FreeRTOS/Source/queue.c **** 	}
 476:base/os/FreeRTOS/Source/queue.c **** 
 477:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 478:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 479:base/os/FreeRTOS/Source/queue.c **** 
 480:base/os/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 481:base/os/FreeRTOS/Source/queue.c **** 
 482:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 483:base/os/FreeRTOS/Source/queue.c **** 	{
 484:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 485:base/os/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 486:base/os/FreeRTOS/Source/queue.c **** 
 487:base/os/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 488:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
ARM GAS  /tmp/ccw4aonF.s 			page 10


 489:base/os/FreeRTOS/Source/queue.c **** 
 490:base/os/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 491:base/os/FreeRTOS/Source/queue.c **** 	}
 492:base/os/FreeRTOS/Source/queue.c **** 
 493:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 494:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 495:base/os/FreeRTOS/Source/queue.c **** 
 496:base/os/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 497:base/os/FreeRTOS/Source/queue.c **** 
 498:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 499:base/os/FreeRTOS/Source/queue.c **** 	{
 500:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 501:base/os/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 502:base/os/FreeRTOS/Source/queue.c **** 
 503:base/os/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 504:base/os/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 505:base/os/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 506:base/os/FreeRTOS/Source/queue.c **** 
 507:base/os/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 508:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 509:base/os/FreeRTOS/Source/queue.c **** 
 510:base/os/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 511:base/os/FreeRTOS/Source/queue.c **** 	}
 512:base/os/FreeRTOS/Source/queue.c **** 
 513:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 514:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 515:base/os/FreeRTOS/Source/queue.c **** 
 516:base/os/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 517:base/os/FreeRTOS/Source/queue.c **** 
 518:base/os/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 519:base/os/FreeRTOS/Source/queue.c **** 	{
 520:base/os/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 521:base/os/FreeRTOS/Source/queue.c **** 
 522:base/os/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 523:base/os/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 524:base/os/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 525:base/os/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 526:base/os/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 527:base/os/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 528:base/os/FreeRTOS/Source/queue.c **** 		{
 529:base/os/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 530:base/os/FreeRTOS/Source/queue.c **** 			{
 531:base/os/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 532:base/os/FreeRTOS/Source/queue.c **** 			}
 533:base/os/FreeRTOS/Source/queue.c **** 			else
 534:base/os/FreeRTOS/Source/queue.c **** 			{
 535:base/os/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 536:base/os/FreeRTOS/Source/queue.c **** 			}
 537:base/os/FreeRTOS/Source/queue.c **** 		}
 538:base/os/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 539:base/os/FreeRTOS/Source/queue.c **** 
 540:base/os/FreeRTOS/Source/queue.c **** 		return pxReturn;
 541:base/os/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 542:base/os/FreeRTOS/Source/queue.c **** 
 543:base/os/FreeRTOS/Source/queue.c **** #endif
 544:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 545:base/os/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccw4aonF.s 			page 11


 546:base/os/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 547:base/os/FreeRTOS/Source/queue.c **** 
 548:base/os/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 549:base/os/FreeRTOS/Source/queue.c **** 	{
 550:base/os/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 551:base/os/FreeRTOS/Source/queue.c **** 
 552:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 553:base/os/FreeRTOS/Source/queue.c **** 
 554:base/os/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 555:base/os/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 556:base/os/FreeRTOS/Source/queue.c **** 		not required here. */
 557:base/os/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 558:base/os/FreeRTOS/Source/queue.c **** 		{
 559:base/os/FreeRTOS/Source/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 560:base/os/FreeRTOS/Source/queue.c **** 		}
 561:base/os/FreeRTOS/Source/queue.c **** 		else
 562:base/os/FreeRTOS/Source/queue.c **** 		{
 563:base/os/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 564:base/os/FreeRTOS/Source/queue.c **** 		}
 565:base/os/FreeRTOS/Source/queue.c **** 
 566:base/os/FreeRTOS/Source/queue.c **** 		return pxReturn;
 567:base/os/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 568:base/os/FreeRTOS/Source/queue.c **** 
 569:base/os/FreeRTOS/Source/queue.c **** #endif
 570:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 571:base/os/FreeRTOS/Source/queue.c **** 
 572:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 573:base/os/FreeRTOS/Source/queue.c **** 
 574:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 575:base/os/FreeRTOS/Source/queue.c **** 	{
 576:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 577:base/os/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 578:base/os/FreeRTOS/Source/queue.c **** 
 579:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 580:base/os/FreeRTOS/Source/queue.c **** 
 581:base/os/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 582:base/os/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 583:base/os/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 584:base/os/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 585:base/os/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 586:base/os/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 587:base/os/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 588:base/os/FreeRTOS/Source/queue.c **** 		{
 589:base/os/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 590:base/os/FreeRTOS/Source/queue.c **** 
 591:base/os/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 592:base/os/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 593:base/os/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 594:base/os/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 595:base/os/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 596:base/os/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 597:base/os/FreeRTOS/Source/queue.c **** 
 598:base/os/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 599:base/os/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 600:base/os/FreeRTOS/Source/queue.c **** 			{
 601:base/os/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 602:base/os/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
ARM GAS  /tmp/ccw4aonF.s 			page 12


 603:base/os/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 604:base/os/FreeRTOS/Source/queue.c **** 			}
 605:base/os/FreeRTOS/Source/queue.c **** 			else
 606:base/os/FreeRTOS/Source/queue.c **** 			{
 607:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 608:base/os/FreeRTOS/Source/queue.c **** 			}
 609:base/os/FreeRTOS/Source/queue.c **** 
 610:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 611:base/os/FreeRTOS/Source/queue.c **** 		}
 612:base/os/FreeRTOS/Source/queue.c **** 		else
 613:base/os/FreeRTOS/Source/queue.c **** 		{
 614:base/os/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 615:base/os/FreeRTOS/Source/queue.c **** 			holder. */
 616:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 617:base/os/FreeRTOS/Source/queue.c **** 
 618:base/os/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 619:base/os/FreeRTOS/Source/queue.c **** 		}
 620:base/os/FreeRTOS/Source/queue.c **** 
 621:base/os/FreeRTOS/Source/queue.c **** 		return xReturn;
 622:base/os/FreeRTOS/Source/queue.c **** 	}
 623:base/os/FreeRTOS/Source/queue.c **** 
 624:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 625:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 626:base/os/FreeRTOS/Source/queue.c **** 
 627:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 628:base/os/FreeRTOS/Source/queue.c **** 
 629:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 630:base/os/FreeRTOS/Source/queue.c **** 	{
 631:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 632:base/os/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 633:base/os/FreeRTOS/Source/queue.c **** 
 634:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 635:base/os/FreeRTOS/Source/queue.c **** 
 636:base/os/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 637:base/os/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 638:base/os/FreeRTOS/Source/queue.c **** 
 639:base/os/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 640:base/os/FreeRTOS/Source/queue.c **** 
 641:base/os/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 642:base/os/FreeRTOS/Source/queue.c **** 		{
 643:base/os/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 644:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 645:base/os/FreeRTOS/Source/queue.c **** 		}
 646:base/os/FreeRTOS/Source/queue.c **** 		else
 647:base/os/FreeRTOS/Source/queue.c **** 		{
 648:base/os/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 649:base/os/FreeRTOS/Source/queue.c **** 
 650:base/os/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 651:base/os/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 652:base/os/FreeRTOS/Source/queue.c **** 			before reaching here. */
 653:base/os/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 654:base/os/FreeRTOS/Source/queue.c **** 			{
 655:base/os/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 656:base/os/FreeRTOS/Source/queue.c **** 			}
 657:base/os/FreeRTOS/Source/queue.c **** 			else
 658:base/os/FreeRTOS/Source/queue.c **** 			{
 659:base/os/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
ARM GAS  /tmp/ccw4aonF.s 			page 13


 660:base/os/FreeRTOS/Source/queue.c **** 			}
 661:base/os/FreeRTOS/Source/queue.c **** 		}
 662:base/os/FreeRTOS/Source/queue.c **** 
 663:base/os/FreeRTOS/Source/queue.c **** 		return xReturn;
 664:base/os/FreeRTOS/Source/queue.c **** 	}
 665:base/os/FreeRTOS/Source/queue.c **** 
 666:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 667:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 668:base/os/FreeRTOS/Source/queue.c **** 
 669:base/os/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 670:base/os/FreeRTOS/Source/queue.c **** 
 671:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 672:base/os/FreeRTOS/Source/queue.c **** 	{
 673:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 674:base/os/FreeRTOS/Source/queue.c **** 
 675:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 676:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 677:base/os/FreeRTOS/Source/queue.c **** 
 678:base/os/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 679:base/os/FreeRTOS/Source/queue.c **** 
 680:base/os/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 681:base/os/FreeRTOS/Source/queue.c **** 		{
 682:base/os/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 683:base/os/FreeRTOS/Source/queue.c **** 
 684:base/os/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 685:base/os/FreeRTOS/Source/queue.c **** 		}
 686:base/os/FreeRTOS/Source/queue.c **** 		else
 687:base/os/FreeRTOS/Source/queue.c **** 		{
 688:base/os/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 689:base/os/FreeRTOS/Source/queue.c **** 		}
 690:base/os/FreeRTOS/Source/queue.c **** 
 691:base/os/FreeRTOS/Source/queue.c **** 		return xHandle;
 692:base/os/FreeRTOS/Source/queue.c **** 	}
 693:base/os/FreeRTOS/Source/queue.c **** 
 694:base/os/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 695:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 696:base/os/FreeRTOS/Source/queue.c **** 
 697:base/os/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 698:base/os/FreeRTOS/Source/queue.c **** 
 699:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 700:base/os/FreeRTOS/Source/queue.c **** 	{
 701:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 702:base/os/FreeRTOS/Source/queue.c **** 
 703:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 704:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 705:base/os/FreeRTOS/Source/queue.c **** 
 706:base/os/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 707:base/os/FreeRTOS/Source/queue.c **** 
 708:base/os/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 709:base/os/FreeRTOS/Source/queue.c **** 		{
 710:base/os/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 711:base/os/FreeRTOS/Source/queue.c **** 
 712:base/os/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 713:base/os/FreeRTOS/Source/queue.c **** 		}
 714:base/os/FreeRTOS/Source/queue.c **** 		else
 715:base/os/FreeRTOS/Source/queue.c **** 		{
 716:base/os/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
ARM GAS  /tmp/ccw4aonF.s 			page 14


 717:base/os/FreeRTOS/Source/queue.c **** 		}
 718:base/os/FreeRTOS/Source/queue.c **** 
 719:base/os/FreeRTOS/Source/queue.c **** 		return xHandle;
 720:base/os/FreeRTOS/Source/queue.c **** 	}
 721:base/os/FreeRTOS/Source/queue.c **** 
 722:base/os/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 723:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 724:base/os/FreeRTOS/Source/queue.c **** 
 725:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 726:base/os/FreeRTOS/Source/queue.c **** {
 727:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 728:base/os/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 729:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 730:base/os/FreeRTOS/Source/queue.c **** 
 731:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 732:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 733:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 734:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 735:base/os/FreeRTOS/Source/queue.c **** 	{
 736:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 737:base/os/FreeRTOS/Source/queue.c **** 	}
 738:base/os/FreeRTOS/Source/queue.c **** 	#endif
 739:base/os/FreeRTOS/Source/queue.c **** 
 740:base/os/FreeRTOS/Source/queue.c **** 
 741:base/os/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 742:base/os/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 743:base/os/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 744:base/os/FreeRTOS/Source/queue.c **** 	for( ;; )
 745:base/os/FreeRTOS/Source/queue.c **** 	{
 746:base/os/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 747:base/os/FreeRTOS/Source/queue.c **** 		{
 748:base/os/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 749:base/os/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 750:base/os/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 751:base/os/FreeRTOS/Source/queue.c **** 			queue is full. */
 752:base/os/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 753:base/os/FreeRTOS/Source/queue.c **** 			{
 754:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 755:base/os/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 756:base/os/FreeRTOS/Source/queue.c **** 
 757:base/os/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 758:base/os/FreeRTOS/Source/queue.c **** 				{
 759:base/os/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 760:base/os/FreeRTOS/Source/queue.c **** 					{
 761:base/os/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 762:base/os/FreeRTOS/Source/queue.c **** 						{
 763:base/os/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 764:base/os/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 765:base/os/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 766:base/os/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 767:base/os/FreeRTOS/Source/queue.c **** 						}
 768:base/os/FreeRTOS/Source/queue.c **** 						else
 769:base/os/FreeRTOS/Source/queue.c **** 						{
 770:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 771:base/os/FreeRTOS/Source/queue.c **** 						}
 772:base/os/FreeRTOS/Source/queue.c **** 					}
 773:base/os/FreeRTOS/Source/queue.c **** 					else
ARM GAS  /tmp/ccw4aonF.s 			page 15


 774:base/os/FreeRTOS/Source/queue.c **** 					{
 775:base/os/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 776:base/os/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 777:base/os/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 778:base/os/FreeRTOS/Source/queue.c **** 						{
 779:base/os/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 780:base/os/FreeRTOS/Source/queue.c **** 							{
 781:base/os/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 782:base/os/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 783:base/os/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 784:base/os/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 785:base/os/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 786:base/os/FreeRTOS/Source/queue.c **** 							}
 787:base/os/FreeRTOS/Source/queue.c **** 							else
 788:base/os/FreeRTOS/Source/queue.c **** 							{
 789:base/os/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 790:base/os/FreeRTOS/Source/queue.c **** 							}
 791:base/os/FreeRTOS/Source/queue.c **** 						}
 792:base/os/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 793:base/os/FreeRTOS/Source/queue.c **** 						{
 794:base/os/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 795:base/os/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 796:base/os/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 797:base/os/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 798:base/os/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:base/os/FreeRTOS/Source/queue.c **** 						}
 800:base/os/FreeRTOS/Source/queue.c **** 						else
 801:base/os/FreeRTOS/Source/queue.c **** 						{
 802:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:base/os/FreeRTOS/Source/queue.c **** 						}
 804:base/os/FreeRTOS/Source/queue.c **** 					}
 805:base/os/FreeRTOS/Source/queue.c **** 				}
 806:base/os/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 807:base/os/FreeRTOS/Source/queue.c **** 				{
 808:base/os/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 809:base/os/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 810:base/os/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 811:base/os/FreeRTOS/Source/queue.c **** 					{
 812:base/os/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 813:base/os/FreeRTOS/Source/queue.c **** 						{
 814:base/os/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 815:base/os/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 816:base/os/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 817:base/os/FreeRTOS/Source/queue.c **** 							takes care of that. */
 818:base/os/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 819:base/os/FreeRTOS/Source/queue.c **** 						}
 820:base/os/FreeRTOS/Source/queue.c **** 						else
 821:base/os/FreeRTOS/Source/queue.c **** 						{
 822:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 823:base/os/FreeRTOS/Source/queue.c **** 						}
 824:base/os/FreeRTOS/Source/queue.c **** 					}
 825:base/os/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 826:base/os/FreeRTOS/Source/queue.c **** 					{
 827:base/os/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 828:base/os/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 829:base/os/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 830:base/os/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
ARM GAS  /tmp/ccw4aonF.s 			page 16


 831:base/os/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 832:base/os/FreeRTOS/Source/queue.c **** 					}
 833:base/os/FreeRTOS/Source/queue.c **** 					else
 834:base/os/FreeRTOS/Source/queue.c **** 					{
 835:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 836:base/os/FreeRTOS/Source/queue.c **** 					}
 837:base/os/FreeRTOS/Source/queue.c **** 				}
 838:base/os/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 839:base/os/FreeRTOS/Source/queue.c **** 
 840:base/os/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 841:base/os/FreeRTOS/Source/queue.c **** 				return pdPASS;
 842:base/os/FreeRTOS/Source/queue.c **** 			}
 843:base/os/FreeRTOS/Source/queue.c **** 			else
 844:base/os/FreeRTOS/Source/queue.c **** 			{
 845:base/os/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 846:base/os/FreeRTOS/Source/queue.c **** 				{
 847:base/os/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 848:base/os/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 849:base/os/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 850:base/os/FreeRTOS/Source/queue.c **** 
 851:base/os/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 852:base/os/FreeRTOS/Source/queue.c **** 					the function. */
 853:base/os/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 854:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 855:base/os/FreeRTOS/Source/queue.c **** 				}
 856:base/os/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 857:base/os/FreeRTOS/Source/queue.c **** 				{
 858:base/os/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 859:base/os/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 860:base/os/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 861:base/os/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 862:base/os/FreeRTOS/Source/queue.c **** 				}
 863:base/os/FreeRTOS/Source/queue.c **** 				else
 864:base/os/FreeRTOS/Source/queue.c **** 				{
 865:base/os/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 866:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 867:base/os/FreeRTOS/Source/queue.c **** 				}
 868:base/os/FreeRTOS/Source/queue.c **** 			}
 869:base/os/FreeRTOS/Source/queue.c **** 		}
 870:base/os/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 871:base/os/FreeRTOS/Source/queue.c **** 
 872:base/os/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 873:base/os/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 874:base/os/FreeRTOS/Source/queue.c **** 
 875:base/os/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 876:base/os/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 877:base/os/FreeRTOS/Source/queue.c **** 
 878:base/os/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 879:base/os/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 880:base/os/FreeRTOS/Source/queue.c **** 		{
 881:base/os/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 882:base/os/FreeRTOS/Source/queue.c **** 			{
 883:base/os/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 884:base/os/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 885:base/os/FreeRTOS/Source/queue.c **** 
 886:base/os/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 887:base/os/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
ARM GAS  /tmp/ccw4aonF.s 			page 17


 888:base/os/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 889:base/os/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 890:base/os/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 891:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 892:base/os/FreeRTOS/Source/queue.c **** 
 893:base/os/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 894:base/os/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 895:base/os/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 896:base/os/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 897:base/os/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 898:base/os/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 899:base/os/FreeRTOS/Source/queue.c **** 				{
 900:base/os/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 901:base/os/FreeRTOS/Source/queue.c **** 				}
 902:base/os/FreeRTOS/Source/queue.c **** 			}
 903:base/os/FreeRTOS/Source/queue.c **** 			else
 904:base/os/FreeRTOS/Source/queue.c **** 			{
 905:base/os/FreeRTOS/Source/queue.c **** 				/* Try again. */
 906:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 907:base/os/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 908:base/os/FreeRTOS/Source/queue.c **** 			}
 909:base/os/FreeRTOS/Source/queue.c **** 		}
 910:base/os/FreeRTOS/Source/queue.c **** 		else
 911:base/os/FreeRTOS/Source/queue.c **** 		{
 912:base/os/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 913:base/os/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 914:base/os/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 915:base/os/FreeRTOS/Source/queue.c **** 
 916:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 917:base/os/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 918:base/os/FreeRTOS/Source/queue.c **** 		}
 919:base/os/FreeRTOS/Source/queue.c **** 	}
 920:base/os/FreeRTOS/Source/queue.c **** }
 921:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 922:base/os/FreeRTOS/Source/queue.c **** 
 923:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 924:base/os/FreeRTOS/Source/queue.c **** {
 925:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 926:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 927:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 928:base/os/FreeRTOS/Source/queue.c **** 
 929:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 930:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 931:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 932:base/os/FreeRTOS/Source/queue.c **** 
 933:base/os/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 934:base/os/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 935:base/os/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 936:base/os/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 937:base/os/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 938:base/os/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 939:base/os/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 940:base/os/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 941:base/os/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 942:base/os/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 943:base/os/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 944:base/os/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
ARM GAS  /tmp/ccw4aonF.s 			page 18


 945:base/os/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 946:base/os/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 947:base/os/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 948:base/os/FreeRTOS/Source/queue.c **** 
 949:base/os/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 950:base/os/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 951:base/os/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 952:base/os/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 953:base/os/FreeRTOS/Source/queue.c **** 	post). */
 954:base/os/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 955:base/os/FreeRTOS/Source/queue.c **** 	{
 956:base/os/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 957:base/os/FreeRTOS/Source/queue.c **** 		{
 958:base/os/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 959:base/os/FreeRTOS/Source/queue.c **** 
 960:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 961:base/os/FreeRTOS/Source/queue.c **** 
 962:base/os/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 963:base/os/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 964:base/os/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 965:base/os/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 966:base/os/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 967:base/os/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 968:base/os/FreeRTOS/Source/queue.c **** 
 969:base/os/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 970:base/os/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 971:base/os/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 972:base/os/FreeRTOS/Source/queue.c **** 			{
 973:base/os/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 974:base/os/FreeRTOS/Source/queue.c **** 				{
 975:base/os/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 976:base/os/FreeRTOS/Source/queue.c **** 					{
 977:base/os/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 978:base/os/FreeRTOS/Source/queue.c **** 						{
 979:base/os/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 980:base/os/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 981:base/os/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 982:base/os/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 983:base/os/FreeRTOS/Source/queue.c **** 							{
 984:base/os/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 985:base/os/FreeRTOS/Source/queue.c **** 							}
 986:base/os/FreeRTOS/Source/queue.c **** 							else
 987:base/os/FreeRTOS/Source/queue.c **** 							{
 988:base/os/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 989:base/os/FreeRTOS/Source/queue.c **** 							}
 990:base/os/FreeRTOS/Source/queue.c **** 						}
 991:base/os/FreeRTOS/Source/queue.c **** 						else
 992:base/os/FreeRTOS/Source/queue.c **** 						{
 993:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 994:base/os/FreeRTOS/Source/queue.c **** 						}
 995:base/os/FreeRTOS/Source/queue.c **** 					}
 996:base/os/FreeRTOS/Source/queue.c **** 					else
 997:base/os/FreeRTOS/Source/queue.c **** 					{
 998:base/os/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 999:base/os/FreeRTOS/Source/queue.c **** 						{
1000:base/os/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1001:base/os/FreeRTOS/Source/queue.c **** 							{
ARM GAS  /tmp/ccw4aonF.s 			page 19


1002:base/os/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1003:base/os/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1004:base/os/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1005:base/os/FreeRTOS/Source/queue.c **** 								{
1006:base/os/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1007:base/os/FreeRTOS/Source/queue.c **** 								}
1008:base/os/FreeRTOS/Source/queue.c **** 								else
1009:base/os/FreeRTOS/Source/queue.c **** 								{
1010:base/os/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1011:base/os/FreeRTOS/Source/queue.c **** 								}
1012:base/os/FreeRTOS/Source/queue.c **** 							}
1013:base/os/FreeRTOS/Source/queue.c **** 							else
1014:base/os/FreeRTOS/Source/queue.c **** 							{
1015:base/os/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1016:base/os/FreeRTOS/Source/queue.c **** 							}
1017:base/os/FreeRTOS/Source/queue.c **** 						}
1018:base/os/FreeRTOS/Source/queue.c **** 						else
1019:base/os/FreeRTOS/Source/queue.c **** 						{
1020:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1021:base/os/FreeRTOS/Source/queue.c **** 						}
1022:base/os/FreeRTOS/Source/queue.c **** 					}
1023:base/os/FreeRTOS/Source/queue.c **** 				}
1024:base/os/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1025:base/os/FreeRTOS/Source/queue.c **** 				{
1026:base/os/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1027:base/os/FreeRTOS/Source/queue.c **** 					{
1028:base/os/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1029:base/os/FreeRTOS/Source/queue.c **** 						{
1030:base/os/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1031:base/os/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1032:base/os/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1033:base/os/FreeRTOS/Source/queue.c **** 							{
1034:base/os/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1035:base/os/FreeRTOS/Source/queue.c **** 							}
1036:base/os/FreeRTOS/Source/queue.c **** 							else
1037:base/os/FreeRTOS/Source/queue.c **** 							{
1038:base/os/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1039:base/os/FreeRTOS/Source/queue.c **** 							}
1040:base/os/FreeRTOS/Source/queue.c **** 						}
1041:base/os/FreeRTOS/Source/queue.c **** 						else
1042:base/os/FreeRTOS/Source/queue.c **** 						{
1043:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1044:base/os/FreeRTOS/Source/queue.c **** 						}
1045:base/os/FreeRTOS/Source/queue.c **** 					}
1046:base/os/FreeRTOS/Source/queue.c **** 					else
1047:base/os/FreeRTOS/Source/queue.c **** 					{
1048:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1049:base/os/FreeRTOS/Source/queue.c **** 					}
1050:base/os/FreeRTOS/Source/queue.c **** 				}
1051:base/os/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1052:base/os/FreeRTOS/Source/queue.c **** 			}
1053:base/os/FreeRTOS/Source/queue.c **** 			else
1054:base/os/FreeRTOS/Source/queue.c **** 			{
1055:base/os/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1056:base/os/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1057:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1058:base/os/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccw4aonF.s 			page 20


1059:base/os/FreeRTOS/Source/queue.c **** 
1060:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1061:base/os/FreeRTOS/Source/queue.c **** 		}
1062:base/os/FreeRTOS/Source/queue.c **** 		else
1063:base/os/FreeRTOS/Source/queue.c **** 		{
1064:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1065:base/os/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1066:base/os/FreeRTOS/Source/queue.c **** 		}
1067:base/os/FreeRTOS/Source/queue.c **** 	}
1068:base/os/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1069:base/os/FreeRTOS/Source/queue.c **** 
1070:base/os/FreeRTOS/Source/queue.c **** 	return xReturn;
1071:base/os/FreeRTOS/Source/queue.c **** }
1072:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1073:base/os/FreeRTOS/Source/queue.c **** 
1074:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1075:base/os/FreeRTOS/Source/queue.c **** {
1076:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1077:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1078:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1079:base/os/FreeRTOS/Source/queue.c **** 
1080:base/os/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1081:base/os/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1082:base/os/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:base/os/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:base/os/FreeRTOS/Source/queue.c **** 	post). */
1085:base/os/FreeRTOS/Source/queue.c **** 
1086:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1087:base/os/FreeRTOS/Source/queue.c **** 
1088:base/os/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1089:base/os/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1090:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1091:base/os/FreeRTOS/Source/queue.c **** 
1092:base/os/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1093:base/os/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1094:base/os/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1095:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1096:base/os/FreeRTOS/Source/queue.c **** 
1097:base/os/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1098:base/os/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1099:base/os/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1100:base/os/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1101:base/os/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1102:base/os/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1103:base/os/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1104:base/os/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1105:base/os/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1106:base/os/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1107:base/os/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1108:base/os/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1109:base/os/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1110:base/os/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1111:base/os/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1112:base/os/FreeRTOS/Source/queue.c **** 
1113:base/os/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1114:base/os/FreeRTOS/Source/queue.c **** 	{
1115:base/os/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
ARM GAS  /tmp/ccw4aonF.s 			page 21


1116:base/os/FreeRTOS/Source/queue.c **** 
1117:base/os/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1118:base/os/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1119:base/os/FreeRTOS/Source/queue.c **** 		space'. */
1120:base/os/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1121:base/os/FreeRTOS/Source/queue.c **** 		{
1122:base/os/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1123:base/os/FreeRTOS/Source/queue.c **** 
1124:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1125:base/os/FreeRTOS/Source/queue.c **** 
1126:base/os/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1127:base/os/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1128:base/os/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1129:base/os/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1130:base/os/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1131:base/os/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1132:base/os/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1133:base/os/FreeRTOS/Source/queue.c **** 
1134:base/os/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1135:base/os/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1136:base/os/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1137:base/os/FreeRTOS/Source/queue.c **** 			{
1138:base/os/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1139:base/os/FreeRTOS/Source/queue.c **** 				{
1140:base/os/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1141:base/os/FreeRTOS/Source/queue.c **** 					{
1142:base/os/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1143:base/os/FreeRTOS/Source/queue.c **** 						{
1144:base/os/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1145:base/os/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1146:base/os/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1147:base/os/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1148:base/os/FreeRTOS/Source/queue.c **** 							{
1149:base/os/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1150:base/os/FreeRTOS/Source/queue.c **** 							}
1151:base/os/FreeRTOS/Source/queue.c **** 							else
1152:base/os/FreeRTOS/Source/queue.c **** 							{
1153:base/os/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1154:base/os/FreeRTOS/Source/queue.c **** 							}
1155:base/os/FreeRTOS/Source/queue.c **** 						}
1156:base/os/FreeRTOS/Source/queue.c **** 						else
1157:base/os/FreeRTOS/Source/queue.c **** 						{
1158:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1159:base/os/FreeRTOS/Source/queue.c **** 						}
1160:base/os/FreeRTOS/Source/queue.c **** 					}
1161:base/os/FreeRTOS/Source/queue.c **** 					else
1162:base/os/FreeRTOS/Source/queue.c **** 					{
1163:base/os/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1164:base/os/FreeRTOS/Source/queue.c **** 						{
1165:base/os/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1166:base/os/FreeRTOS/Source/queue.c **** 							{
1167:base/os/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1168:base/os/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1169:base/os/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1170:base/os/FreeRTOS/Source/queue.c **** 								{
1171:base/os/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1172:base/os/FreeRTOS/Source/queue.c **** 								}
ARM GAS  /tmp/ccw4aonF.s 			page 22


1173:base/os/FreeRTOS/Source/queue.c **** 								else
1174:base/os/FreeRTOS/Source/queue.c **** 								{
1175:base/os/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1176:base/os/FreeRTOS/Source/queue.c **** 								}
1177:base/os/FreeRTOS/Source/queue.c **** 							}
1178:base/os/FreeRTOS/Source/queue.c **** 							else
1179:base/os/FreeRTOS/Source/queue.c **** 							{
1180:base/os/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1181:base/os/FreeRTOS/Source/queue.c **** 							}
1182:base/os/FreeRTOS/Source/queue.c **** 						}
1183:base/os/FreeRTOS/Source/queue.c **** 						else
1184:base/os/FreeRTOS/Source/queue.c **** 						{
1185:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1186:base/os/FreeRTOS/Source/queue.c **** 						}
1187:base/os/FreeRTOS/Source/queue.c **** 					}
1188:base/os/FreeRTOS/Source/queue.c **** 				}
1189:base/os/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1190:base/os/FreeRTOS/Source/queue.c **** 				{
1191:base/os/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1192:base/os/FreeRTOS/Source/queue.c **** 					{
1193:base/os/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1194:base/os/FreeRTOS/Source/queue.c **** 						{
1195:base/os/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1196:base/os/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1197:base/os/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1198:base/os/FreeRTOS/Source/queue.c **** 							{
1199:base/os/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1200:base/os/FreeRTOS/Source/queue.c **** 							}
1201:base/os/FreeRTOS/Source/queue.c **** 							else
1202:base/os/FreeRTOS/Source/queue.c **** 							{
1203:base/os/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1204:base/os/FreeRTOS/Source/queue.c **** 							}
1205:base/os/FreeRTOS/Source/queue.c **** 						}
1206:base/os/FreeRTOS/Source/queue.c **** 						else
1207:base/os/FreeRTOS/Source/queue.c **** 						{
1208:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1209:base/os/FreeRTOS/Source/queue.c **** 						}
1210:base/os/FreeRTOS/Source/queue.c **** 					}
1211:base/os/FreeRTOS/Source/queue.c **** 					else
1212:base/os/FreeRTOS/Source/queue.c **** 					{
1213:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1214:base/os/FreeRTOS/Source/queue.c **** 					}
1215:base/os/FreeRTOS/Source/queue.c **** 				}
1216:base/os/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1217:base/os/FreeRTOS/Source/queue.c **** 			}
1218:base/os/FreeRTOS/Source/queue.c **** 			else
1219:base/os/FreeRTOS/Source/queue.c **** 			{
1220:base/os/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1221:base/os/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1222:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1223:base/os/FreeRTOS/Source/queue.c **** 			}
1224:base/os/FreeRTOS/Source/queue.c **** 
1225:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1226:base/os/FreeRTOS/Source/queue.c **** 		}
1227:base/os/FreeRTOS/Source/queue.c **** 		else
1228:base/os/FreeRTOS/Source/queue.c **** 		{
1229:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
ARM GAS  /tmp/ccw4aonF.s 			page 23


1230:base/os/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1231:base/os/FreeRTOS/Source/queue.c **** 		}
1232:base/os/FreeRTOS/Source/queue.c **** 	}
1233:base/os/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1234:base/os/FreeRTOS/Source/queue.c **** 
1235:base/os/FreeRTOS/Source/queue.c **** 	return xReturn;
1236:base/os/FreeRTOS/Source/queue.c **** }
1237:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1238:base/os/FreeRTOS/Source/queue.c **** 
1239:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1240:base/os/FreeRTOS/Source/queue.c **** {
1241:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1242:base/os/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1243:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1244:base/os/FreeRTOS/Source/queue.c **** 
1245:base/os/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1246:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1247:base/os/FreeRTOS/Source/queue.c **** 
1248:base/os/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1249:base/os/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1250:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1251:base/os/FreeRTOS/Source/queue.c **** 
1252:base/os/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1253:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1254:base/os/FreeRTOS/Source/queue.c **** 	{
1255:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1256:base/os/FreeRTOS/Source/queue.c **** 	}
1257:base/os/FreeRTOS/Source/queue.c **** 	#endif
1258:base/os/FreeRTOS/Source/queue.c **** 
1259:base/os/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1260:base/os/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1261:base/os/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1262:base/os/FreeRTOS/Source/queue.c **** 
1263:base/os/FreeRTOS/Source/queue.c **** 	for( ;; )
1264:base/os/FreeRTOS/Source/queue.c **** 	{
1265:base/os/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1266:base/os/FreeRTOS/Source/queue.c **** 		{
1267:base/os/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1268:base/os/FreeRTOS/Source/queue.c **** 
1269:base/os/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1270:base/os/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1271:base/os/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1272:base/os/FreeRTOS/Source/queue.c **** 			{
1273:base/os/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1274:base/os/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1275:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1276:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1277:base/os/FreeRTOS/Source/queue.c **** 
1278:base/os/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1279:base/os/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1280:base/os/FreeRTOS/Source/queue.c **** 				task. */
1281:base/os/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1282:base/os/FreeRTOS/Source/queue.c **** 				{
1283:base/os/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1284:base/os/FreeRTOS/Source/queue.c **** 					{
1285:base/os/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1286:base/os/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/ccw4aonF.s 			page 24


1287:base/os/FreeRTOS/Source/queue.c **** 					else
1288:base/os/FreeRTOS/Source/queue.c **** 					{
1289:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1290:base/os/FreeRTOS/Source/queue.c **** 					}
1291:base/os/FreeRTOS/Source/queue.c **** 				}
1292:base/os/FreeRTOS/Source/queue.c **** 				else
1293:base/os/FreeRTOS/Source/queue.c **** 				{
1294:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1295:base/os/FreeRTOS/Source/queue.c **** 				}
1296:base/os/FreeRTOS/Source/queue.c **** 
1297:base/os/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1298:base/os/FreeRTOS/Source/queue.c **** 				return pdPASS;
1299:base/os/FreeRTOS/Source/queue.c **** 			}
1300:base/os/FreeRTOS/Source/queue.c **** 			else
1301:base/os/FreeRTOS/Source/queue.c **** 			{
1302:base/os/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1303:base/os/FreeRTOS/Source/queue.c **** 				{
1304:base/os/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1305:base/os/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1306:base/os/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1307:base/os/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1308:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1309:base/os/FreeRTOS/Source/queue.c **** 				}
1310:base/os/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1311:base/os/FreeRTOS/Source/queue.c **** 				{
1312:base/os/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1313:base/os/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1314:base/os/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1315:base/os/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1316:base/os/FreeRTOS/Source/queue.c **** 				}
1317:base/os/FreeRTOS/Source/queue.c **** 				else
1318:base/os/FreeRTOS/Source/queue.c **** 				{
1319:base/os/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1320:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1321:base/os/FreeRTOS/Source/queue.c **** 				}
1322:base/os/FreeRTOS/Source/queue.c **** 			}
1323:base/os/FreeRTOS/Source/queue.c **** 		}
1324:base/os/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1325:base/os/FreeRTOS/Source/queue.c **** 
1326:base/os/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1327:base/os/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1328:base/os/FreeRTOS/Source/queue.c **** 
1329:base/os/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1330:base/os/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1331:base/os/FreeRTOS/Source/queue.c **** 
1332:base/os/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1333:base/os/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1334:base/os/FreeRTOS/Source/queue.c **** 		{
1335:base/os/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1336:base/os/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1337:base/os/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1338:base/os/FreeRTOS/Source/queue.c **** 			{
1339:base/os/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1340:base/os/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1341:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1342:base/os/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1343:base/os/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/ccw4aonF.s 			page 25


1344:base/os/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1345:base/os/FreeRTOS/Source/queue.c **** 				}
1346:base/os/FreeRTOS/Source/queue.c **** 				else
1347:base/os/FreeRTOS/Source/queue.c **** 				{
1348:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1349:base/os/FreeRTOS/Source/queue.c **** 				}
1350:base/os/FreeRTOS/Source/queue.c **** 			}
1351:base/os/FreeRTOS/Source/queue.c **** 			else
1352:base/os/FreeRTOS/Source/queue.c **** 			{
1353:base/os/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1354:base/os/FreeRTOS/Source/queue.c **** 				data. */
1355:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1356:base/os/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1357:base/os/FreeRTOS/Source/queue.c **** 			}
1358:base/os/FreeRTOS/Source/queue.c **** 		}
1359:base/os/FreeRTOS/Source/queue.c **** 		else
1360:base/os/FreeRTOS/Source/queue.c **** 		{
1361:base/os/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1362:base/os/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1363:base/os/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1364:base/os/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1365:base/os/FreeRTOS/Source/queue.c **** 
1366:base/os/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1367:base/os/FreeRTOS/Source/queue.c **** 			{
1368:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1369:base/os/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1370:base/os/FreeRTOS/Source/queue.c **** 			}
1371:base/os/FreeRTOS/Source/queue.c **** 			else
1372:base/os/FreeRTOS/Source/queue.c **** 			{
1373:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1374:base/os/FreeRTOS/Source/queue.c **** 			}
1375:base/os/FreeRTOS/Source/queue.c **** 		}
1376:base/os/FreeRTOS/Source/queue.c **** 	}
1377:base/os/FreeRTOS/Source/queue.c **** }
1378:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1379:base/os/FreeRTOS/Source/queue.c **** 
1380:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1381:base/os/FreeRTOS/Source/queue.c **** {
1382:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1383:base/os/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1384:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1385:base/os/FreeRTOS/Source/queue.c **** 
1386:base/os/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1387:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1388:base/os/FreeRTOS/Source/queue.c **** #endif
1389:base/os/FreeRTOS/Source/queue.c **** 
1390:base/os/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1391:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1392:base/os/FreeRTOS/Source/queue.c **** 
1393:base/os/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1394:base/os/FreeRTOS/Source/queue.c **** 	0. */
1395:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1396:base/os/FreeRTOS/Source/queue.c **** 
1397:base/os/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1398:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1399:base/os/FreeRTOS/Source/queue.c **** 	{
1400:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
ARM GAS  /tmp/ccw4aonF.s 			page 26


1401:base/os/FreeRTOS/Source/queue.c **** 	}
1402:base/os/FreeRTOS/Source/queue.c **** 	#endif
1403:base/os/FreeRTOS/Source/queue.c **** 
1404:base/os/FreeRTOS/Source/queue.c **** 
1405:base/os/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1406:base/os/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1407:base/os/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1408:base/os/FreeRTOS/Source/queue.c **** 
1409:base/os/FreeRTOS/Source/queue.c **** 	for( ;; )
1410:base/os/FreeRTOS/Source/queue.c **** 	{
1411:base/os/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1412:base/os/FreeRTOS/Source/queue.c **** 		{
1413:base/os/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1414:base/os/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1415:base/os/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1416:base/os/FreeRTOS/Source/queue.c **** 
1417:base/os/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1418:base/os/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1419:base/os/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1420:base/os/FreeRTOS/Source/queue.c **** 			{
1421:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1422:base/os/FreeRTOS/Source/queue.c **** 
1423:base/os/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1424:base/os/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1425:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1426:base/os/FreeRTOS/Source/queue.c **** 
1427:base/os/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1428:base/os/FreeRTOS/Source/queue.c **** 				{
1429:base/os/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1430:base/os/FreeRTOS/Source/queue.c **** 					{
1431:base/os/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1432:base/os/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1433:base/os/FreeRTOS/Source/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1434:base/os/FreeRTOS/Source/queue.c **** 					}
1435:base/os/FreeRTOS/Source/queue.c **** 					else
1436:base/os/FreeRTOS/Source/queue.c **** 					{
1437:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1438:base/os/FreeRTOS/Source/queue.c **** 					}
1439:base/os/FreeRTOS/Source/queue.c **** 				}
1440:base/os/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1441:base/os/FreeRTOS/Source/queue.c **** 
1442:base/os/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1443:base/os/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1444:base/os/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1445:base/os/FreeRTOS/Source/queue.c **** 				{
1446:base/os/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1447:base/os/FreeRTOS/Source/queue.c **** 					{
1448:base/os/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1449:base/os/FreeRTOS/Source/queue.c **** 					}
1450:base/os/FreeRTOS/Source/queue.c **** 					else
1451:base/os/FreeRTOS/Source/queue.c **** 					{
1452:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1453:base/os/FreeRTOS/Source/queue.c **** 					}
1454:base/os/FreeRTOS/Source/queue.c **** 				}
1455:base/os/FreeRTOS/Source/queue.c **** 				else
1456:base/os/FreeRTOS/Source/queue.c **** 				{
1457:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccw4aonF.s 			page 27


1458:base/os/FreeRTOS/Source/queue.c **** 				}
1459:base/os/FreeRTOS/Source/queue.c **** 
1460:base/os/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1461:base/os/FreeRTOS/Source/queue.c **** 				return pdPASS;
1462:base/os/FreeRTOS/Source/queue.c **** 			}
1463:base/os/FreeRTOS/Source/queue.c **** 			else
1464:base/os/FreeRTOS/Source/queue.c **** 			{
1465:base/os/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1466:base/os/FreeRTOS/Source/queue.c **** 				{
1467:base/os/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1468:base/os/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1469:base/os/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1470:base/os/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1471:base/os/FreeRTOS/Source/queue.c **** 					{
1472:base/os/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1473:base/os/FreeRTOS/Source/queue.c **** 					}
1474:base/os/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1475:base/os/FreeRTOS/Source/queue.c **** 
1476:base/os/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1477:base/os/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1478:base/os/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1479:base/os/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1480:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1481:base/os/FreeRTOS/Source/queue.c **** 				}
1482:base/os/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1483:base/os/FreeRTOS/Source/queue.c **** 				{
1484:base/os/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1485:base/os/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1486:base/os/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1487:base/os/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1488:base/os/FreeRTOS/Source/queue.c **** 				}
1489:base/os/FreeRTOS/Source/queue.c **** 				else
1490:base/os/FreeRTOS/Source/queue.c **** 				{
1491:base/os/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1492:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1493:base/os/FreeRTOS/Source/queue.c **** 				}
1494:base/os/FreeRTOS/Source/queue.c **** 			}
1495:base/os/FreeRTOS/Source/queue.c **** 		}
1496:base/os/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1497:base/os/FreeRTOS/Source/queue.c **** 
1498:base/os/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1499:base/os/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1500:base/os/FreeRTOS/Source/queue.c **** 
1501:base/os/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1502:base/os/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1503:base/os/FreeRTOS/Source/queue.c **** 
1504:base/os/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1505:base/os/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1506:base/os/FreeRTOS/Source/queue.c **** 		{
1507:base/os/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1508:base/os/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1509:base/os/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1510:base/os/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1511:base/os/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1512:base/os/FreeRTOS/Source/queue.c **** 			{
1513:base/os/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1514:base/os/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccw4aonF.s 			page 28


1515:base/os/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1516:base/os/FreeRTOS/Source/queue.c **** 				{
1517:base/os/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1518:base/os/FreeRTOS/Source/queue.c **** 					{
1519:base/os/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1520:base/os/FreeRTOS/Source/queue.c **** 						{
1521:base/os/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1522:base/os/FreeRTOS/Source/queue.c **** 						}
1523:base/os/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1524:base/os/FreeRTOS/Source/queue.c **** 					}
1525:base/os/FreeRTOS/Source/queue.c **** 					else
1526:base/os/FreeRTOS/Source/queue.c **** 					{
1527:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1528:base/os/FreeRTOS/Source/queue.c **** 					}
1529:base/os/FreeRTOS/Source/queue.c **** 				}
1530:base/os/FreeRTOS/Source/queue.c **** 				#endif
1531:base/os/FreeRTOS/Source/queue.c **** 
1532:base/os/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1533:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1534:base/os/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1535:base/os/FreeRTOS/Source/queue.c **** 				{
1536:base/os/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1537:base/os/FreeRTOS/Source/queue.c **** 				}
1538:base/os/FreeRTOS/Source/queue.c **** 				else
1539:base/os/FreeRTOS/Source/queue.c **** 				{
1540:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1541:base/os/FreeRTOS/Source/queue.c **** 				}
1542:base/os/FreeRTOS/Source/queue.c **** 			}
1543:base/os/FreeRTOS/Source/queue.c **** 			else
1544:base/os/FreeRTOS/Source/queue.c **** 			{
1545:base/os/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1546:base/os/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1547:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1548:base/os/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1549:base/os/FreeRTOS/Source/queue.c **** 			}
1550:base/os/FreeRTOS/Source/queue.c **** 		}
1551:base/os/FreeRTOS/Source/queue.c **** 		else
1552:base/os/FreeRTOS/Source/queue.c **** 		{
1553:base/os/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1554:base/os/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1555:base/os/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1556:base/os/FreeRTOS/Source/queue.c **** 
1557:base/os/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1558:base/os/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1559:base/os/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1560:base/os/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1561:base/os/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1562:base/os/FreeRTOS/Source/queue.c **** 			{
1563:base/os/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1564:base/os/FreeRTOS/Source/queue.c **** 				{
1565:base/os/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1566:base/os/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1567:base/os/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1568:base/os/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1569:base/os/FreeRTOS/Source/queue.c **** 					{
1570:base/os/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1571:base/os/FreeRTOS/Source/queue.c **** 						{
ARM GAS  /tmp/ccw4aonF.s 			page 29


1572:base/os/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1573:base/os/FreeRTOS/Source/queue.c **** 
1574:base/os/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1575:base/os/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1576:base/os/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1577:base/os/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1578:base/os/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1579:base/os/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1580:base/os/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1581:base/os/FreeRTOS/Source/queue.c **** 						}
1582:base/os/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1583:base/os/FreeRTOS/Source/queue.c **** 					}
1584:base/os/FreeRTOS/Source/queue.c **** 				}
1585:base/os/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1586:base/os/FreeRTOS/Source/queue.c **** 
1587:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1588:base/os/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1589:base/os/FreeRTOS/Source/queue.c **** 			}
1590:base/os/FreeRTOS/Source/queue.c **** 			else
1591:base/os/FreeRTOS/Source/queue.c **** 			{
1592:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1593:base/os/FreeRTOS/Source/queue.c **** 			}
1594:base/os/FreeRTOS/Source/queue.c **** 		}
1595:base/os/FreeRTOS/Source/queue.c **** 	}
1596:base/os/FreeRTOS/Source/queue.c **** }
1597:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1598:base/os/FreeRTOS/Source/queue.c **** 
1599:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1600:base/os/FreeRTOS/Source/queue.c **** {
1601:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1602:base/os/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1603:base/os/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1604:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1605:base/os/FreeRTOS/Source/queue.c **** 
1606:base/os/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1607:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1608:base/os/FreeRTOS/Source/queue.c **** 
1609:base/os/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1610:base/os/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1611:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1612:base/os/FreeRTOS/Source/queue.c **** 
1613:base/os/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1614:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1615:base/os/FreeRTOS/Source/queue.c **** 	{
1616:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1617:base/os/FreeRTOS/Source/queue.c **** 	}
1618:base/os/FreeRTOS/Source/queue.c **** 	#endif
1619:base/os/FreeRTOS/Source/queue.c **** 
1620:base/os/FreeRTOS/Source/queue.c **** 
1621:base/os/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1622:base/os/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1623:base/os/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1624:base/os/FreeRTOS/Source/queue.c **** 
1625:base/os/FreeRTOS/Source/queue.c **** 	for( ;; )
1626:base/os/FreeRTOS/Source/queue.c **** 	{
1627:base/os/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1628:base/os/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccw4aonF.s 			page 30


1629:base/os/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1630:base/os/FreeRTOS/Source/queue.c **** 
1631:base/os/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1632:base/os/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1633:base/os/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1634:base/os/FreeRTOS/Source/queue.c **** 			{
1635:base/os/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1636:base/os/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1637:base/os/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1638:base/os/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1639:base/os/FreeRTOS/Source/queue.c **** 
1640:base/os/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1641:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1642:base/os/FreeRTOS/Source/queue.c **** 
1643:base/os/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1644:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1645:base/os/FreeRTOS/Source/queue.c **** 
1646:base/os/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1647:base/os/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1648:base/os/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1649:base/os/FreeRTOS/Source/queue.c **** 				{
1650:base/os/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1651:base/os/FreeRTOS/Source/queue.c **** 					{
1652:base/os/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1653:base/os/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1654:base/os/FreeRTOS/Source/queue.c **** 					}
1655:base/os/FreeRTOS/Source/queue.c **** 					else
1656:base/os/FreeRTOS/Source/queue.c **** 					{
1657:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1658:base/os/FreeRTOS/Source/queue.c **** 					}
1659:base/os/FreeRTOS/Source/queue.c **** 				}
1660:base/os/FreeRTOS/Source/queue.c **** 				else
1661:base/os/FreeRTOS/Source/queue.c **** 				{
1662:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1663:base/os/FreeRTOS/Source/queue.c **** 				}
1664:base/os/FreeRTOS/Source/queue.c **** 
1665:base/os/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1666:base/os/FreeRTOS/Source/queue.c **** 				return pdPASS;
1667:base/os/FreeRTOS/Source/queue.c **** 			}
1668:base/os/FreeRTOS/Source/queue.c **** 			else
1669:base/os/FreeRTOS/Source/queue.c **** 			{
1670:base/os/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1671:base/os/FreeRTOS/Source/queue.c **** 				{
1672:base/os/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1673:base/os/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1674:base/os/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1675:base/os/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1676:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1677:base/os/FreeRTOS/Source/queue.c **** 				}
1678:base/os/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1679:base/os/FreeRTOS/Source/queue.c **** 				{
1680:base/os/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1681:base/os/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1682:base/os/FreeRTOS/Source/queue.c **** 					state. */
1683:base/os/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1684:base/os/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1685:base/os/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccw4aonF.s 			page 31


1686:base/os/FreeRTOS/Source/queue.c **** 				else
1687:base/os/FreeRTOS/Source/queue.c **** 				{
1688:base/os/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1689:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1690:base/os/FreeRTOS/Source/queue.c **** 				}
1691:base/os/FreeRTOS/Source/queue.c **** 			}
1692:base/os/FreeRTOS/Source/queue.c **** 		}
1693:base/os/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1694:base/os/FreeRTOS/Source/queue.c **** 
1695:base/os/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1696:base/os/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1697:base/os/FreeRTOS/Source/queue.c **** 
1698:base/os/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1699:base/os/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1700:base/os/FreeRTOS/Source/queue.c **** 
1701:base/os/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1702:base/os/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1703:base/os/FreeRTOS/Source/queue.c **** 		{
1704:base/os/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1705:base/os/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1706:base/os/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1707:base/os/FreeRTOS/Source/queue.c **** 			{
1708:base/os/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1709:base/os/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1710:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1711:base/os/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1712:base/os/FreeRTOS/Source/queue.c **** 				{
1713:base/os/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1714:base/os/FreeRTOS/Source/queue.c **** 				}
1715:base/os/FreeRTOS/Source/queue.c **** 				else
1716:base/os/FreeRTOS/Source/queue.c **** 				{
1717:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1718:base/os/FreeRTOS/Source/queue.c **** 				}
1719:base/os/FreeRTOS/Source/queue.c **** 			}
1720:base/os/FreeRTOS/Source/queue.c **** 			else
1721:base/os/FreeRTOS/Source/queue.c **** 			{
1722:base/os/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1723:base/os/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1724:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1725:base/os/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1726:base/os/FreeRTOS/Source/queue.c **** 			}
1727:base/os/FreeRTOS/Source/queue.c **** 		}
1728:base/os/FreeRTOS/Source/queue.c **** 		else
1729:base/os/FreeRTOS/Source/queue.c **** 		{
1730:base/os/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1731:base/os/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1732:base/os/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1733:base/os/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1734:base/os/FreeRTOS/Source/queue.c **** 
1735:base/os/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1736:base/os/FreeRTOS/Source/queue.c **** 			{
1737:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1738:base/os/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1739:base/os/FreeRTOS/Source/queue.c **** 			}
1740:base/os/FreeRTOS/Source/queue.c **** 			else
1741:base/os/FreeRTOS/Source/queue.c **** 			{
1742:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccw4aonF.s 			page 32


1743:base/os/FreeRTOS/Source/queue.c **** 			}
1744:base/os/FreeRTOS/Source/queue.c **** 		}
1745:base/os/FreeRTOS/Source/queue.c **** 	}
1746:base/os/FreeRTOS/Source/queue.c **** }
1747:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1748:base/os/FreeRTOS/Source/queue.c **** 
1749:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1750:base/os/FreeRTOS/Source/queue.c **** {
1751:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1752:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1753:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1754:base/os/FreeRTOS/Source/queue.c **** 
1755:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1756:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1757:base/os/FreeRTOS/Source/queue.c **** 
1758:base/os/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1759:base/os/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1760:base/os/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1761:base/os/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1762:base/os/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1763:base/os/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1764:base/os/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1765:base/os/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1766:base/os/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1767:base/os/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1768:base/os/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1769:base/os/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1770:base/os/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1771:base/os/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1772:base/os/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1773:base/os/FreeRTOS/Source/queue.c **** 
1774:base/os/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1775:base/os/FreeRTOS/Source/queue.c **** 	{
1776:base/os/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1777:base/os/FreeRTOS/Source/queue.c **** 
1778:base/os/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1779:base/os/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1780:base/os/FreeRTOS/Source/queue.c **** 		{
1781:base/os/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1782:base/os/FreeRTOS/Source/queue.c **** 
1783:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1784:base/os/FreeRTOS/Source/queue.c **** 
1785:base/os/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1786:base/os/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1787:base/os/FreeRTOS/Source/queue.c **** 
1788:base/os/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1789:base/os/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1790:base/os/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1791:base/os/FreeRTOS/Source/queue.c **** 			locked. */
1792:base/os/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1793:base/os/FreeRTOS/Source/queue.c **** 			{
1794:base/os/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1795:base/os/FreeRTOS/Source/queue.c **** 				{
1796:base/os/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1797:base/os/FreeRTOS/Source/queue.c **** 					{
1798:base/os/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1799:base/os/FreeRTOS/Source/queue.c **** 						force a context switch. */
ARM GAS  /tmp/ccw4aonF.s 			page 33


1800:base/os/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1801:base/os/FreeRTOS/Source/queue.c **** 						{
1802:base/os/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1803:base/os/FreeRTOS/Source/queue.c **** 						}
1804:base/os/FreeRTOS/Source/queue.c **** 						else
1805:base/os/FreeRTOS/Source/queue.c **** 						{
1806:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1807:base/os/FreeRTOS/Source/queue.c **** 						}
1808:base/os/FreeRTOS/Source/queue.c **** 					}
1809:base/os/FreeRTOS/Source/queue.c **** 					else
1810:base/os/FreeRTOS/Source/queue.c **** 					{
1811:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1812:base/os/FreeRTOS/Source/queue.c **** 					}
1813:base/os/FreeRTOS/Source/queue.c **** 				}
1814:base/os/FreeRTOS/Source/queue.c **** 				else
1815:base/os/FreeRTOS/Source/queue.c **** 				{
1816:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1817:base/os/FreeRTOS/Source/queue.c **** 				}
1818:base/os/FreeRTOS/Source/queue.c **** 			}
1819:base/os/FreeRTOS/Source/queue.c **** 			else
1820:base/os/FreeRTOS/Source/queue.c **** 			{
1821:base/os/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1822:base/os/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1823:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1824:base/os/FreeRTOS/Source/queue.c **** 			}
1825:base/os/FreeRTOS/Source/queue.c **** 
1826:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1827:base/os/FreeRTOS/Source/queue.c **** 		}
1828:base/os/FreeRTOS/Source/queue.c **** 		else
1829:base/os/FreeRTOS/Source/queue.c **** 		{
1830:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1831:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1832:base/os/FreeRTOS/Source/queue.c **** 		}
1833:base/os/FreeRTOS/Source/queue.c **** 	}
1834:base/os/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1835:base/os/FreeRTOS/Source/queue.c **** 
1836:base/os/FreeRTOS/Source/queue.c **** 	return xReturn;
1837:base/os/FreeRTOS/Source/queue.c **** }
1838:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1839:base/os/FreeRTOS/Source/queue.c **** 
1840:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1841:base/os/FreeRTOS/Source/queue.c **** {
1842:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1843:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1844:base/os/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1845:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1846:base/os/FreeRTOS/Source/queue.c **** 
1847:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1848:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1849:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1850:base/os/FreeRTOS/Source/queue.c **** 
1851:base/os/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1852:base/os/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1853:base/os/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1854:base/os/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1855:base/os/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1856:base/os/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
ARM GAS  /tmp/ccw4aonF.s 			page 34


1857:base/os/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1858:base/os/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1859:base/os/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1860:base/os/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1861:base/os/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1862:base/os/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1863:base/os/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1864:base/os/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1865:base/os/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1866:base/os/FreeRTOS/Source/queue.c **** 
1867:base/os/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1868:base/os/FreeRTOS/Source/queue.c **** 	{
1869:base/os/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1870:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1871:base/os/FreeRTOS/Source/queue.c **** 		{
1872:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1873:base/os/FreeRTOS/Source/queue.c **** 
1874:base/os/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1875:base/os/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1876:base/os/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1877:base/os/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1878:base/os/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1879:base/os/FreeRTOS/Source/queue.c **** 
1880:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1881:base/os/FreeRTOS/Source/queue.c **** 		}
1882:base/os/FreeRTOS/Source/queue.c **** 		else
1883:base/os/FreeRTOS/Source/queue.c **** 		{
1884:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1885:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1886:base/os/FreeRTOS/Source/queue.c **** 		}
1887:base/os/FreeRTOS/Source/queue.c **** 	}
1888:base/os/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1889:base/os/FreeRTOS/Source/queue.c **** 
1890:base/os/FreeRTOS/Source/queue.c **** 	return xReturn;
1891:base/os/FreeRTOS/Source/queue.c **** }
1892:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1893:base/os/FreeRTOS/Source/queue.c **** 
1894:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1895:base/os/FreeRTOS/Source/queue.c **** {
1896:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1897:base/os/FreeRTOS/Source/queue.c **** 
1898:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1899:base/os/FreeRTOS/Source/queue.c **** 
1900:base/os/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1901:base/os/FreeRTOS/Source/queue.c **** 	{
1902:base/os/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1903:base/os/FreeRTOS/Source/queue.c **** 	}
1904:base/os/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1905:base/os/FreeRTOS/Source/queue.c **** 
1906:base/os/FreeRTOS/Source/queue.c **** 	return uxReturn;
1907:base/os/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1908:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1909:base/os/FreeRTOS/Source/queue.c **** 
1910:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1911:base/os/FreeRTOS/Source/queue.c **** {
1912:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1913:base/os/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
ARM GAS  /tmp/ccw4aonF.s 			page 35


1914:base/os/FreeRTOS/Source/queue.c **** 
1915:base/os/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1916:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1917:base/os/FreeRTOS/Source/queue.c **** 
1918:base/os/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:base/os/FreeRTOS/Source/queue.c **** 	{
1920:base/os/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1921:base/os/FreeRTOS/Source/queue.c **** 	}
1922:base/os/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1923:base/os/FreeRTOS/Source/queue.c **** 
1924:base/os/FreeRTOS/Source/queue.c **** 	return uxReturn;
1925:base/os/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1926:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1927:base/os/FreeRTOS/Source/queue.c **** 
1928:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1929:base/os/FreeRTOS/Source/queue.c **** {
1930:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1931:base/os/FreeRTOS/Source/queue.c **** 
1932:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1933:base/os/FreeRTOS/Source/queue.c **** 
1934:base/os/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:base/os/FreeRTOS/Source/queue.c **** 
1936:base/os/FreeRTOS/Source/queue.c **** 	return uxReturn;
1937:base/os/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1938:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1939:base/os/FreeRTOS/Source/queue.c **** 
1940:base/os/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1941:base/os/FreeRTOS/Source/queue.c **** {
1942:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1943:base/os/FreeRTOS/Source/queue.c **** 
1944:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1945:base/os/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1946:base/os/FreeRTOS/Source/queue.c **** 
1947:base/os/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1948:base/os/FreeRTOS/Source/queue.c **** 	{
1949:base/os/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1950:base/os/FreeRTOS/Source/queue.c **** 	}
1951:base/os/FreeRTOS/Source/queue.c **** 	#endif
1952:base/os/FreeRTOS/Source/queue.c **** 
1953:base/os/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1954:base/os/FreeRTOS/Source/queue.c **** 	{
1955:base/os/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1956:base/os/FreeRTOS/Source/queue.c **** 		again. */
1957:base/os/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1958:base/os/FreeRTOS/Source/queue.c **** 	}
1959:base/os/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1960:base/os/FreeRTOS/Source/queue.c **** 	{
1961:base/os/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1962:base/os/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1963:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1964:base/os/FreeRTOS/Source/queue.c **** 		{
1965:base/os/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1966:base/os/FreeRTOS/Source/queue.c **** 		}
1967:base/os/FreeRTOS/Source/queue.c **** 		else
1968:base/os/FreeRTOS/Source/queue.c **** 		{
1969:base/os/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1970:base/os/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccw4aonF.s 			page 36


1971:base/os/FreeRTOS/Source/queue.c **** 	}
1972:base/os/FreeRTOS/Source/queue.c **** 	#else
1973:base/os/FreeRTOS/Source/queue.c **** 	{
1974:base/os/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1975:base/os/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1976:base/os/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1977:base/os/FreeRTOS/Source/queue.c **** 	}
1978:base/os/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1979:base/os/FreeRTOS/Source/queue.c **** }
1980:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1981:base/os/FreeRTOS/Source/queue.c **** 
1982:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1983:base/os/FreeRTOS/Source/queue.c **** 
1984:base/os/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1985:base/os/FreeRTOS/Source/queue.c **** 	{
1986:base/os/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1987:base/os/FreeRTOS/Source/queue.c **** 	}
1988:base/os/FreeRTOS/Source/queue.c **** 
1989:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1990:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:base/os/FreeRTOS/Source/queue.c **** 
1992:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1993:base/os/FreeRTOS/Source/queue.c **** 
1994:base/os/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1995:base/os/FreeRTOS/Source/queue.c **** 	{
1996:base/os/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1997:base/os/FreeRTOS/Source/queue.c **** 	}
1998:base/os/FreeRTOS/Source/queue.c **** 
1999:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2000:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2001:base/os/FreeRTOS/Source/queue.c **** 
2002:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2003:base/os/FreeRTOS/Source/queue.c **** 
2004:base/os/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2005:base/os/FreeRTOS/Source/queue.c **** 	{
2006:base/os/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2007:base/os/FreeRTOS/Source/queue.c **** 	}
2008:base/os/FreeRTOS/Source/queue.c **** 
2009:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2010:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2011:base/os/FreeRTOS/Source/queue.c **** 
2012:base/os/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2013:base/os/FreeRTOS/Source/queue.c **** 
2014:base/os/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2015:base/os/FreeRTOS/Source/queue.c **** 	{
  27              		.loc 1 2015 2 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              		.loc 1 2015 2 is_stmt 0 view .LVU1
  33 0000 0346     		mov	r3, r0
2016:base/os/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
  34              		.loc 1 2016 2 is_stmt 1 view .LVU2
2017:base/os/FreeRTOS/Source/queue.c **** 
2018:base/os/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2019:base/os/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
ARM GAS  /tmp/ccw4aonF.s 			page 37


2020:base/os/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2021:base/os/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2022:base/os/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2023:base/os/FreeRTOS/Source/queue.c **** 		mutex. */
2024:base/os/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  35              		.loc 1 2024 3 view .LVU3
  36              		.loc 1 2024 7 is_stmt 0 view .LVU4
  37 0002 406A     		ldr	r0, [r0, #36]
  38              	.LVL1:
  39              		.loc 1 2024 5 view .LVU5
  40 0004 18B1     		cbz	r0, .L1
2025:base/os/FreeRTOS/Source/queue.c **** 		{
2026:base/os/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  41              		.loc 1 2026 4 is_stmt 1 view .LVU6
  42              		.loc 1 2026 61 is_stmt 0 view .LVU7
  43 0006 1B6B     		ldr	r3, [r3, #48]
  44              	.LVL2:
  45              		.loc 1 2026 61 view .LVU8
  46 0008 1868     		ldr	r0, [r3]
  47              		.loc 1 2026 36 view .LVU9
  48 000a C0F13800 		rsb	r0, r0, #56
  49              	.LVL3:
2027:base/os/FreeRTOS/Source/queue.c **** 		}
2028:base/os/FreeRTOS/Source/queue.c **** 		else
2029:base/os/FreeRTOS/Source/queue.c **** 		{
2030:base/os/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
2031:base/os/FreeRTOS/Source/queue.c **** 		}
2032:base/os/FreeRTOS/Source/queue.c **** 
2033:base/os/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
  50              		.loc 1 2033 3 is_stmt 1 view .LVU10
  51              	.L1:
2034:base/os/FreeRTOS/Source/queue.c **** 	}
  52              		.loc 1 2034 2 is_stmt 0 view .LVU11
  53 000e 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE32:
  57              		.section	.text.prvIsQueueFull,"ax",%progbits
  58              		.align	1
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu softvfp
  64              	prvIsQueueFull:
  65              	.LVL4:
  66              	.LFB38:
2035:base/os/FreeRTOS/Source/queue.c **** 
2036:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2037:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2038:base/os/FreeRTOS/Source/queue.c **** 
2039:base/os/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2040:base/os/FreeRTOS/Source/queue.c **** {
2041:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2042:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2043:base/os/FreeRTOS/Source/queue.c **** 
2044:base/os/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2045:base/os/FreeRTOS/Source/queue.c **** 
2046:base/os/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
ARM GAS  /tmp/ccw4aonF.s 			page 38


2047:base/os/FreeRTOS/Source/queue.c **** 
2048:base/os/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2049:base/os/FreeRTOS/Source/queue.c **** 	{
2050:base/os/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2051:base/os/FreeRTOS/Source/queue.c **** 		{
2052:base/os/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2053:base/os/FreeRTOS/Source/queue.c **** 			{
2054:base/os/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2055:base/os/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2056:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2057:base/os/FreeRTOS/Source/queue.c **** 			}
2058:base/os/FreeRTOS/Source/queue.c **** 			else
2059:base/os/FreeRTOS/Source/queue.c **** 			{
2060:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2061:base/os/FreeRTOS/Source/queue.c **** 			}
2062:base/os/FreeRTOS/Source/queue.c **** 		}
2063:base/os/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2064:base/os/FreeRTOS/Source/queue.c **** 	}
2065:base/os/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2066:base/os/FreeRTOS/Source/queue.c **** 	{
2067:base/os/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2068:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2069:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2070:base/os/FreeRTOS/Source/queue.c **** 		{
2071:base/os/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2072:base/os/FreeRTOS/Source/queue.c **** 		}
2073:base/os/FreeRTOS/Source/queue.c **** 		else
2074:base/os/FreeRTOS/Source/queue.c **** 		{
2075:base/os/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2076:base/os/FreeRTOS/Source/queue.c **** 		}
2077:base/os/FreeRTOS/Source/queue.c **** 	}
2078:base/os/FreeRTOS/Source/queue.c **** 	else
2079:base/os/FreeRTOS/Source/queue.c **** 	{
2080:base/os/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2081:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2082:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2083:base/os/FreeRTOS/Source/queue.c **** 		{
2084:base/os/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2085:base/os/FreeRTOS/Source/queue.c **** 		}
2086:base/os/FreeRTOS/Source/queue.c **** 		else
2087:base/os/FreeRTOS/Source/queue.c **** 		{
2088:base/os/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2089:base/os/FreeRTOS/Source/queue.c **** 		}
2090:base/os/FreeRTOS/Source/queue.c **** 
2091:base/os/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2092:base/os/FreeRTOS/Source/queue.c **** 		{
2093:base/os/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2094:base/os/FreeRTOS/Source/queue.c **** 			{
2095:base/os/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2096:base/os/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2097:base/os/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2098:base/os/FreeRTOS/Source/queue.c **** 				correct. */
2099:base/os/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2100:base/os/FreeRTOS/Source/queue.c **** 			}
2101:base/os/FreeRTOS/Source/queue.c **** 			else
2102:base/os/FreeRTOS/Source/queue.c **** 			{
2103:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccw4aonF.s 			page 39


2104:base/os/FreeRTOS/Source/queue.c **** 			}
2105:base/os/FreeRTOS/Source/queue.c **** 		}
2106:base/os/FreeRTOS/Source/queue.c **** 		else
2107:base/os/FreeRTOS/Source/queue.c **** 		{
2108:base/os/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2109:base/os/FreeRTOS/Source/queue.c **** 		}
2110:base/os/FreeRTOS/Source/queue.c **** 	}
2111:base/os/FreeRTOS/Source/queue.c **** 
2112:base/os/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2113:base/os/FreeRTOS/Source/queue.c **** 
2114:base/os/FreeRTOS/Source/queue.c **** 	return xReturn;
2115:base/os/FreeRTOS/Source/queue.c **** }
2116:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2117:base/os/FreeRTOS/Source/queue.c **** 
2118:base/os/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2119:base/os/FreeRTOS/Source/queue.c **** {
2120:base/os/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2121:base/os/FreeRTOS/Source/queue.c **** 	{
2122:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2123:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2124:base/os/FreeRTOS/Source/queue.c **** 		{
2125:base/os/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2126:base/os/FreeRTOS/Source/queue.c **** 		}
2127:base/os/FreeRTOS/Source/queue.c **** 		else
2128:base/os/FreeRTOS/Source/queue.c **** 		{
2129:base/os/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2130:base/os/FreeRTOS/Source/queue.c **** 		}
2131:base/os/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2132:base/os/FreeRTOS/Source/queue.c **** 	}
2133:base/os/FreeRTOS/Source/queue.c **** }
2134:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2135:base/os/FreeRTOS/Source/queue.c **** 
2136:base/os/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2137:base/os/FreeRTOS/Source/queue.c **** {
2138:base/os/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2139:base/os/FreeRTOS/Source/queue.c **** 
2140:base/os/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2141:base/os/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2142:base/os/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2143:base/os/FreeRTOS/Source/queue.c **** 	updated. */
2144:base/os/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2145:base/os/FreeRTOS/Source/queue.c **** 	{
2146:base/os/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2147:base/os/FreeRTOS/Source/queue.c **** 
2148:base/os/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2149:base/os/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2150:base/os/FreeRTOS/Source/queue.c **** 		{
2151:base/os/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2152:base/os/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2153:base/os/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2154:base/os/FreeRTOS/Source/queue.c **** 			{
2155:base/os/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2156:base/os/FreeRTOS/Source/queue.c **** 				{
2157:base/os/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2158:base/os/FreeRTOS/Source/queue.c **** 					{
2159:base/os/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2160:base/os/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
ARM GAS  /tmp/ccw4aonF.s 			page 40


2161:base/os/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2162:base/os/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2163:base/os/FreeRTOS/Source/queue.c **** 					}
2164:base/os/FreeRTOS/Source/queue.c **** 					else
2165:base/os/FreeRTOS/Source/queue.c **** 					{
2166:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2167:base/os/FreeRTOS/Source/queue.c **** 					}
2168:base/os/FreeRTOS/Source/queue.c **** 				}
2169:base/os/FreeRTOS/Source/queue.c **** 				else
2170:base/os/FreeRTOS/Source/queue.c **** 				{
2171:base/os/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2172:base/os/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2173:base/os/FreeRTOS/Source/queue.c **** 					suspended. */
2174:base/os/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2175:base/os/FreeRTOS/Source/queue.c **** 					{
2176:base/os/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2177:base/os/FreeRTOS/Source/queue.c **** 						{
2178:base/os/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2179:base/os/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2180:base/os/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2181:base/os/FreeRTOS/Source/queue.c **** 						}
2182:base/os/FreeRTOS/Source/queue.c **** 						else
2183:base/os/FreeRTOS/Source/queue.c **** 						{
2184:base/os/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2185:base/os/FreeRTOS/Source/queue.c **** 						}
2186:base/os/FreeRTOS/Source/queue.c **** 					}
2187:base/os/FreeRTOS/Source/queue.c **** 					else
2188:base/os/FreeRTOS/Source/queue.c **** 					{
2189:base/os/FreeRTOS/Source/queue.c **** 						break;
2190:base/os/FreeRTOS/Source/queue.c **** 					}
2191:base/os/FreeRTOS/Source/queue.c **** 				}
2192:base/os/FreeRTOS/Source/queue.c **** 			}
2193:base/os/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2194:base/os/FreeRTOS/Source/queue.c **** 			{
2195:base/os/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2196:base/os/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2197:base/os/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2198:base/os/FreeRTOS/Source/queue.c **** 				{
2199:base/os/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2200:base/os/FreeRTOS/Source/queue.c **** 					{
2201:base/os/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2202:base/os/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2203:base/os/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2204:base/os/FreeRTOS/Source/queue.c **** 					}
2205:base/os/FreeRTOS/Source/queue.c **** 					else
2206:base/os/FreeRTOS/Source/queue.c **** 					{
2207:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2208:base/os/FreeRTOS/Source/queue.c **** 					}
2209:base/os/FreeRTOS/Source/queue.c **** 				}
2210:base/os/FreeRTOS/Source/queue.c **** 				else
2211:base/os/FreeRTOS/Source/queue.c **** 				{
2212:base/os/FreeRTOS/Source/queue.c **** 					break;
2213:base/os/FreeRTOS/Source/queue.c **** 				}
2214:base/os/FreeRTOS/Source/queue.c **** 			}
2215:base/os/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2216:base/os/FreeRTOS/Source/queue.c **** 
2217:base/os/FreeRTOS/Source/queue.c **** 			--cTxLock;
ARM GAS  /tmp/ccw4aonF.s 			page 41


2218:base/os/FreeRTOS/Source/queue.c **** 		}
2219:base/os/FreeRTOS/Source/queue.c **** 
2220:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2221:base/os/FreeRTOS/Source/queue.c **** 	}
2222:base/os/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2223:base/os/FreeRTOS/Source/queue.c **** 
2224:base/os/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2225:base/os/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2226:base/os/FreeRTOS/Source/queue.c **** 	{
2227:base/os/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2228:base/os/FreeRTOS/Source/queue.c **** 
2229:base/os/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2230:base/os/FreeRTOS/Source/queue.c **** 		{
2231:base/os/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2232:base/os/FreeRTOS/Source/queue.c **** 			{
2233:base/os/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2234:base/os/FreeRTOS/Source/queue.c **** 				{
2235:base/os/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2236:base/os/FreeRTOS/Source/queue.c **** 				}
2237:base/os/FreeRTOS/Source/queue.c **** 				else
2238:base/os/FreeRTOS/Source/queue.c **** 				{
2239:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2240:base/os/FreeRTOS/Source/queue.c **** 				}
2241:base/os/FreeRTOS/Source/queue.c **** 
2242:base/os/FreeRTOS/Source/queue.c **** 				--cRxLock;
2243:base/os/FreeRTOS/Source/queue.c **** 			}
2244:base/os/FreeRTOS/Source/queue.c **** 			else
2245:base/os/FreeRTOS/Source/queue.c **** 			{
2246:base/os/FreeRTOS/Source/queue.c **** 				break;
2247:base/os/FreeRTOS/Source/queue.c **** 			}
2248:base/os/FreeRTOS/Source/queue.c **** 		}
2249:base/os/FreeRTOS/Source/queue.c **** 
2250:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2251:base/os/FreeRTOS/Source/queue.c **** 	}
2252:base/os/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2253:base/os/FreeRTOS/Source/queue.c **** }
2254:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2255:base/os/FreeRTOS/Source/queue.c **** 
2256:base/os/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2257:base/os/FreeRTOS/Source/queue.c **** {
2258:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2259:base/os/FreeRTOS/Source/queue.c **** 
2260:base/os/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:base/os/FreeRTOS/Source/queue.c **** 	{
2262:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2263:base/os/FreeRTOS/Source/queue.c **** 		{
2264:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2265:base/os/FreeRTOS/Source/queue.c **** 		}
2266:base/os/FreeRTOS/Source/queue.c **** 		else
2267:base/os/FreeRTOS/Source/queue.c **** 		{
2268:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2269:base/os/FreeRTOS/Source/queue.c **** 		}
2270:base/os/FreeRTOS/Source/queue.c **** 	}
2271:base/os/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2272:base/os/FreeRTOS/Source/queue.c **** 
2273:base/os/FreeRTOS/Source/queue.c **** 	return xReturn;
2274:base/os/FreeRTOS/Source/queue.c **** }
ARM GAS  /tmp/ccw4aonF.s 			page 42


2275:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2276:base/os/FreeRTOS/Source/queue.c **** 
2277:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2278:base/os/FreeRTOS/Source/queue.c **** {
2279:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2280:base/os/FreeRTOS/Source/queue.c **** 
2281:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
2282:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2283:base/os/FreeRTOS/Source/queue.c **** 	{
2284:base/os/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2285:base/os/FreeRTOS/Source/queue.c **** 	}
2286:base/os/FreeRTOS/Source/queue.c **** 	else
2287:base/os/FreeRTOS/Source/queue.c **** 	{
2288:base/os/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2289:base/os/FreeRTOS/Source/queue.c **** 	}
2290:base/os/FreeRTOS/Source/queue.c **** 
2291:base/os/FreeRTOS/Source/queue.c **** 	return xReturn;
2292:base/os/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2293:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2294:base/os/FreeRTOS/Source/queue.c **** 
2295:base/os/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2296:base/os/FreeRTOS/Source/queue.c **** {
  67              		.loc 1 2296 1 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		.loc 1 2296 1 is_stmt 0 view .LVU13
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
  77 0002 0446     		mov	r4, r0
2297:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
  78              		.loc 1 2297 1 is_stmt 1 view .LVU14
2298:base/os/FreeRTOS/Source/queue.c **** 
2299:base/os/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  79              		.loc 1 2299 2 view .LVU15
  80 0004 FFF7FEFF 		bl	vPortEnterCritical
  81              	.LVL5:
2300:base/os/FreeRTOS/Source/queue.c **** 	{
2301:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  82              		.loc 1 2301 3 view .LVU16
  83              		.loc 1 2301 14 is_stmt 0 view .LVU17
  84 0008 A26B     		ldr	r2, [r4, #56]
  85              		.loc 1 2301 44 view .LVU18
  86 000a E36B     		ldr	r3, [r4, #60]
  87              		.loc 1 2301 5 view .LVU19
  88 000c 9A42     		cmp	r2, r3
  89 000e 04D0     		beq	.L7
2302:base/os/FreeRTOS/Source/queue.c **** 		{
2303:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2304:base/os/FreeRTOS/Source/queue.c **** 		}
2305:base/os/FreeRTOS/Source/queue.c **** 		else
2306:base/os/FreeRTOS/Source/queue.c **** 		{
2307:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  90              		.loc 1 2307 12 view .LVU20
ARM GAS  /tmp/ccw4aonF.s 			page 43


  91 0010 0024     		movs	r4, #0
  92              	.LVL6:
  93              	.L4:
2308:base/os/FreeRTOS/Source/queue.c **** 		}
2309:base/os/FreeRTOS/Source/queue.c **** 	}
2310:base/os/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  94              		.loc 1 2310 2 is_stmt 1 view .LVU21
  95 0012 FFF7FEFF 		bl	vPortExitCritical
  96              	.LVL7:
2311:base/os/FreeRTOS/Source/queue.c **** 
2312:base/os/FreeRTOS/Source/queue.c **** 	return xReturn;
  97              		.loc 1 2312 2 view .LVU22
2313:base/os/FreeRTOS/Source/queue.c **** }
  98              		.loc 1 2313 1 is_stmt 0 view .LVU23
  99 0016 2046     		mov	r0, r4
 100 0018 10BD     		pop	{r4, pc}
 101              	.LVL8:
 102              	.L7:
2303:base/os/FreeRTOS/Source/queue.c **** 		}
 103              		.loc 1 2303 12 view .LVU24
 104 001a 0124     		movs	r4, #1
 105              	.LVL9:
2303:base/os/FreeRTOS/Source/queue.c **** 		}
 106              		.loc 1 2303 12 view .LVU25
 107 001c F9E7     		b	.L4
 108              		.cfi_endproc
 109              	.LFE38:
 111              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 112              		.align	1
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu softvfp
 118              	prvIsQueueEmpty:
 119              	.LVL10:
 120              	.LFB36:
2257:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 121              		.loc 1 2257 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
2257:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 125              		.loc 1 2257 1 is_stmt 0 view .LVU27
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
2258:base/os/FreeRTOS/Source/queue.c **** 
 132              		.loc 1 2258 1 is_stmt 1 view .LVU28
2260:base/os/FreeRTOS/Source/queue.c **** 	{
 133              		.loc 1 2260 2 view .LVU29
 134 0004 FFF7FEFF 		bl	vPortEnterCritical
 135              	.LVL11:
2262:base/os/FreeRTOS/Source/queue.c **** 		{
 136              		.loc 1 2262 3 view .LVU30
ARM GAS  /tmp/ccw4aonF.s 			page 44


2262:base/os/FreeRTOS/Source/queue.c **** 		{
 137              		.loc 1 2262 14 is_stmt 0 view .LVU31
 138 0008 A36B     		ldr	r3, [r4, #56]
2262:base/os/FreeRTOS/Source/queue.c **** 		{
 139              		.loc 1 2262 5 view .LVU32
 140 000a 23B9     		cbnz	r3, .L10
2264:base/os/FreeRTOS/Source/queue.c **** 		}
 141              		.loc 1 2264 12 view .LVU33
 142 000c 0124     		movs	r4, #1
 143              	.LVL12:
 144              	.L9:
2271:base/os/FreeRTOS/Source/queue.c **** 
 145              		.loc 1 2271 2 is_stmt 1 view .LVU34
 146 000e FFF7FEFF 		bl	vPortExitCritical
 147              	.LVL13:
2273:base/os/FreeRTOS/Source/queue.c **** }
 148              		.loc 1 2273 2 view .LVU35
2274:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 149              		.loc 1 2274 1 is_stmt 0 view .LVU36
 150 0012 2046     		mov	r0, r4
 151 0014 10BD     		pop	{r4, pc}
 152              	.LVL14:
 153              	.L10:
2268:base/os/FreeRTOS/Source/queue.c **** 		}
 154              		.loc 1 2268 12 view .LVU37
 155 0016 0024     		movs	r4, #0
 156              	.LVL15:
2268:base/os/FreeRTOS/Source/queue.c **** 		}
 157              		.loc 1 2268 12 view .LVU38
 158 0018 F9E7     		b	.L9
 159              		.cfi_endproc
 160              	.LFE36:
 162              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu softvfp
 169              	prvCopyDataToQueue:
 170              	.LVL16:
 171              	.LFB33:
2040:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 172              		.loc 1 2040 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
2040:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 176              		.loc 1 2040 1 is_stmt 0 view .LVU40
 177 0000 70B5     		push	{r4, r5, r6, lr}
 178              	.LCFI2:
 179              		.cfi_def_cfa_offset 16
 180              		.cfi_offset 4, -16
 181              		.cfi_offset 5, -12
 182              		.cfi_offset 6, -8
 183              		.cfi_offset 14, -4
 184 0002 0446     		mov	r4, r0
 185 0004 1546     		mov	r5, r2
ARM GAS  /tmp/ccw4aonF.s 			page 45


2041:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 186              		.loc 1 2041 1 is_stmt 1 view .LVU41
 187              	.LVL17:
2042:base/os/FreeRTOS/Source/queue.c **** 
 188              		.loc 1 2042 1 view .LVU42
2046:base/os/FreeRTOS/Source/queue.c **** 
 189              		.loc 1 2046 2 view .LVU43
2046:base/os/FreeRTOS/Source/queue.c **** 
 190              		.loc 1 2046 20 is_stmt 0 view .LVU44
 191 0006 866B     		ldr	r6, [r0, #56]
 192              	.LVL18:
2048:base/os/FreeRTOS/Source/queue.c **** 	{
 193              		.loc 1 2048 2 is_stmt 1 view .LVU45
2048:base/os/FreeRTOS/Source/queue.c **** 	{
 194              		.loc 1 2048 13 is_stmt 0 view .LVU46
 195 0008 026C     		ldr	r2, [r0, #64]
 196              	.LVL19:
2048:base/os/FreeRTOS/Source/queue.c **** 	{
 197              		.loc 1 2048 4 view .LVU47
 198 000a 5AB9     		cbnz	r2, .L13
2052:base/os/FreeRTOS/Source/queue.c **** 			{
 199              		.loc 1 2052 4 is_stmt 1 view .LVU48
2052:base/os/FreeRTOS/Source/queue.c **** 			{
 200              		.loc 1 2052 15 is_stmt 0 view .LVU49
 201 000c 0368     		ldr	r3, [r0]
2052:base/os/FreeRTOS/Source/queue.c **** 			{
 202              		.loc 1 2052 6 view .LVU50
 203 000e 1BB1     		cbz	r3, .L22
2041:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 204              		.loc 1 2041 12 view .LVU51
 205 0010 0020     		movs	r0, #0
 206              	.LVL20:
 207              	.L14:
2108:base/os/FreeRTOS/Source/queue.c **** 		}
 208              		.loc 1 2108 28 is_stmt 1 view .LVU52
2112:base/os/FreeRTOS/Source/queue.c **** 
 209              		.loc 1 2112 2 view .LVU53
2112:base/os/FreeRTOS/Source/queue.c **** 
 210              		.loc 1 2112 49 is_stmt 0 view .LVU54
 211 0012 0136     		adds	r6, r6, #1
 212              	.LVL21:
2112:base/os/FreeRTOS/Source/queue.c **** 
 213              		.loc 1 2112 29 view .LVU55
 214 0014 A663     		str	r6, [r4, #56]
2114:base/os/FreeRTOS/Source/queue.c **** }
 215              		.loc 1 2114 2 is_stmt 1 view .LVU56
2115:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 216              		.loc 1 2115 1 is_stmt 0 view .LVU57
 217 0016 70BD     		pop	{r4, r5, r6, pc}
 218              	.LVL22:
 219              	.L22:
2055:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 220              		.loc 1 2055 5 is_stmt 1 view .LVU58
2055:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 221              		.loc 1 2055 15 is_stmt 0 view .LVU59
 222 0018 4068     		ldr	r0, [r0, #4]
 223              	.LVL23:
ARM GAS  /tmp/ccw4aonF.s 			page 46


2055:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 224              		.loc 1 2055 15 view .LVU60
 225 001a FFF7FEFF 		bl	xTaskPriorityDisinherit
 226              	.LVL24:
2056:base/os/FreeRTOS/Source/queue.c **** 			}
 227              		.loc 1 2056 5 is_stmt 1 view .LVU61
2056:base/os/FreeRTOS/Source/queue.c **** 			}
 228              		.loc 1 2056 28 is_stmt 0 view .LVU62
 229 001e 0023     		movs	r3, #0
 230 0020 6360     		str	r3, [r4, #4]
 231 0022 F6E7     		b	.L14
 232              	.LVL25:
 233              	.L13:
2065:base/os/FreeRTOS/Source/queue.c **** 	{
 234              		.loc 1 2065 7 is_stmt 1 view .LVU63
2065:base/os/FreeRTOS/Source/queue.c **** 	{
 235              		.loc 1 2065 9 is_stmt 0 view .LVU64
 236 0024 6DB9     		cbnz	r5, .L15
2067:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 237              		.loc 1 2067 3 is_stmt 1 view .LVU65
2067:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 238              		.loc 1 2067 12 is_stmt 0 view .LVU66
 239 0026 8068     		ldr	r0, [r0, #8]
 240              	.LVL26:
2067:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 241              		.loc 1 2067 12 view .LVU67
 242 0028 FFF7FEFF 		bl	memcpy
 243              	.LVL27:
2068:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 244              		.loc 1 2068 3 is_stmt 1 view .LVU68
2068:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 245              		.loc 1 2068 32 is_stmt 0 view .LVU69
 246 002c 226C     		ldr	r2, [r4, #64]
2068:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 247              		.loc 1 2068 22 view .LVU70
 248 002e A368     		ldr	r3, [r4, #8]
 249 0030 1344     		add	r3, r3, r2
 250 0032 A360     		str	r3, [r4, #8]
2069:base/os/FreeRTOS/Source/queue.c **** 		{
 251              		.loc 1 2069 3 is_stmt 1 view .LVU71
2069:base/os/FreeRTOS/Source/queue.c **** 		{
 252              		.loc 1 2069 36 is_stmt 0 view .LVU72
 253 0034 6268     		ldr	r2, [r4, #4]
2069:base/os/FreeRTOS/Source/queue.c **** 		{
 254              		.loc 1 2069 5 view .LVU73
 255 0036 9342     		cmp	r3, r2
 256 0038 19D3     		bcc	.L18
2071:base/os/FreeRTOS/Source/queue.c **** 		}
 257              		.loc 1 2071 4 is_stmt 1 view .LVU74
2071:base/os/FreeRTOS/Source/queue.c **** 		}
 258              		.loc 1 2071 32 is_stmt 0 view .LVU75
 259 003a 2368     		ldr	r3, [r4]
2071:base/os/FreeRTOS/Source/queue.c **** 		}
 260              		.loc 1 2071 23 view .LVU76
 261 003c A360     		str	r3, [r4, #8]
2041:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 262              		.loc 1 2041 12 view .LVU77
ARM GAS  /tmp/ccw4aonF.s 			page 47


 263 003e 2846     		mov	r0, r5
 264 0040 E7E7     		b	.L14
 265              	.LVL28:
 266              	.L15:
2080:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 267              		.loc 1 2080 3 is_stmt 1 view .LVU78
2080:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 268              		.loc 1 2080 12 is_stmt 0 view .LVU79
 269 0042 C068     		ldr	r0, [r0, #12]
 270              	.LVL29:
2080:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 271              		.loc 1 2080 12 view .LVU80
 272 0044 FFF7FEFF 		bl	memcpy
 273              	.LVL30:
2081:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 274              		.loc 1 2081 3 is_stmt 1 view .LVU81
2081:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 275              		.loc 1 2081 35 is_stmt 0 view .LVU82
 276 0048 226C     		ldr	r2, [r4, #64]
2081:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 277              		.loc 1 2081 25 view .LVU83
 278 004a 5142     		rsbs	r1, r2, #0
 279 004c E368     		ldr	r3, [r4, #12]
 280 004e 9B1A     		subs	r3, r3, r2
 281 0050 E360     		str	r3, [r4, #12]
2082:base/os/FreeRTOS/Source/queue.c **** 		{
 282              		.loc 1 2082 3 is_stmt 1 view .LVU84
2082:base/os/FreeRTOS/Source/queue.c **** 		{
 283              		.loc 1 2082 38 is_stmt 0 view .LVU85
 284 0052 2268     		ldr	r2, [r4]
2082:base/os/FreeRTOS/Source/queue.c **** 		{
 285              		.loc 1 2082 5 view .LVU86
 286 0054 9342     		cmp	r3, r2
 287 0056 02D2     		bcs	.L16
2084:base/os/FreeRTOS/Source/queue.c **** 		}
 288              		.loc 1 2084 4 is_stmt 1 view .LVU87
2084:base/os/FreeRTOS/Source/queue.c **** 		}
 289              		.loc 1 2084 37 is_stmt 0 view .LVU88
 290 0058 6368     		ldr	r3, [r4, #4]
2084:base/os/FreeRTOS/Source/queue.c **** 		}
 291              		.loc 1 2084 46 view .LVU89
 292 005a 0B44     		add	r3, r3, r1
2084:base/os/FreeRTOS/Source/queue.c **** 		}
 293              		.loc 1 2084 26 view .LVU90
 294 005c E360     		str	r3, [r4, #12]
 295              	.L16:
2088:base/os/FreeRTOS/Source/queue.c **** 		}
 296              		.loc 1 2088 28 is_stmt 1 view .LVU91
2091:base/os/FreeRTOS/Source/queue.c **** 		{
 297              		.loc 1 2091 3 view .LVU92
2091:base/os/FreeRTOS/Source/queue.c **** 		{
 298              		.loc 1 2091 5 is_stmt 0 view .LVU93
 299 005e 022D     		cmp	r5, #2
 300 0060 01D0     		beq	.L23
2041:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 301              		.loc 1 2041 12 view .LVU94
 302 0062 0020     		movs	r0, #0
ARM GAS  /tmp/ccw4aonF.s 			page 48


 303 0064 D5E7     		b	.L14
 304              	.L23:
2093:base/os/FreeRTOS/Source/queue.c **** 			{
 305              		.loc 1 2093 4 is_stmt 1 view .LVU95
2093:base/os/FreeRTOS/Source/queue.c **** 			{
 306              		.loc 1 2093 6 is_stmt 0 view .LVU96
 307 0066 26B1     		cbz	r6, .L20
2099:base/os/FreeRTOS/Source/queue.c **** 			}
 308              		.loc 1 2099 5 is_stmt 1 view .LVU97
 309 0068 013E     		subs	r6, r6, #1
 310              	.LVL31:
2041:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 311              		.loc 1 2041 12 is_stmt 0 view .LVU98
 312 006a 0020     		movs	r0, #0
 313 006c D1E7     		b	.L14
 314              	.L18:
2041:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 315              		.loc 1 2041 12 view .LVU99
 316 006e 2846     		mov	r0, r5
 317 0070 CFE7     		b	.L14
 318              	.L20:
2041:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 319              		.loc 1 2041 12 view .LVU100
 320 0072 0020     		movs	r0, #0
 321 0074 CDE7     		b	.L14
 322              		.cfi_endproc
 323              	.LFE33:
 325              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 326              		.align	1
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu softvfp
 332              	prvCopyDataFromQueue:
 333              	.LVL32:
 334              	.LFB34:
2119:base/os/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 335              		.loc 1 2119 1 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
2119:base/os/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 339              		.loc 1 2119 1 is_stmt 0 view .LVU102
 340 0000 08B5     		push	{r3, lr}
 341              	.LCFI3:
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 3, -8
 344              		.cfi_offset 14, -4
 345 0002 0346     		mov	r3, r0
2120:base/os/FreeRTOS/Source/queue.c **** 	{
 346              		.loc 1 2120 2 is_stmt 1 view .LVU103
2120:base/os/FreeRTOS/Source/queue.c **** 	{
 347              		.loc 1 2120 13 is_stmt 0 view .LVU104
 348 0004 026C     		ldr	r2, [r0, #64]
2120:base/os/FreeRTOS/Source/queue.c **** 	{
 349              		.loc 1 2120 4 view .LVU105
 350 0006 62B1     		cbz	r2, .L24
ARM GAS  /tmp/ccw4aonF.s 			page 49


 351 0008 0846     		mov	r0, r1
 352              	.LVL33:
2122:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 353              		.loc 1 2122 3 is_stmt 1 view .LVU106
2122:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 354              		.loc 1 2122 25 is_stmt 0 view .LVU107
 355 000a D968     		ldr	r1, [r3, #12]
 356              	.LVL34:
2122:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 357              		.loc 1 2122 25 view .LVU108
 358 000c 1144     		add	r1, r1, r2
 359 000e D960     		str	r1, [r3, #12]
2123:base/os/FreeRTOS/Source/queue.c **** 		{
 360              		.loc 1 2123 3 is_stmt 1 view .LVU109
2123:base/os/FreeRTOS/Source/queue.c **** 		{
 361              		.loc 1 2123 5 is_stmt 0 view .LVU110
 362 0010 D3F804C0 		ldr	ip, [r3, #4]
 363 0014 6145     		cmp	r1, ip
 364 0016 01D3     		bcc	.L26
2125:base/os/FreeRTOS/Source/queue.c **** 		}
 365              		.loc 1 2125 4 is_stmt 1 view .LVU111
2125:base/os/FreeRTOS/Source/queue.c **** 		}
 366              		.loc 1 2125 35 is_stmt 0 view .LVU112
 367 0018 1968     		ldr	r1, [r3]
2125:base/os/FreeRTOS/Source/queue.c **** 		}
 368              		.loc 1 2125 26 view .LVU113
 369 001a D960     		str	r1, [r3, #12]
 370              	.L26:
2129:base/os/FreeRTOS/Source/queue.c **** 		}
 371              		.loc 1 2129 28 is_stmt 1 view .LVU114
2131:base/os/FreeRTOS/Source/queue.c **** 	}
 372              		.loc 1 2131 3 view .LVU115
2131:base/os/FreeRTOS/Source/queue.c **** 	}
 373              		.loc 1 2131 12 is_stmt 0 view .LVU116
 374 001c D968     		ldr	r1, [r3, #12]
 375 001e FFF7FEFF 		bl	memcpy
 376              	.LVL35:
 377              	.L24:
2133:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 378              		.loc 1 2133 1 view .LVU117
 379 0022 08BD     		pop	{r3, pc}
 380              		.cfi_endproc
 381              	.LFE34:
 383              		.section	.text.prvUnlockQueue,"ax",%progbits
 384              		.align	1
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu softvfp
 390              	prvUnlockQueue:
 391              	.LVL36:
 392              	.LFB35:
2137:base/os/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 393              		.loc 1 2137 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccw4aonF.s 			page 50


2137:base/os/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 397              		.loc 1 2137 1 is_stmt 0 view .LVU119
 398 0000 38B5     		push	{r3, r4, r5, lr}
 399              	.LCFI4:
 400              		.cfi_def_cfa_offset 16
 401              		.cfi_offset 3, -16
 402              		.cfi_offset 4, -12
 403              		.cfi_offset 5, -8
 404              		.cfi_offset 14, -4
 405 0002 0546     		mov	r5, r0
2144:base/os/FreeRTOS/Source/queue.c **** 	{
 406              		.loc 1 2144 2 is_stmt 1 view .LVU120
 407 0004 FFF7FEFF 		bl	vPortEnterCritical
 408              	.LVL37:
 409              	.LBB118:
2146:base/os/FreeRTOS/Source/queue.c **** 
 410              		.loc 1 2146 3 view .LVU121
2146:base/os/FreeRTOS/Source/queue.c **** 
 411              		.loc 1 2146 10 is_stmt 0 view .LVU122
 412 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 413 000c 64B2     		sxtb	r4, r4
 414              	.LVL38:
2149:base/os/FreeRTOS/Source/queue.c **** 		{
 415              		.loc 1 2149 3 is_stmt 1 view .LVU123
2149:base/os/FreeRTOS/Source/queue.c **** 		{
 416              		.loc 1 2149 8 is_stmt 0 view .LVU124
 417 000e 01E0     		b	.L29
 418              	.L31:
2207:base/os/FreeRTOS/Source/queue.c **** 					}
 419              		.loc 1 2207 31 is_stmt 1 view .LVU125
2217:base/os/FreeRTOS/Source/queue.c **** 		}
 420              		.loc 1 2217 4 view .LVU126
 421 0010 013C     		subs	r4, r4, #1
 422              	.LVL39:
2217:base/os/FreeRTOS/Source/queue.c **** 		}
 423              		.loc 1 2217 4 is_stmt 0 view .LVU127
 424 0012 64B2     		sxtb	r4, r4
 425              	.LVL40:
 426              	.L29:
2149:base/os/FreeRTOS/Source/queue.c **** 		{
 427              		.loc 1 2149 18 is_stmt 1 view .LVU128
 428 0014 002C     		cmp	r4, #0
 429 0016 0ADD     		ble	.L30
2197:base/os/FreeRTOS/Source/queue.c **** 				{
 430              		.loc 1 2197 5 view .LVU129
2197:base/os/FreeRTOS/Source/queue.c **** 				{
 431              		.loc 1 2197 9 is_stmt 0 view .LVU130
 432 0018 6B6A     		ldr	r3, [r5, #36]
2197:base/os/FreeRTOS/Source/queue.c **** 				{
 433              		.loc 1 2197 7 view .LVU131
 434 001a 43B1     		cbz	r3, .L30
2199:base/os/FreeRTOS/Source/queue.c **** 					{
 435              		.loc 1 2199 6 is_stmt 1 view .LVU132
2199:base/os/FreeRTOS/Source/queue.c **** 					{
 436              		.loc 1 2199 10 is_stmt 0 view .LVU133
 437 001c 05F12400 		add	r0, r5, #36
 438 0020 FFF7FEFF 		bl	xTaskRemoveFromEventList
ARM GAS  /tmp/ccw4aonF.s 			page 51


 439              	.LVL41:
2199:base/os/FreeRTOS/Source/queue.c **** 					{
 440              		.loc 1 2199 8 view .LVU134
 441 0024 0028     		cmp	r0, #0
 442 0026 F3D0     		beq	.L31
2203:base/os/FreeRTOS/Source/queue.c **** 					}
 443              		.loc 1 2203 7 is_stmt 1 view .LVU135
 444 0028 FFF7FEFF 		bl	vTaskMissedYield
 445              	.LVL42:
 446 002c F0E7     		b	.L31
 447              	.L30:
2220:base/os/FreeRTOS/Source/queue.c **** 	}
 448              		.loc 1 2220 3 view .LVU136
2220:base/os/FreeRTOS/Source/queue.c **** 	}
 449              		.loc 1 2220 20 is_stmt 0 view .LVU137
 450 002e FF23     		movs	r3, #255
 451 0030 85F84530 		strb	r3, [r5, #69]
 452              	.LBE118:
2222:base/os/FreeRTOS/Source/queue.c **** 
 453              		.loc 1 2222 2 is_stmt 1 view .LVU138
 454 0034 FFF7FEFF 		bl	vPortExitCritical
 455              	.LVL43:
2225:base/os/FreeRTOS/Source/queue.c **** 	{
 456              		.loc 1 2225 2 view .LVU139
 457 0038 FFF7FEFF 		bl	vPortEnterCritical
 458              	.LVL44:
 459              	.LBB119:
2227:base/os/FreeRTOS/Source/queue.c **** 
 460              		.loc 1 2227 3 view .LVU140
2227:base/os/FreeRTOS/Source/queue.c **** 
 461              		.loc 1 2227 10 is_stmt 0 view .LVU141
 462 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 463              	.LVL45:
2227:base/os/FreeRTOS/Source/queue.c **** 
 464              		.loc 1 2227 10 view .LVU142
 465 0040 64B2     		sxtb	r4, r4
 466              	.LVL46:
2229:base/os/FreeRTOS/Source/queue.c **** 		{
 467              		.loc 1 2229 3 is_stmt 1 view .LVU143
2229:base/os/FreeRTOS/Source/queue.c **** 		{
 468              		.loc 1 2229 8 is_stmt 0 view .LVU144
 469 0042 01E0     		b	.L33
 470              	.L35:
2239:base/os/FreeRTOS/Source/queue.c **** 				}
 471              		.loc 1 2239 30 is_stmt 1 view .LVU145
2242:base/os/FreeRTOS/Source/queue.c **** 			}
 472              		.loc 1 2242 5 view .LVU146
 473 0044 013C     		subs	r4, r4, #1
 474              	.LVL47:
2242:base/os/FreeRTOS/Source/queue.c **** 			}
 475              		.loc 1 2242 5 is_stmt 0 view .LVU147
 476 0046 64B2     		sxtb	r4, r4
 477              	.LVL48:
 478              	.L33:
2229:base/os/FreeRTOS/Source/queue.c **** 		{
 479              		.loc 1 2229 18 is_stmt 1 view .LVU148
 480 0048 002C     		cmp	r4, #0
ARM GAS  /tmp/ccw4aonF.s 			page 52


 481 004a 0ADD     		ble	.L34
2231:base/os/FreeRTOS/Source/queue.c **** 			{
 482              		.loc 1 2231 4 view .LVU149
2231:base/os/FreeRTOS/Source/queue.c **** 			{
 483              		.loc 1 2231 8 is_stmt 0 view .LVU150
 484 004c 2B69     		ldr	r3, [r5, #16]
2231:base/os/FreeRTOS/Source/queue.c **** 			{
 485              		.loc 1 2231 6 view .LVU151
 486 004e 43B1     		cbz	r3, .L34
2233:base/os/FreeRTOS/Source/queue.c **** 				{
 487              		.loc 1 2233 5 is_stmt 1 view .LVU152
2233:base/os/FreeRTOS/Source/queue.c **** 				{
 488              		.loc 1 2233 9 is_stmt 0 view .LVU153
 489 0050 05F11000 		add	r0, r5, #16
 490 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 491              	.LVL49:
2233:base/os/FreeRTOS/Source/queue.c **** 				{
 492              		.loc 1 2233 7 view .LVU154
 493 0058 0028     		cmp	r0, #0
 494 005a F3D0     		beq	.L35
2235:base/os/FreeRTOS/Source/queue.c **** 				}
 495              		.loc 1 2235 6 is_stmt 1 view .LVU155
 496 005c FFF7FEFF 		bl	vTaskMissedYield
 497              	.LVL50:
 498 0060 F0E7     		b	.L35
 499              	.L34:
2250:base/os/FreeRTOS/Source/queue.c **** 	}
 500              		.loc 1 2250 3 view .LVU156
2250:base/os/FreeRTOS/Source/queue.c **** 	}
 501              		.loc 1 2250 20 is_stmt 0 view .LVU157
 502 0062 FF23     		movs	r3, #255
 503 0064 85F84430 		strb	r3, [r5, #68]
 504              	.LBE119:
2252:base/os/FreeRTOS/Source/queue.c **** }
 505              		.loc 1 2252 2 is_stmt 1 view .LVU158
 506 0068 FFF7FEFF 		bl	vPortExitCritical
 507              	.LVL51:
2253:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 508              		.loc 1 2253 1 is_stmt 0 view .LVU159
 509 006c 38BD     		pop	{r3, r4, r5, pc}
2253:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 510              		.loc 1 2253 1 view .LVU160
 511              		.cfi_endproc
 512              	.LFE35:
 514              		.section	.text.xQueueGenericReset,"ax",%progbits
 515              		.align	1
 516              		.global	xQueueGenericReset
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 520              		.fpu softvfp
 522              	xQueueGenericReset:
 523              	.LVL52:
 524              	.LFB4:
 248:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 525              		.loc 1 248 1 is_stmt 1 view -0
 526              		.cfi_startproc
ARM GAS  /tmp/ccw4aonF.s 			page 53


 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 248:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 529              		.loc 1 248 1 is_stmt 0 view .LVU162
 530 0000 38B5     		push	{r3, r4, r5, lr}
 531              	.LCFI5:
 532              		.cfi_def_cfa_offset 16
 533              		.cfi_offset 3, -16
 534              		.cfi_offset 4, -12
 535              		.cfi_offset 5, -8
 536              		.cfi_offset 14, -4
 249:base/os/FreeRTOS/Source/queue.c **** 
 537              		.loc 1 249 1 is_stmt 1 view .LVU163
 538              	.LVL53:
 251:base/os/FreeRTOS/Source/queue.c **** 
 539              		.loc 1 251 2 view .LVU164
 540 0002 E0B1     		cbz	r0, .L44
 541 0004 0D46     		mov	r5, r1
 542 0006 0446     		mov	r4, r0
 251:base/os/FreeRTOS/Source/queue.c **** 
 543              		.loc 1 251 25 discriminator 2 view .LVU165
 253:base/os/FreeRTOS/Source/queue.c **** 	{
 544              		.loc 1 253 2 discriminator 2 view .LVU166
 545 0008 FFF7FEFF 		bl	vPortEnterCritical
 546              	.LVL54:
 255:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 547              		.loc 1 255 3 discriminator 2 view .LVU167
 255:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 548              		.loc 1 255 28 is_stmt 0 discriminator 2 view .LVU168
 549 000c 2368     		ldr	r3, [r4]
 255:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 550              		.loc 1 255 48 discriminator 2 view .LVU169
 551 000e E26B     		ldr	r2, [r4, #60]
 255:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 552              		.loc 1 255 68 discriminator 2 view .LVU170
 553 0010 216C     		ldr	r1, [r4, #64]
 255:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 554              		.loc 1 255 37 discriminator 2 view .LVU171
 555 0012 01FB0230 		mla	r0, r1, r2, r3
 255:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 556              		.loc 1 255 19 discriminator 2 view .LVU172
 557 0016 6060     		str	r0, [r4, #4]
 256:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 558              		.loc 1 256 3 is_stmt 1 discriminator 2 view .LVU173
 256:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 559              		.loc 1 256 30 is_stmt 0 discriminator 2 view .LVU174
 560 0018 0020     		movs	r0, #0
 561 001a A063     		str	r0, [r4, #56]
 257:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 562              		.loc 1 257 3 is_stmt 1 discriminator 2 view .LVU175
 257:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 563              		.loc 1 257 22 is_stmt 0 discriminator 2 view .LVU176
 564 001c A360     		str	r3, [r4, #8]
 258:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 565              		.loc 1 258 3 is_stmt 1 discriminator 2 view .LVU177
 258:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 566              		.loc 1 258 67 is_stmt 0 discriminator 2 view .LVU178
ARM GAS  /tmp/ccw4aonF.s 			page 54


 567 001e 013A     		subs	r2, r2, #1
 258:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 568              		.loc 1 258 43 discriminator 2 view .LVU179
 569 0020 02FB0133 		mla	r3, r2, r1, r3
 258:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 570              		.loc 1 258 25 discriminator 2 view .LVU180
 571 0024 E360     		str	r3, [r4, #12]
 259:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 572              		.loc 1 259 3 is_stmt 1 discriminator 2 view .LVU181
 259:base/os/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 573              		.loc 1 259 20 is_stmt 0 discriminator 2 view .LVU182
 574 0026 FF23     		movs	r3, #255
 575 0028 84F84430 		strb	r3, [r4, #68]
 260:base/os/FreeRTOS/Source/queue.c **** 
 576              		.loc 1 260 3 is_stmt 1 discriminator 2 view .LVU183
 260:base/os/FreeRTOS/Source/queue.c **** 
 577              		.loc 1 260 20 is_stmt 0 discriminator 2 view .LVU184
 578 002c 84F84530 		strb	r3, [r4, #69]
 262:base/os/FreeRTOS/Source/queue.c **** 		{
 579              		.loc 1 262 3 is_stmt 1 discriminator 2 view .LVU185
 262:base/os/FreeRTOS/Source/queue.c **** 		{
 580              		.loc 1 262 5 is_stmt 0 discriminator 2 view .LVU186
 581 0030 FDB9     		cbnz	r5, .L41
 269:base/os/FreeRTOS/Source/queue.c **** 			{
 582              		.loc 1 269 4 is_stmt 1 view .LVU187
 269:base/os/FreeRTOS/Source/queue.c **** 			{
 583              		.loc 1 269 8 is_stmt 0 view .LVU188
 584 0032 2369     		ldr	r3, [r4, #16]
 269:base/os/FreeRTOS/Source/queue.c **** 			{
 585              		.loc 1 269 6 view .LVU189
 586 0034 63B9     		cbnz	r3, .L45
 587              	.L42:
 292:base/os/FreeRTOS/Source/queue.c **** 
 588              		.loc 1 292 2 is_stmt 1 view .LVU190
 589 0036 FFF7FEFF 		bl	vPortExitCritical
 590              	.LVL55:
 296:base/os/FreeRTOS/Source/queue.c **** }
 591              		.loc 1 296 2 view .LVU191
 297:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 592              		.loc 1 297 1 is_stmt 0 view .LVU192
 593 003a 0120     		movs	r0, #1
 594 003c 38BD     		pop	{r3, r4, r5, pc}
 595              	.LVL56:
 596              	.L44:
 251:base/os/FreeRTOS/Source/queue.c **** 
 597              		.loc 1 251 2 is_stmt 1 view .LVU193
 598              	.LBB120:
 599              	.LBI120:
 600              		.file 2 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
ARM GAS  /tmp/ccw4aonF.s 			page 55


   9:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccw4aonF.s 			page 56


  66:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
ARM GAS  /tmp/ccw4aonF.s 			page 57


 123:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
ARM GAS  /tmp/ccw4aonF.s 			page 58


 180:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 601              		.loc 2 191 30 view .LVU194
 602              	.LBB121:
 192:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 603              		.loc 2 193 1 view .LVU195
 194:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 604              		.loc 2 195 2 view .LVU196
 605              		.syntax unified
 606              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 607 003e 4FF05003 			mov r3, #80												
 608 0042 83F31188 		msr basepri, r3											
 609 0046 BFF36F8F 		isb														
 610 004a BFF34F8F 		dsb														
 611              	
 612              	@ 0 "" 2
 613              	.LVL57:
 614              		.thumb
 615              		.syntax unified
 616              	.L40:
 617              		.loc 2 195 2 is_stmt 0 view .LVU197
 618              	.LBE121:
 619              	.LBE120:
 251:base/os/FreeRTOS/Source/queue.c **** 
 620              		.loc 1 251 2 is_stmt 1 discriminator 1 view .LVU198
 251:base/os/FreeRTOS/Source/queue.c **** 
 621              		.loc 1 251 2 discriminator 1 view .LVU199
 622 004e FEE7     		b	.L40
 623              	.LVL58:
 624              	.L45:
 271:base/os/FreeRTOS/Source/queue.c **** 				{
 625              		.loc 1 271 5 view .LVU200
 271:base/os/FreeRTOS/Source/queue.c **** 				{
 626              		.loc 1 271 9 is_stmt 0 view .LVU201
 627 0050 04F11000 		add	r0, r4, #16
 628 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 629              	.LVL59:
 271:base/os/FreeRTOS/Source/queue.c **** 				{
 630              		.loc 1 271 7 view .LVU202
 631 0058 0028     		cmp	r0, #0
 632 005a ECD0     		beq	.L42
 273:base/os/FreeRTOS/Source/queue.c **** 				}
 633              		.loc 1 273 6 is_stmt 1 view .LVU203
 634 005c 4FF0E023 		mov	r3, #-536813568
 635 0060 4FF08052 		mov	r2, #268435456
ARM GAS  /tmp/ccw4aonF.s 			page 59


 636 0064 C3F8042D 		str	r2, [r3, #3332]
 273:base/os/FreeRTOS/Source/queue.c **** 				}
 637              		.loc 1 273 6 view .LVU204
 638              		.syntax unified
 639              	@ 273 "base/os/FreeRTOS/Source/queue.c" 1
 640 0068 BFF34F8F 		dsb
 641              	@ 0 "" 2
 273:base/os/FreeRTOS/Source/queue.c **** 				}
 642              		.loc 1 273 6 view .LVU205
 643              	@ 273 "base/os/FreeRTOS/Source/queue.c" 1
 644 006c BFF36F8F 		isb
 645              	@ 0 "" 2
 273:base/os/FreeRTOS/Source/queue.c **** 				}
 646              		.loc 1 273 38 view .LVU206
 647              		.thumb
 648              		.syntax unified
 649 0070 E1E7     		b	.L42
 650              	.L41:
 288:base/os/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 651              		.loc 1 288 4 view .LVU207
 652 0072 04F11000 		add	r0, r4, #16
 653 0076 FFF7FEFF 		bl	vListInitialise
 654              	.LVL60:
 289:base/os/FreeRTOS/Source/queue.c **** 		}
 655              		.loc 1 289 4 view .LVU208
 656 007a 04F12400 		add	r0, r4, #36
 657 007e FFF7FEFF 		bl	vListInitialise
 658              	.LVL61:
 659 0082 D8E7     		b	.L42
 660              		.cfi_endproc
 661              	.LFE4:
 663              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 664              		.align	1
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu softvfp
 670              	prvInitialiseNewQueue:
 671              	.LVL62:
 672              	.LFB7:
 409:base/os/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 673              		.loc 1 409 1 view -0
 674              		.cfi_startproc
 675              		@ args = 4, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 409:base/os/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 677              		.loc 1 409 1 is_stmt 0 view .LVU210
 678 0000 38B5     		push	{r3, r4, r5, lr}
 679              	.LCFI6:
 680              		.cfi_def_cfa_offset 16
 681              		.cfi_offset 3, -16
 682              		.cfi_offset 4, -12
 683              		.cfi_offset 5, -8
 684              		.cfi_offset 14, -4
 685 0002 1D46     		mov	r5, r3
 686 0004 049C     		ldr	r4, [sp, #16]
 412:base/os/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccw4aonF.s 			page 60


 687              		.loc 1 412 2 is_stmt 1 view .LVU211
 414:base/os/FreeRTOS/Source/queue.c **** 	{
 688              		.loc 1 414 2 view .LVU212
 414:base/os/FreeRTOS/Source/queue.c **** 	{
 689              		.loc 1 414 4 is_stmt 0 view .LVU213
 690 0006 0B46     		mov	r3, r1
 691              	.LVL63:
 414:base/os/FreeRTOS/Source/queue.c **** 	{
 692              		.loc 1 414 4 view .LVU214
 693 0008 49B9     		cbnz	r1, .L47
 420:base/os/FreeRTOS/Source/queue.c **** 	}
 694              		.loc 1 420 3 is_stmt 1 view .LVU215
 420:base/os/FreeRTOS/Source/queue.c **** 	}
 695              		.loc 1 420 22 is_stmt 0 view .LVU216
 696 000a 2460     		str	r4, [r4]
 697              	.L48:
 430:base/os/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 698              		.loc 1 430 2 is_stmt 1 view .LVU217
 430:base/os/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 699              		.loc 1 430 23 is_stmt 0 view .LVU218
 700 000c E063     		str	r0, [r4, #60]
 431:base/os/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 701              		.loc 1 431 2 is_stmt 1 view .LVU219
 431:base/os/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 702              		.loc 1 431 25 is_stmt 0 view .LVU220
 703 000e 2364     		str	r3, [r4, #64]
 432:base/os/FreeRTOS/Source/queue.c **** 
 704              		.loc 1 432 2 is_stmt 1 view .LVU221
 432:base/os/FreeRTOS/Source/queue.c **** 
 705              		.loc 1 432 11 is_stmt 0 view .LVU222
 706 0010 0121     		movs	r1, #1
 707              	.LVL64:
 432:base/os/FreeRTOS/Source/queue.c **** 
 708              		.loc 1 432 11 view .LVU223
 709 0012 2046     		mov	r0, r4
 710              	.LVL65:
 432:base/os/FreeRTOS/Source/queue.c **** 
 711              		.loc 1 432 11 view .LVU224
 712 0014 FFF7FEFF 		bl	xQueueGenericReset
 713              	.LVL66:
 436:base/os/FreeRTOS/Source/queue.c **** 	}
 714              		.loc 1 436 3 is_stmt 1 view .LVU225
 436:base/os/FreeRTOS/Source/queue.c **** 	}
 715              		.loc 1 436 27 is_stmt 0 view .LVU226
 716 0018 84F84C50 		strb	r5, [r4, #76]
 446:base/os/FreeRTOS/Source/queue.c **** }
 717              		.loc 1 446 33 is_stmt 1 view .LVU227
 447:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 718              		.loc 1 447 1 is_stmt 0 view .LVU228
 719 001c 38BD     		pop	{r3, r4, r5, pc}
 720              	.LVL67:
 721              	.L47:
 425:base/os/FreeRTOS/Source/queue.c **** 	}
 722              		.loc 1 425 3 is_stmt 1 view .LVU229
 425:base/os/FreeRTOS/Source/queue.c **** 	}
 723              		.loc 1 425 22 is_stmt 0 view .LVU230
 724 001e 2260     		str	r2, [r4]
ARM GAS  /tmp/ccw4aonF.s 			page 61


 725 0020 F4E7     		b	.L48
 726              		.cfi_endproc
 727              	.LFE7:
 729              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 730              		.align	1
 731              		.global	xQueueGenericCreateStatic
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu softvfp
 737              	xQueueGenericCreateStatic:
 738              	.LVL68:
 739              	.LFB5:
 303:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 740              		.loc 1 303 2 is_stmt 1 view -0
 741              		.cfi_startproc
 742              		@ args = 4, pretend = 0, frame = 8
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 304:base/os/FreeRTOS/Source/queue.c **** 
 744              		.loc 1 304 2 view .LVU232
 306:base/os/FreeRTOS/Source/queue.c **** 
 745              		.loc 1 306 3 view .LVU233
 746 0000 40B9     		cbnz	r0, .L51
 306:base/os/FreeRTOS/Source/queue.c **** 
 747              		.loc 1 306 3 view .LVU234
 748              	.LBB122:
 749              	.LBI122:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 750              		.loc 2 191 30 view .LVU235
 751              	.LBB123:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 752              		.loc 2 193 1 view .LVU236
 753              		.loc 2 195 2 view .LVU237
 754              		.syntax unified
 755              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 756 0002 4FF05003 			mov r3, #80												
 757 0006 83F31188 		msr basepri, r3											
 758 000a BFF36F8F 		isb														
 759 000e BFF34F8F 		dsb														
 760              	
 761              	@ 0 "" 2
 762              	.LVL69:
 763              		.thumb
 764              		.syntax unified
 765              	.L52:
 766              		.loc 2 195 2 is_stmt 0 view .LVU238
 767              	.LBE123:
 768              	.LBE122:
 306:base/os/FreeRTOS/Source/queue.c **** 
 769              		.loc 1 306 3 is_stmt 1 discriminator 1 view .LVU239
 306:base/os/FreeRTOS/Source/queue.c **** 
 770              		.loc 1 306 3 discriminator 1 view .LVU240
 771 0012 FEE7     		b	.L52
 772              	.LVL70:
 773              	.L51:
 303:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 774              		.loc 1 303 2 is_stmt 0 discriminator 2 view .LVU241
ARM GAS  /tmp/ccw4aonF.s 			page 62


 775 0014 10B5     		push	{r4, lr}
 776              	.LCFI7:
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 4, -8
 779              		.cfi_offset 14, -4
 780 0016 84B0     		sub	sp, sp, #16
 781              	.LCFI8:
 782              		.cfi_def_cfa_offset 24
 783 0018 1C46     		mov	r4, r3
 784 001a 8446     		mov	ip, r0
 306:base/os/FreeRTOS/Source/queue.c **** 
 785              		.loc 1 306 52 is_stmt 1 discriminator 2 view .LVU242
 310:base/os/FreeRTOS/Source/queue.c **** 
 786              		.loc 1 310 3 discriminator 2 view .LVU243
 787 001c 53B1     		cbz	r3, .L63
 310:base/os/FreeRTOS/Source/queue.c **** 
 788              		.loc 1 310 40 discriminator 2 view .LVU244
 314:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 789              		.loc 1 314 3 discriminator 2 view .LVU245
 790 001e 92B1     		cbz	r2, .L55
 791 0020 89B9     		cbnz	r1, .L55
 314:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 792              		.loc 1 314 3 view .LVU246
 793              	.LBB124:
 794              	.LBI124:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 795              		.loc 2 191 30 view .LVU247
 796              	.LBB125:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 797              		.loc 2 193 1 view .LVU248
 798              		.loc 2 195 2 view .LVU249
 799              		.syntax unified
 800              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 801 0022 4FF05003 			mov r3, #80												
 802 0026 83F31188 		msr basepri, r3											
 803 002a BFF36F8F 		isb														
 804 002e BFF34F8F 		dsb														
 805              	
 806              	@ 0 "" 2
 807              	.LVL71:
 808              		.thumb
 809              		.syntax unified
 810              	.L56:
 811              		.loc 2 195 2 is_stmt 0 view .LVU250
 812              	.LBE125:
 813              	.LBE124:
 314:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 814              		.loc 1 314 3 is_stmt 1 discriminator 3 view .LVU251
 314:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 815              		.loc 1 314 3 discriminator 3 view .LVU252
 816 0032 FEE7     		b	.L56
 817              	.LVL72:
 818              	.L63:
 310:base/os/FreeRTOS/Source/queue.c **** 
 819              		.loc 1 310 3 view .LVU253
 820              	.LBB126:
 821              	.LBI126:
ARM GAS  /tmp/ccw4aonF.s 			page 63


 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 822              		.loc 2 191 30 view .LVU254
 823              	.LBB127:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 824              		.loc 2 193 1 view .LVU255
 825              		.loc 2 195 2 view .LVU256
 826              		.syntax unified
 827              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 828 0034 4FF05003 			mov r3, #80												
 829 0038 83F31188 		msr basepri, r3											
 830 003c BFF36F8F 		isb														
 831 0040 BFF34F8F 		dsb														
 832              	
 833              	@ 0 "" 2
 834              	.LVL73:
 835              		.thumb
 836              		.syntax unified
 837              	.L54:
 838              		.loc 2 195 2 is_stmt 0 view .LVU257
 839              	.LBE127:
 840              	.LBE126:
 310:base/os/FreeRTOS/Source/queue.c **** 
 841              		.loc 1 310 3 is_stmt 1 discriminator 2 view .LVU258
 310:base/os/FreeRTOS/Source/queue.c **** 
 842              		.loc 1 310 3 discriminator 2 view .LVU259
 843 0044 FEE7     		b	.L54
 844              	.LVL74:
 845              	.L55:
 314:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 846              		.loc 1 314 74 discriminator 8 view .LVU260
 315:base/os/FreeRTOS/Source/queue.c **** 
 847              		.loc 1 315 3 discriminator 8 view .LVU261
 848 0046 6AB1     		cbz	r2, .L64
 849              	.L57:
 315:base/os/FreeRTOS/Source/queue.c **** 
 850              		.loc 1 315 74 discriminator 8 view .LVU262
 851              	.LBB128:
 322:base/os/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 852              		.loc 1 322 4 discriminator 8 view .LVU263
 322:base/os/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 853              		.loc 1 322 20 is_stmt 0 discriminator 8 view .LVU264
 854 0048 5023     		movs	r3, #80
 855              	.LVL75:
 322:base/os/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 856              		.loc 1 322 20 discriminator 8 view .LVU265
 857 004a 0393     		str	r3, [sp, #12]
 323:base/os/FreeRTOS/Source/queue.c **** 		}
 858              		.loc 1 323 4 is_stmt 1 discriminator 8 view .LVU266
 859 004c 039B     		ldr	r3, [sp, #12]
 860 004e 502B     		cmp	r3, #80
 861 0050 13D0     		beq	.L59
 323:base/os/FreeRTOS/Source/queue.c **** 		}
 862              		.loc 1 323 4 view .LVU267
 863              	.LBB129:
 864              	.LBI129:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 865              		.loc 2 191 30 view .LVU268
ARM GAS  /tmp/ccw4aonF.s 			page 64


 866              	.LBB130:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 867              		.loc 2 193 1 view .LVU269
 868              		.loc 2 195 2 view .LVU270
 869              		.syntax unified
 870              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 871 0052 4FF05003 			mov r3, #80												
 872 0056 83F31188 		msr basepri, r3											
 873 005a BFF36F8F 		isb														
 874 005e BFF34F8F 		dsb														
 875              	
 876              	@ 0 "" 2
 877              	.LVL76:
 878              		.thumb
 879              		.syntax unified
 880              	.L60:
 881              		.loc 2 195 2 is_stmt 0 view .LVU271
 882              	.LBE130:
 883              	.LBE129:
 323:base/os/FreeRTOS/Source/queue.c **** 		}
 884              		.loc 1 323 4 is_stmt 1 discriminator 5 view .LVU272
 323:base/os/FreeRTOS/Source/queue.c **** 		}
 885              		.loc 1 323 4 discriminator 5 view .LVU273
 886 0062 FEE7     		b	.L60
 887              	.LVL77:
 888              	.L64:
 323:base/os/FreeRTOS/Source/queue.c **** 		}
 889              		.loc 1 323 4 is_stmt 0 discriminator 5 view .LVU274
 890              	.LBE128:
 315:base/os/FreeRTOS/Source/queue.c **** 
 891              		.loc 1 315 3 discriminator 2 view .LVU275
 892 0064 0029     		cmp	r1, #0
 893 0066 EFD0     		beq	.L57
 315:base/os/FreeRTOS/Source/queue.c **** 
 894              		.loc 1 315 3 is_stmt 1 view .LVU276
 895              	.LBB131:
 896              	.LBI131:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 897              		.loc 2 191 30 view .LVU277
 898              	.LBB132:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 899              		.loc 2 193 1 view .LVU278
 900              		.loc 2 195 2 view .LVU279
 901              		.syntax unified
 902              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 903 0068 4FF05003 			mov r3, #80												
 904 006c 83F31188 		msr basepri, r3											
 905 0070 BFF36F8F 		isb														
 906 0074 BFF34F8F 		dsb														
 907              	
 908              	@ 0 "" 2
 909              	.LVL78:
 910              		.thumb
 911              		.syntax unified
 912              	.L58:
 913              		.loc 2 195 2 is_stmt 0 view .LVU280
 914              	.LBE132:
ARM GAS  /tmp/ccw4aonF.s 			page 65


 915              	.LBE131:
 315:base/os/FreeRTOS/Source/queue.c **** 
 916              		.loc 1 315 3 is_stmt 1 discriminator 4 view .LVU281
 315:base/os/FreeRTOS/Source/queue.c **** 
 917              		.loc 1 315 3 discriminator 4 view .LVU282
 918 0078 FEE7     		b	.L58
 919              	.L59:
 920              	.LBB133:
 323:base/os/FreeRTOS/Source/queue.c **** 		}
 921              		.loc 1 323 46 view .LVU283
 922              	.LBE133:
 330:base/os/FreeRTOS/Source/queue.c **** 
 923              		.loc 1 330 3 view .LVU284
 924              	.LVL79:
 332:base/os/FreeRTOS/Source/queue.c **** 		{
 925              		.loc 1 332 3 view .LVU285
 339:base/os/FreeRTOS/Source/queue.c **** 			}
 926              		.loc 1 339 5 view .LVU286
 339:base/os/FreeRTOS/Source/queue.c **** 			}
 927              		.loc 1 339 39 is_stmt 0 view .LVU287
 928 007a 0123     		movs	r3, #1
 929 007c 84F84630 		strb	r3, [r4, #70]
 343:base/os/FreeRTOS/Source/queue.c **** 		}
 930              		.loc 1 343 4 is_stmt 1 view .LVU288
 931 0080 0094     		str	r4, [sp]
 932 0082 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 933 0086 6046     		mov	r0, ip
 934              	.LVL80:
 343:base/os/FreeRTOS/Source/queue.c **** 		}
 935              		.loc 1 343 4 is_stmt 0 view .LVU289
 936 0088 FFF7FEFF 		bl	prvInitialiseNewQueue
 937              	.LVL81:
 347:base/os/FreeRTOS/Source/queue.c **** 		}
 938              		.loc 1 347 43 is_stmt 1 view .LVU290
 350:base/os/FreeRTOS/Source/queue.c **** 	}
 939              		.loc 1 350 3 view .LVU291
 351:base/os/FreeRTOS/Source/queue.c **** 
 940              		.loc 1 351 2 is_stmt 0 view .LVU292
 941 008c 2046     		mov	r0, r4
 942 008e 04B0     		add	sp, sp, #16
 943              	.LCFI9:
 944              		.cfi_def_cfa_offset 8
 945              		@ sp needed
 946 0090 10BD     		pop	{r4, pc}
 351:base/os/FreeRTOS/Source/queue.c **** 
 947              		.loc 1 351 2 view .LVU293
 948              		.cfi_endproc
 949              	.LFE5:
 951              		.section	.text.xQueueGenericCreate,"ax",%progbits
 952              		.align	1
 953              		.global	xQueueGenericCreate
 954              		.syntax unified
 955              		.thumb
 956              		.thumb_func
 957              		.fpu softvfp
 959              	xQueueGenericCreate:
 960              	.LVL82:
ARM GAS  /tmp/ccw4aonF.s 			page 66


 961              	.LFB6:
 359:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 962              		.loc 1 359 2 is_stmt 1 view -0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 360:base/os/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 966              		.loc 1 360 2 view .LVU295
 361:base/os/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 967              		.loc 1 361 2 view .LVU296
 362:base/os/FreeRTOS/Source/queue.c **** 
 968              		.loc 1 362 2 view .LVU297
 364:base/os/FreeRTOS/Source/queue.c **** 
 969              		.loc 1 364 3 view .LVU298
 970 0000 40B9     		cbnz	r0, .L66
 364:base/os/FreeRTOS/Source/queue.c **** 
 971              		.loc 1 364 3 view .LVU299
 972              	.LBB134:
 973              	.LBI134:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 974              		.loc 2 191 30 view .LVU300
 975              	.LBB135:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 976              		.loc 2 193 1 view .LVU301
 977              		.loc 2 195 2 view .LVU302
 978              		.syntax unified
 979              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 980 0002 4FF05003 			mov r3, #80												
 981 0006 83F31188 		msr basepri, r3											
 982 000a BFF36F8F 		isb														
 983 000e BFF34F8F 		dsb														
 984              	
 985              	@ 0 "" 2
 986              	.LVL83:
 987              		.thumb
 988              		.syntax unified
 989              	.L67:
 990              		.loc 2 195 2 is_stmt 0 view .LVU303
 991              	.LBE135:
 992              	.LBE134:
 364:base/os/FreeRTOS/Source/queue.c **** 
 993              		.loc 1 364 3 is_stmt 1 discriminator 1 view .LVU304
 364:base/os/FreeRTOS/Source/queue.c **** 
 994              		.loc 1 364 3 discriminator 1 view .LVU305
 995 0012 FEE7     		b	.L67
 996              	.L66:
 359:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 997              		.loc 1 359 2 is_stmt 0 discriminator 2 view .LVU306
 998 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 999              	.LCFI10:
 1000              		.cfi_def_cfa_offset 20
 1001              		.cfi_offset 4, -20
 1002              		.cfi_offset 5, -16
 1003              		.cfi_offset 6, -12
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
 1006 0016 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccw4aonF.s 			page 67


 1007              	.LCFI11:
 1008              		.cfi_def_cfa_offset 32
 1009 0018 0C46     		mov	r4, r1
 1010 001a 1546     		mov	r5, r2
 1011 001c 0746     		mov	r7, r0
 364:base/os/FreeRTOS/Source/queue.c **** 
 1012              		.loc 1 364 52 is_stmt 1 discriminator 2 view .LVU307
 366:base/os/FreeRTOS/Source/queue.c **** 		{
 1013              		.loc 1 366 3 discriminator 2 view .LVU308
 366:base/os/FreeRTOS/Source/queue.c **** 		{
 1014              		.loc 1 366 5 is_stmt 0 discriminator 2 view .LVU309
 1015 001e A1B1     		cbz	r1, .L70
 375:base/os/FreeRTOS/Source/queue.c **** 		}
 1016              		.loc 1 375 4 is_stmt 1 view .LVU310
 375:base/os/FreeRTOS/Source/queue.c **** 		}
 1017              		.loc 1 375 22 is_stmt 0 view .LVU311
 1018 0020 01FB00F0 		mul	r0, r1, r0
 1019              	.LVL84:
 1020              	.L68:
 378:base/os/FreeRTOS/Source/queue.c **** 
 1021              		.loc 1 378 3 is_stmt 1 view .LVU312
 378:base/os/FreeRTOS/Source/queue.c **** 
 1022              		.loc 1 378 30 is_stmt 0 view .LVU313
 1023 0024 5030     		adds	r0, r0, #80
 1024              	.LVL85:
 378:base/os/FreeRTOS/Source/queue.c **** 
 1025              		.loc 1 378 30 view .LVU314
 1026 0026 FFF7FEFF 		bl	pvPortMalloc
 1027              	.LVL86:
 380:base/os/FreeRTOS/Source/queue.c **** 		{
 1028              		.loc 1 380 3 is_stmt 1 view .LVU315
 380:base/os/FreeRTOS/Source/queue.c **** 		{
 1029              		.loc 1 380 5 is_stmt 0 view .LVU316
 1030 002a 0646     		mov	r6, r0
 1031 002c 50B1     		cbz	r0, .L65
 384:base/os/FreeRTOS/Source/queue.c **** 
 1032              		.loc 1 384 4 is_stmt 1 view .LVU317
 1033              	.LVL87:
 391:base/os/FreeRTOS/Source/queue.c **** 			}
 1034              		.loc 1 391 5 view .LVU318
 391:base/os/FreeRTOS/Source/queue.c **** 			}
 1035              		.loc 1 391 39 is_stmt 0 view .LVU319
 1036 002e 0023     		movs	r3, #0
 1037 0030 80F84630 		strb	r3, [r0, #70]
 395:base/os/FreeRTOS/Source/queue.c **** 		}
 1038              		.loc 1 395 4 is_stmt 1 view .LVU320
 1039 0034 0090     		str	r0, [sp]
 1040 0036 2B46     		mov	r3, r5
 1041 0038 00F15002 		add	r2, r0, #80
 1042              	.LVL88:
 395:base/os/FreeRTOS/Source/queue.c **** 		}
 1043              		.loc 1 395 4 is_stmt 0 view .LVU321
 1044 003c 2146     		mov	r1, r4
 1045 003e 3846     		mov	r0, r7
 1046              	.LVL89:
 395:base/os/FreeRTOS/Source/queue.c **** 		}
 1047              		.loc 1 395 4 view .LVU322
ARM GAS  /tmp/ccw4aonF.s 			page 68


 1048 0040 FFF7FEFF 		bl	prvInitialiseNewQueue
 1049              	.LVL90:
 399:base/os/FreeRTOS/Source/queue.c **** 		}
 1050              		.loc 1 399 43 is_stmt 1 view .LVU323
 402:base/os/FreeRTOS/Source/queue.c **** 	}
 1051              		.loc 1 402 3 view .LVU324
 1052              	.L65:
 403:base/os/FreeRTOS/Source/queue.c **** 
 1053              		.loc 1 403 2 is_stmt 0 view .LVU325
 1054 0044 3046     		mov	r0, r6
 1055 0046 03B0     		add	sp, sp, #12
 1056              	.LCFI12:
 1057              		.cfi_remember_state
 1058              		.cfi_def_cfa_offset 20
 1059              		@ sp needed
 1060 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 1061              	.LVL91:
 1062              	.L70:
 1063              	.LCFI13:
 1064              		.cfi_restore_state
 369:base/os/FreeRTOS/Source/queue.c **** 		}
 1065              		.loc 1 369 22 view .LVU326
 1066 004a 0846     		mov	r0, r1
 1067              	.LVL92:
 369:base/os/FreeRTOS/Source/queue.c **** 		}
 1068              		.loc 1 369 22 view .LVU327
 1069 004c EAE7     		b	.L68
 1070              		.cfi_endproc
 1071              	.LFE6:
 1073              		.section	.text.xQueueGetMutexHolder,"ax",%progbits
 1074              		.align	1
 1075              		.global	xQueueGetMutexHolder
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu softvfp
 1081              	xQueueGetMutexHolder:
 1082              	.LVL93:
 1083              	.LFB11:
 519:base/os/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 1084              		.loc 1 519 2 is_stmt 1 view -0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 519:base/os/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 1088              		.loc 1 519 2 is_stmt 0 view .LVU329
 1089 0000 10B5     		push	{r4, lr}
 1090              	.LCFI14:
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 4, -8
 1093              		.cfi_offset 14, -4
 1094 0002 0446     		mov	r4, r0
 520:base/os/FreeRTOS/Source/queue.c **** 
 1095              		.loc 1 520 2 is_stmt 1 view .LVU330
 527:base/os/FreeRTOS/Source/queue.c **** 		{
 1096              		.loc 1 527 3 view .LVU331
 1097 0004 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  /tmp/ccw4aonF.s 			page 69


 1098              	.LVL94:
 529:base/os/FreeRTOS/Source/queue.c **** 			{
 1099              		.loc 1 529 4 view .LVU332
 529:base/os/FreeRTOS/Source/queue.c **** 			{
 1100              		.loc 1 529 36 is_stmt 0 view .LVU333
 1101 0008 2368     		ldr	r3, [r4]
 529:base/os/FreeRTOS/Source/queue.c **** 			{
 1102              		.loc 1 529 6 view .LVU334
 1103 000a 23B9     		cbnz	r3, .L75
 531:base/os/FreeRTOS/Source/queue.c **** 			}
 1104              		.loc 1 531 5 is_stmt 1 view .LVU335
 531:base/os/FreeRTOS/Source/queue.c **** 			}
 1105              		.loc 1 531 14 is_stmt 0 view .LVU336
 1106 000c 6468     		ldr	r4, [r4, #4]
 1107              	.LVL95:
 1108              	.L74:
 538:base/os/FreeRTOS/Source/queue.c **** 
 1109              		.loc 1 538 3 is_stmt 1 view .LVU337
 1110 000e FFF7FEFF 		bl	vPortExitCritical
 1111              	.LVL96:
 540:base/os/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 1112              		.loc 1 540 3 view .LVU338
 541:base/os/FreeRTOS/Source/queue.c **** 
 1113              		.loc 1 541 2 is_stmt 0 view .LVU339
 1114 0012 2046     		mov	r0, r4
 1115 0014 10BD     		pop	{r4, pc}
 1116              	.LVL97:
 1117              	.L75:
 535:base/os/FreeRTOS/Source/queue.c **** 			}
 1118              		.loc 1 535 14 view .LVU340
 1119 0016 0024     		movs	r4, #0
 1120              	.LVL98:
 535:base/os/FreeRTOS/Source/queue.c **** 			}
 1121              		.loc 1 535 14 view .LVU341
 1122 0018 F9E7     		b	.L74
 1123              		.cfi_endproc
 1124              	.LFE11:
 1126              		.section	.text.xQueueGetMutexHolderFromISR,"ax",%progbits
 1127              		.align	1
 1128              		.global	xQueueGetMutexHolderFromISR
 1129              		.syntax unified
 1130              		.thumb
 1131              		.thumb_func
 1132              		.fpu softvfp
 1134              	xQueueGetMutexHolderFromISR:
 1135              	.LVL99:
 1136              	.LFB12:
 549:base/os/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 1137              		.loc 1 549 2 is_stmt 1 view -0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141              		@ link register save eliminated.
 550:base/os/FreeRTOS/Source/queue.c **** 
 1142              		.loc 1 550 2 view .LVU343
 552:base/os/FreeRTOS/Source/queue.c **** 
 1143              		.loc 1 552 3 view .LVU344
ARM GAS  /tmp/ccw4aonF.s 			page 70


 1144 0000 18B1     		cbz	r0, .L82
 552:base/os/FreeRTOS/Source/queue.c **** 
 1145              		.loc 1 552 29 discriminator 2 view .LVU345
 557:base/os/FreeRTOS/Source/queue.c **** 		{
 1146              		.loc 1 557 3 discriminator 2 view .LVU346
 557:base/os/FreeRTOS/Source/queue.c **** 		{
 1147              		.loc 1 557 35 is_stmt 0 discriminator 2 view .LVU347
 1148 0002 0268     		ldr	r2, [r0]
 557:base/os/FreeRTOS/Source/queue.c **** 		{
 1149              		.loc 1 557 5 discriminator 2 view .LVU348
 1150 0004 52B9     		cbnz	r2, .L81
 559:base/os/FreeRTOS/Source/queue.c **** 		}
 1151              		.loc 1 559 4 is_stmt 1 view .LVU349
 559:base/os/FreeRTOS/Source/queue.c **** 		}
 1152              		.loc 1 559 13 is_stmt 0 view .LVU350
 1153 0006 4068     		ldr	r0, [r0, #4]
 1154              	.LVL100:
 559:base/os/FreeRTOS/Source/queue.c **** 		}
 1155              		.loc 1 559 13 view .LVU351
 1156 0008 7047     		bx	lr
 1157              	.LVL101:
 1158              	.L82:
 552:base/os/FreeRTOS/Source/queue.c **** 
 1159              		.loc 1 552 3 is_stmt 1 view .LVU352
 1160              	.LBB136:
 1161              	.LBI136:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1162              		.loc 2 191 30 view .LVU353
 1163              	.LBB137:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1164              		.loc 2 193 1 view .LVU354
 1165              		.loc 2 195 2 view .LVU355
 1166              		.syntax unified
 1167              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1168 000a 4FF05003 			mov r3, #80												
 1169 000e 83F31188 		msr basepri, r3											
 1170 0012 BFF36F8F 		isb														
 1171 0016 BFF34F8F 		dsb														
 1172              	
 1173              	@ 0 "" 2
 1174              	.LVL102:
 1175              		.thumb
 1176              		.syntax unified
 1177              	.L79:
 1178              		.loc 2 195 2 is_stmt 0 view .LVU356
 1179              	.LBE137:
 1180              	.LBE136:
 552:base/os/FreeRTOS/Source/queue.c **** 
 1181              		.loc 1 552 3 is_stmt 1 discriminator 1 view .LVU357
 552:base/os/FreeRTOS/Source/queue.c **** 
 1182              		.loc 1 552 3 discriminator 1 view .LVU358
 1183 001a FEE7     		b	.L79
 1184              	.L81:
 563:base/os/FreeRTOS/Source/queue.c **** 		}
 1185              		.loc 1 563 13 is_stmt 0 view .LVU359
 1186 001c 0020     		movs	r0, #0
 1187              	.LVL103:
ARM GAS  /tmp/ccw4aonF.s 			page 71


 566:base/os/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 1188              		.loc 1 566 3 is_stmt 1 view .LVU360
 567:base/os/FreeRTOS/Source/queue.c **** 
 1189              		.loc 1 567 2 is_stmt 0 view .LVU361
 1190 001e 7047     		bx	lr
 1191              		.cfi_endproc
 1192              	.LFE12:
 1194              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 1195              		.align	1
 1196              		.global	xQueueCreateCountingSemaphoreStatic
 1197              		.syntax unified
 1198              		.thumb
 1199              		.thumb_func
 1200              		.fpu softvfp
 1202              	xQueueCreateCountingSemaphoreStatic:
 1203              	.LVL104:
 1204              	.LFB15:
 672:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1205              		.loc 1 672 2 is_stmt 1 view -0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 673:base/os/FreeRTOS/Source/queue.c **** 
 1209              		.loc 1 673 2 view .LVU363
 675:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1210              		.loc 1 675 3 view .LVU364
 1211 0000 40B9     		cbnz	r0, .L84
 675:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1212              		.loc 1 675 3 view .LVU365
 1213              	.LBB138:
 1214              	.LBI138:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1215              		.loc 2 191 30 view .LVU366
 1216              	.LBB139:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1217              		.loc 2 193 1 view .LVU367
 1218              		.loc 2 195 2 view .LVU368
 1219              		.syntax unified
 1220              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1221 0002 4FF05003 			mov r3, #80												
 1222 0006 83F31188 		msr basepri, r3											
 1223 000a BFF36F8F 		isb														
 1224 000e BFF34F8F 		dsb														
 1225              	
 1226              	@ 0 "" 2
 1227              	.LVL105:
 1228              		.thumb
 1229              		.syntax unified
 1230              	.L85:
 1231              		.loc 2 195 2 is_stmt 0 view .LVU369
 1232              	.LBE139:
 1233              	.LBE138:
 675:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1234              		.loc 1 675 3 is_stmt 1 discriminator 1 view .LVU370
 675:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1235              		.loc 1 675 3 discriminator 1 view .LVU371
 1236 0012 FEE7     		b	.L85
ARM GAS  /tmp/ccw4aonF.s 			page 72


 1237              	.L84:
 672:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1238              		.loc 1 672 2 is_stmt 0 discriminator 2 view .LVU372
 1239 0014 10B5     		push	{r4, lr}
 1240              	.LCFI15:
 1241              		.cfi_def_cfa_offset 8
 1242              		.cfi_offset 4, -8
 1243              		.cfi_offset 14, -4
 1244 0016 82B0     		sub	sp, sp, #8
 1245              	.LCFI16:
 1246              		.cfi_def_cfa_offset 16
 1247 0018 0C46     		mov	r4, r1
 675:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1248              		.loc 1 675 34 is_stmt 1 discriminator 2 view .LVU373
 676:base/os/FreeRTOS/Source/queue.c **** 
 1249              		.loc 1 676 3 discriminator 2 view .LVU374
 1250 001a 8842     		cmp	r0, r1
 1251 001c 08D2     		bcs	.L86
 676:base/os/FreeRTOS/Source/queue.c **** 
 1252              		.loc 1 676 3 view .LVU375
 1253              	.LBB140:
 1254              	.LBI140:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1255              		.loc 2 191 30 view .LVU376
 1256              	.LBB141:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1257              		.loc 2 193 1 view .LVU377
 1258              		.loc 2 195 2 view .LVU378
 1259              		.syntax unified
 1260              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1261 001e 4FF05003 			mov r3, #80												
 1262 0022 83F31188 		msr basepri, r3											
 1263 0026 BFF36F8F 		isb														
 1264 002a BFF34F8F 		dsb														
 1265              	
 1266              	@ 0 "" 2
 1267              	.LVL106:
 1268              		.thumb
 1269              		.syntax unified
 1270              	.L87:
 1271              		.loc 2 195 2 is_stmt 0 view .LVU379
 1272              	.LBE141:
 1273              	.LBE140:
 676:base/os/FreeRTOS/Source/queue.c **** 
 1274              		.loc 1 676 3 is_stmt 1 discriminator 2 view .LVU380
 676:base/os/FreeRTOS/Source/queue.c **** 
 1275              		.loc 1 676 3 discriminator 2 view .LVU381
 1276 002e FEE7     		b	.L87
 1277              	.L86:
 676:base/os/FreeRTOS/Source/queue.c **** 
 1278              		.loc 1 676 47 discriminator 2 view .LVU382
 678:base/os/FreeRTOS/Source/queue.c **** 
 1279              		.loc 1 678 3 discriminator 2 view .LVU383
 678:base/os/FreeRTOS/Source/queue.c **** 
 1280              		.loc 1 678 13 is_stmt 0 discriminator 2 view .LVU384
 1281 0030 0223     		movs	r3, #2
 1282 0032 0093     		str	r3, [sp]
ARM GAS  /tmp/ccw4aonF.s 			page 73


 1283 0034 1346     		mov	r3, r2
 1284 0036 0022     		movs	r2, #0
 1285              	.LVL107:
 678:base/os/FreeRTOS/Source/queue.c **** 
 1286              		.loc 1 678 13 discriminator 2 view .LVU385
 1287 0038 1146     		mov	r1, r2
 1288              	.LVL108:
 678:base/os/FreeRTOS/Source/queue.c **** 
 1289              		.loc 1 678 13 discriminator 2 view .LVU386
 1290 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 1291              	.LVL109:
 680:base/os/FreeRTOS/Source/queue.c **** 		{
 1292              		.loc 1 680 3 is_stmt 1 discriminator 2 view .LVU387
 680:base/os/FreeRTOS/Source/queue.c **** 		{
 1293              		.loc 1 680 5 is_stmt 0 discriminator 2 view .LVU388
 1294 003e 00B1     		cbz	r0, .L83
 682:base/os/FreeRTOS/Source/queue.c **** 
 1295              		.loc 1 682 4 is_stmt 1 view .LVU389
 682:base/os/FreeRTOS/Source/queue.c **** 
 1296              		.loc 1 682 49 is_stmt 0 view .LVU390
 1297 0040 8463     		str	r4, [r0, #56]
 684:base/os/FreeRTOS/Source/queue.c **** 		}
 1298              		.loc 1 684 36 is_stmt 1 view .LVU391
 688:base/os/FreeRTOS/Source/queue.c **** 		}
 1299              		.loc 1 688 43 view .LVU392
 691:base/os/FreeRTOS/Source/queue.c **** 	}
 1300              		.loc 1 691 3 view .LVU393
 1301              	.L83:
 692:base/os/FreeRTOS/Source/queue.c **** 
 1302              		.loc 1 692 2 is_stmt 0 view .LVU394
 1303 0042 02B0     		add	sp, sp, #8
 1304              	.LCFI17:
 1305              		.cfi_def_cfa_offset 8
 1306              		@ sp needed
 1307 0044 10BD     		pop	{r4, pc}
 692:base/os/FreeRTOS/Source/queue.c **** 
 1308              		.loc 1 692 2 view .LVU395
 1309              		.cfi_endproc
 1310              	.LFE15:
 1312              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 1313              		.align	1
 1314              		.global	xQueueCreateCountingSemaphore
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu softvfp
 1320              	xQueueCreateCountingSemaphore:
 1321              	.LVL110:
 1322              	.LFB16:
 700:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1323              		.loc 1 700 2 is_stmt 1 view -0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 701:base/os/FreeRTOS/Source/queue.c **** 
 1327              		.loc 1 701 2 view .LVU397
 703:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
ARM GAS  /tmp/ccw4aonF.s 			page 74


 1328              		.loc 1 703 3 view .LVU398
 1329 0000 40B9     		cbnz	r0, .L92
 703:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1330              		.loc 1 703 3 view .LVU399
 1331              	.LBB142:
 1332              	.LBI142:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1333              		.loc 2 191 30 view .LVU400
 1334              	.LBB143:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1335              		.loc 2 193 1 view .LVU401
 1336              		.loc 2 195 2 view .LVU402
 1337              		.syntax unified
 1338              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1339 0002 4FF05003 			mov r3, #80												
 1340 0006 83F31188 		msr basepri, r3											
 1341 000a BFF36F8F 		isb														
 1342 000e BFF34F8F 		dsb														
 1343              	
 1344              	@ 0 "" 2
 1345              	.LVL111:
 1346              		.thumb
 1347              		.syntax unified
 1348              	.L93:
 1349              		.loc 2 195 2 is_stmt 0 view .LVU403
 1350              	.LBE143:
 1351              	.LBE142:
 703:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1352              		.loc 1 703 3 is_stmt 1 discriminator 1 view .LVU404
 703:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1353              		.loc 1 703 3 discriminator 1 view .LVU405
 1354 0012 FEE7     		b	.L93
 1355              	.L92:
 700:base/os/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1356              		.loc 1 700 2 is_stmt 0 discriminator 2 view .LVU406
 1357 0014 10B5     		push	{r4, lr}
 1358              	.LCFI18:
 1359              		.cfi_def_cfa_offset 8
 1360              		.cfi_offset 4, -8
 1361              		.cfi_offset 14, -4
 1362 0016 0C46     		mov	r4, r1
 703:base/os/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1363              		.loc 1 703 34 is_stmt 1 discriminator 2 view .LVU407
 704:base/os/FreeRTOS/Source/queue.c **** 
 1364              		.loc 1 704 3 discriminator 2 view .LVU408
 1365 0018 8842     		cmp	r0, r1
 1366 001a 08D2     		bcs	.L94
 704:base/os/FreeRTOS/Source/queue.c **** 
 1367              		.loc 1 704 3 view .LVU409
 1368              	.LBB144:
 1369              	.LBI144:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1370              		.loc 2 191 30 view .LVU410
 1371              	.LBB145:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1372              		.loc 2 193 1 view .LVU411
 1373              		.loc 2 195 2 view .LVU412
ARM GAS  /tmp/ccw4aonF.s 			page 75


 1374              		.syntax unified
 1375              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1376 001c 4FF05003 			mov r3, #80												
 1377 0020 83F31188 		msr basepri, r3											
 1378 0024 BFF36F8F 		isb														
 1379 0028 BFF34F8F 		dsb														
 1380              	
 1381              	@ 0 "" 2
 1382              	.LVL112:
 1383              		.thumb
 1384              		.syntax unified
 1385              	.L95:
 1386              		.loc 2 195 2 is_stmt 0 view .LVU413
 1387              	.LBE145:
 1388              	.LBE144:
 704:base/os/FreeRTOS/Source/queue.c **** 
 1389              		.loc 1 704 3 is_stmt 1 discriminator 2 view .LVU414
 704:base/os/FreeRTOS/Source/queue.c **** 
 1390              		.loc 1 704 3 discriminator 2 view .LVU415
 1391 002c FEE7     		b	.L95
 1392              	.L94:
 704:base/os/FreeRTOS/Source/queue.c **** 
 1393              		.loc 1 704 47 discriminator 2 view .LVU416
 706:base/os/FreeRTOS/Source/queue.c **** 
 1394              		.loc 1 706 3 discriminator 2 view .LVU417
 706:base/os/FreeRTOS/Source/queue.c **** 
 1395              		.loc 1 706 13 is_stmt 0 discriminator 2 view .LVU418
 1396 002e 0222     		movs	r2, #2
 1397 0030 0021     		movs	r1, #0
 1398              	.LVL113:
 706:base/os/FreeRTOS/Source/queue.c **** 
 1399              		.loc 1 706 13 discriminator 2 view .LVU419
 1400 0032 FFF7FEFF 		bl	xQueueGenericCreate
 1401              	.LVL114:
 708:base/os/FreeRTOS/Source/queue.c **** 		{
 1402              		.loc 1 708 3 is_stmt 1 discriminator 2 view .LVU420
 708:base/os/FreeRTOS/Source/queue.c **** 		{
 1403              		.loc 1 708 5 is_stmt 0 discriminator 2 view .LVU421
 1404 0036 00B1     		cbz	r0, .L91
 710:base/os/FreeRTOS/Source/queue.c **** 
 1405              		.loc 1 710 4 is_stmt 1 view .LVU422
 710:base/os/FreeRTOS/Source/queue.c **** 
 1406              		.loc 1 710 49 is_stmt 0 view .LVU423
 1407 0038 8463     		str	r4, [r0, #56]
 712:base/os/FreeRTOS/Source/queue.c **** 		}
 1408              		.loc 1 712 36 is_stmt 1 view .LVU424
 716:base/os/FreeRTOS/Source/queue.c **** 		}
 1409              		.loc 1 716 43 view .LVU425
 719:base/os/FreeRTOS/Source/queue.c **** 	}
 1410              		.loc 1 719 3 view .LVU426
 1411              	.L91:
 720:base/os/FreeRTOS/Source/queue.c **** 
 1412              		.loc 1 720 2 is_stmt 0 view .LVU427
 1413 003a 10BD     		pop	{r4, pc}
 720:base/os/FreeRTOS/Source/queue.c **** 
 1414              		.loc 1 720 2 view .LVU428
 1415              		.cfi_endproc
ARM GAS  /tmp/ccw4aonF.s 			page 76


 1416              	.LFE16:
 1418              		.section	.text.xQueueGenericSend,"ax",%progbits
 1419              		.align	1
 1420              		.global	xQueueGenericSend
 1421              		.syntax unified
 1422              		.thumb
 1423              		.thumb_func
 1424              		.fpu softvfp
 1426              	xQueueGenericSend:
 1427              	.LVL115:
 1428              	.LFB17:
 726:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1429              		.loc 1 726 1 is_stmt 1 view -0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 16
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 726:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1433              		.loc 1 726 1 is_stmt 0 view .LVU430
 1434 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1435              	.LCFI19:
 1436              		.cfi_def_cfa_offset 20
 1437              		.cfi_offset 4, -20
 1438              		.cfi_offset 5, -16
 1439              		.cfi_offset 6, -12
 1440              		.cfi_offset 7, -8
 1441              		.cfi_offset 14, -4
 1442 0002 85B0     		sub	sp, sp, #20
 1443              	.LCFI20:
 1444              		.cfi_def_cfa_offset 40
 1445 0004 0192     		str	r2, [sp, #4]
 727:base/os/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 1446              		.loc 1 727 1 is_stmt 1 view .LVU431
 1447              	.LVL116:
 728:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1448              		.loc 1 728 1 view .LVU432
 729:base/os/FreeRTOS/Source/queue.c **** 
 1449              		.loc 1 729 1 view .LVU433
 731:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1450              		.loc 1 731 2 view .LVU434
 1451 0006 88B1     		cbz	r0, .L123
 1452 0008 0F46     		mov	r7, r1
 1453 000a 1D46     		mov	r5, r3
 1454 000c 0446     		mov	r4, r0
 731:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1455              		.loc 1 731 25 discriminator 2 view .LVU435
 732:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1456              		.loc 1 732 2 discriminator 2 view .LVU436
 1457 000e B1B1     		cbz	r1, .L124
 1458              	.LVL117:
 1459              	.L102:
 732:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1460              		.loc 1 732 97 discriminator 8 view .LVU437
 733:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1461              		.loc 1 733 2 discriminator 8 view .LVU438
 1462 0010 022D     		cmp	r5, #2
 1463 0012 20D1     		bne	.L104
 733:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
ARM GAS  /tmp/ccw4aonF.s 			page 77


 1464              		.loc 1 733 2 is_stmt 0 discriminator 2 view .LVU439
 1465 0014 E36B     		ldr	r3, [r4, #60]
 1466 0016 012B     		cmp	r3, #1
 1467 0018 1DD0     		beq	.L104
 733:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1468              		.loc 1 733 2 is_stmt 1 view .LVU440
 1469              	.LBB146:
 1470              	.LBI146:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1471              		.loc 2 191 30 view .LVU441
 1472              	.LBB147:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1473              		.loc 2 193 1 view .LVU442
 1474              		.loc 2 195 2 view .LVU443
 1475              		.syntax unified
 1476              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1477 001a 4FF05003 			mov r3, #80												
 1478 001e 83F31188 		msr basepri, r3											
 1479 0022 BFF36F8F 		isb														
 1480 0026 BFF34F8F 		dsb														
 1481              	
 1482              	@ 0 "" 2
 1483              	.LVL118:
 1484              		.thumb
 1485              		.syntax unified
 1486              	.L105:
 1487              		.loc 2 195 2 is_stmt 0 view .LVU444
 1488              	.LBE147:
 1489              	.LBE146:
 733:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1490              		.loc 1 733 2 is_stmt 1 discriminator 3 view .LVU445
 733:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1491              		.loc 1 733 2 discriminator 3 view .LVU446
 1492 002a FEE7     		b	.L105
 1493              	.LVL119:
 1494              	.L123:
 731:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1495              		.loc 1 731 2 view .LVU447
 1496              	.LBB148:
 1497              	.LBI148:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1498              		.loc 2 191 30 view .LVU448
 1499              	.LBB149:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1500              		.loc 2 193 1 view .LVU449
 1501              		.loc 2 195 2 view .LVU450
 1502              		.syntax unified
 1503              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1504 002c 4FF05003 			mov r3, #80												
 1505 0030 83F31188 		msr basepri, r3											
 1506 0034 BFF36F8F 		isb														
 1507 0038 BFF34F8F 		dsb														
 1508              	
 1509              	@ 0 "" 2
 1510              	.LVL120:
 1511              		.thumb
 1512              		.syntax unified
ARM GAS  /tmp/ccw4aonF.s 			page 78


 1513              	.L101:
 1514              		.loc 2 195 2 is_stmt 0 view .LVU451
 1515              	.LBE149:
 1516              	.LBE148:
 731:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1517              		.loc 1 731 2 is_stmt 1 discriminator 1 view .LVU452
 731:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1518              		.loc 1 731 2 discriminator 1 view .LVU453
 1519 003c FEE7     		b	.L101
 1520              	.LVL121:
 1521              	.L124:
 732:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1522              		.loc 1 732 2 is_stmt 0 discriminator 2 view .LVU454
 1523 003e 036C     		ldr	r3, [r0, #64]
 1524              	.LVL122:
 732:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1525              		.loc 1 732 2 discriminator 2 view .LVU455
 1526 0040 002B     		cmp	r3, #0
 1527 0042 E5D0     		beq	.L102
 732:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1528              		.loc 1 732 2 is_stmt 1 view .LVU456
 1529              	.LBB150:
 1530              	.LBI150:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1531              		.loc 2 191 30 view .LVU457
 1532              	.LBB151:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1533              		.loc 2 193 1 view .LVU458
 1534              		.loc 2 195 2 view .LVU459
 1535              		.syntax unified
 1536              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1537 0044 4FF05003 			mov r3, #80												
 1538 0048 83F31188 		msr basepri, r3											
 1539 004c BFF36F8F 		isb														
 1540 0050 BFF34F8F 		dsb														
 1541              	
 1542              	@ 0 "" 2
 1543              	.LVL123:
 1544              		.thumb
 1545              		.syntax unified
 1546              	.L103:
 1547              		.loc 2 195 2 is_stmt 0 view .LVU460
 1548              	.LBE151:
 1549              	.LBE150:
 732:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1550              		.loc 1 732 2 is_stmt 1 discriminator 2 view .LVU461
 732:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1551              		.loc 1 732 2 discriminator 2 view .LVU462
 1552 0054 FEE7     		b	.L103
 1553              	.L104:
 733:base/os/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1554              		.loc 1 733 88 discriminator 8 view .LVU463
 736:base/os/FreeRTOS/Source/queue.c **** 	}
 1555              		.loc 1 736 3 discriminator 8 view .LVU464
 1556 0056 FFF7FEFF 		bl	xTaskGetSchedulerState
 1557              	.LVL124:
 736:base/os/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/ccw4aonF.s 			page 79


 1558              		.loc 1 736 3 is_stmt 0 discriminator 8 view .LVU465
 1559 005a 0646     		mov	r6, r0
 1560 005c 58B9     		cbnz	r0, .L121
 736:base/os/FreeRTOS/Source/queue.c **** 	}
 1561              		.loc 1 736 3 discriminator 2 view .LVU466
 1562 005e 019B     		ldr	r3, [sp, #4]
 1563 0060 002B     		cmp	r3, #0
 1564 0062 48D0     		beq	.L108
 736:base/os/FreeRTOS/Source/queue.c **** 	}
 1565              		.loc 1 736 3 is_stmt 1 view .LVU467
 1566              	.LBB152:
 1567              	.LBI152:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1568              		.loc 2 191 30 view .LVU468
 1569              	.LBB153:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1570              		.loc 2 193 1 view .LVU469
 1571              		.loc 2 195 2 view .LVU470
 1572              		.syntax unified
 1573              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1574 0064 4FF05003 			mov r3, #80												
 1575 0068 83F31188 		msr basepri, r3											
 1576 006c BFF36F8F 		isb														
 1577 0070 BFF34F8F 		dsb														
 1578              	
 1579              	@ 0 "" 2
 1580              	.LVL125:
 1581              		.thumb
 1582              		.syntax unified
 1583              	.L107:
 1584              		.loc 2 195 2 is_stmt 0 view .LVU471
 1585              	.LBE153:
 1586              	.LBE152:
 736:base/os/FreeRTOS/Source/queue.c **** 	}
 1587              		.loc 1 736 3 is_stmt 1 discriminator 4 view .LVU472
 736:base/os/FreeRTOS/Source/queue.c **** 	}
 1588              		.loc 1 736 3 discriminator 4 view .LVU473
 1589 0074 FEE7     		b	.L107
 1590              	.L121:
 1591 0076 0026     		movs	r6, #0
 1592 0078 3DE0     		b	.L108
 1593              	.LVL126:
 1594              	.L109:
 754:base/os/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 1595              		.loc 1 754 31 view .LVU474
 755:base/os/FreeRTOS/Source/queue.c **** 
 1596              		.loc 1 755 5 view .LVU475
 755:base/os/FreeRTOS/Source/queue.c **** 
 1597              		.loc 1 755 22 is_stmt 0 view .LVU476
 1598 007a 2A46     		mov	r2, r5
 1599 007c 3946     		mov	r1, r7
 1600 007e 2046     		mov	r0, r4
 1601 0080 FFF7FEFF 		bl	prvCopyDataToQueue
 1602              	.LVL127:
 810:base/os/FreeRTOS/Source/queue.c **** 					{
 1603              		.loc 1 810 6 is_stmt 1 view .LVU477
 810:base/os/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/ccw4aonF.s 			page 80


 1604              		.loc 1 810 10 is_stmt 0 view .LVU478
 1605 0084 636A     		ldr	r3, [r4, #36]
 810:base/os/FreeRTOS/Source/queue.c **** 					{
 1606              		.loc 1 810 8 view .LVU479
 1607 0086 7BB9     		cbnz	r3, .L125
 825:base/os/FreeRTOS/Source/queue.c **** 					{
 1608              		.loc 1 825 11 is_stmt 1 view .LVU480
 825:base/os/FreeRTOS/Source/queue.c **** 					{
 1609              		.loc 1 825 13 is_stmt 0 view .LVU481
 1610 0088 48B1     		cbz	r0, .L112
 831:base/os/FreeRTOS/Source/queue.c **** 					}
 1611              		.loc 1 831 7 is_stmt 1 view .LVU482
 1612 008a 4FF0E023 		mov	r3, #-536813568
 1613 008e 4FF08052 		mov	r2, #268435456
 1614 0092 C3F8042D 		str	r2, [r3, #3332]
 831:base/os/FreeRTOS/Source/queue.c **** 					}
 1615              		.loc 1 831 7 view .LVU483
 1616              		.syntax unified
 1617              	@ 831 "base/os/FreeRTOS/Source/queue.c" 1
 1618 0096 BFF34F8F 		dsb
 1619              	@ 0 "" 2
 831:base/os/FreeRTOS/Source/queue.c **** 					}
 1620              		.loc 1 831 7 view .LVU484
 1621              	@ 831 "base/os/FreeRTOS/Source/queue.c" 1
 1622 009a BFF36F8F 		isb
 1623              	@ 0 "" 2
 831:base/os/FreeRTOS/Source/queue.c **** 					}
 1624              		.loc 1 831 39 view .LVU485
 1625              	.LVL128:
 1626              		.thumb
 1627              		.syntax unified
 1628              	.L112:
 835:base/os/FreeRTOS/Source/queue.c **** 					}
 1629              		.loc 1 835 31 view .LVU486
 840:base/os/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1630              		.loc 1 840 5 view .LVU487
 1631 009e FFF7FEFF 		bl	vPortExitCritical
 1632              	.LVL129:
 841:base/os/FreeRTOS/Source/queue.c **** 			}
 1633              		.loc 1 841 5 view .LVU488
 841:base/os/FreeRTOS/Source/queue.c **** 			}
 1634              		.loc 1 841 12 is_stmt 0 view .LVU489
 1635 00a2 0120     		movs	r0, #1
 1636              	.L99:
 920:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1637              		.loc 1 920 1 view .LVU490
 1638 00a4 05B0     		add	sp, sp, #20
 1639              	.LCFI21:
 1640              		.cfi_remember_state
 1641              		.cfi_def_cfa_offset 20
 1642              		@ sp needed
 1643 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1644              	.LVL130:
 1645              	.L125:
 1646              	.LCFI22:
 1647              		.cfi_restore_state
 812:base/os/FreeRTOS/Source/queue.c **** 						{
ARM GAS  /tmp/ccw4aonF.s 			page 81


 1648              		.loc 1 812 7 is_stmt 1 view .LVU491
 812:base/os/FreeRTOS/Source/queue.c **** 						{
 1649              		.loc 1 812 11 is_stmt 0 view .LVU492
 1650 00a8 04F12400 		add	r0, r4, #36
 1651              	.LVL131:
 812:base/os/FreeRTOS/Source/queue.c **** 						{
 1652              		.loc 1 812 11 view .LVU493
 1653 00ac FFF7FEFF 		bl	xTaskRemoveFromEventList
 1654              	.LVL132:
 812:base/os/FreeRTOS/Source/queue.c **** 						{
 1655              		.loc 1 812 9 view .LVU494
 1656 00b0 0028     		cmp	r0, #0
 1657 00b2 F4D0     		beq	.L112
 818:base/os/FreeRTOS/Source/queue.c **** 						}
 1658              		.loc 1 818 8 is_stmt 1 view .LVU495
 1659 00b4 4FF0E023 		mov	r3, #-536813568
 1660 00b8 4FF08052 		mov	r2, #268435456
 1661 00bc C3F8042D 		str	r2, [r3, #3332]
 818:base/os/FreeRTOS/Source/queue.c **** 						}
 1662              		.loc 1 818 8 view .LVU496
 1663              		.syntax unified
 1664              	@ 818 "base/os/FreeRTOS/Source/queue.c" 1
 1665 00c0 BFF34F8F 		dsb
 1666              	@ 0 "" 2
 818:base/os/FreeRTOS/Source/queue.c **** 						}
 1667              		.loc 1 818 8 view .LVU497
 1668              	@ 818 "base/os/FreeRTOS/Source/queue.c" 1
 1669 00c4 BFF36F8F 		isb
 1670              	@ 0 "" 2
 818:base/os/FreeRTOS/Source/queue.c **** 						}
 1671              		.loc 1 818 40 view .LVU498
 1672              		.thumb
 1673              		.syntax unified
 1674 00c8 E9E7     		b	.L112
 1675              	.L126:
 849:base/os/FreeRTOS/Source/queue.c **** 
 1676              		.loc 1 849 6 view .LVU499
 1677 00ca FFF7FEFF 		bl	vPortExitCritical
 1678              	.LVL133:
 853:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 1679              		.loc 1 853 39 view .LVU500
 854:base/os/FreeRTOS/Source/queue.c **** 				}
 1680              		.loc 1 854 6 view .LVU501
 854:base/os/FreeRTOS/Source/queue.c **** 				}
 1681              		.loc 1 854 13 is_stmt 0 view .LVU502
 1682 00ce 0020     		movs	r0, #0
 1683 00d0 E8E7     		b	.L99
 1684              	.L127:
 860:base/os/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1685              		.loc 1 860 6 is_stmt 1 view .LVU503
 1686 00d2 02A8     		add	r0, sp, #8
 1687 00d4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1688              	.LVL134:
 861:base/os/FreeRTOS/Source/queue.c **** 				}
 1689              		.loc 1 861 6 view .LVU504
 861:base/os/FreeRTOS/Source/queue.c **** 				}
 1690              		.loc 1 861 20 is_stmt 0 view .LVU505
ARM GAS  /tmp/ccw4aonF.s 			page 82


 1691 00d8 0126     		movs	r6, #1
 1692 00da 19E0     		b	.L115
 1693              	.LVL135:
 1694              	.L128:
 876:base/os/FreeRTOS/Source/queue.c **** 
 1695              		.loc 1 876 3 is_stmt 1 discriminator 1 view .LVU506
 1696 00dc 0023     		movs	r3, #0
 1697 00de 84F84430 		strb	r3, [r4, #68]
 1698 00e2 21E0     		b	.L116
 1699              	.L129:
 876:base/os/FreeRTOS/Source/queue.c **** 
 1700              		.loc 1 876 3 discriminator 4 view .LVU507
 1701 00e4 0023     		movs	r3, #0
 1702 00e6 84F84530 		strb	r3, [r4, #69]
 1703 00ea 23E0     		b	.L117
 1704              	.L119:
 906:base/os/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1705              		.loc 1 906 5 view .LVU508
 1706 00ec 2046     		mov	r0, r4
 1707 00ee FFF7FEFF 		bl	prvUnlockQueue
 1708              	.LVL136:
 907:base/os/FreeRTOS/Source/queue.c **** 			}
 1709              		.loc 1 907 5 view .LVU509
 907:base/os/FreeRTOS/Source/queue.c **** 			}
 1710              		.loc 1 907 14 is_stmt 0 view .LVU510
 1711 00f2 FFF7FEFF 		bl	xTaskResumeAll
 1712              	.LVL137:
 1713              	.L108:
 736:base/os/FreeRTOS/Source/queue.c **** 	}
 1714              		.loc 1 736 104 is_stmt 1 discriminator 8 view .LVU511
 744:base/os/FreeRTOS/Source/queue.c **** 	{
 1715              		.loc 1 744 2 discriminator 8 view .LVU512
 746:base/os/FreeRTOS/Source/queue.c **** 		{
 1716              		.loc 1 746 3 discriminator 8 view .LVU513
 1717 00f6 FFF7FEFF 		bl	vPortEnterCritical
 1718              	.LVL138:
 752:base/os/FreeRTOS/Source/queue.c **** 			{
 1719              		.loc 1 752 4 discriminator 8 view .LVU514
 752:base/os/FreeRTOS/Source/queue.c **** 			{
 1720              		.loc 1 752 17 is_stmt 0 discriminator 8 view .LVU515
 1721 00fa A26B     		ldr	r2, [r4, #56]
 752:base/os/FreeRTOS/Source/queue.c **** 			{
 1722              		.loc 1 752 46 discriminator 8 view .LVU516
 1723 00fc E36B     		ldr	r3, [r4, #60]
 752:base/os/FreeRTOS/Source/queue.c **** 			{
 1724              		.loc 1 752 6 discriminator 8 view .LVU517
 1725 00fe 9A42     		cmp	r2, r3
 1726 0100 BBD3     		bcc	.L109
 752:base/os/FreeRTOS/Source/queue.c **** 			{
 1727              		.loc 1 752 59 discriminator 1 view .LVU518
 1728 0102 022D     		cmp	r5, #2
 1729 0104 B9D0     		beq	.L109
 845:base/os/FreeRTOS/Source/queue.c **** 				{
 1730              		.loc 1 845 5 is_stmt 1 view .LVU519
 845:base/os/FreeRTOS/Source/queue.c **** 				{
 1731              		.loc 1 845 22 is_stmt 0 view .LVU520
 1732 0106 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccw4aonF.s 			page 83


 845:base/os/FreeRTOS/Source/queue.c **** 				{
 1733              		.loc 1 845 7 view .LVU521
 1734 0108 002B     		cmp	r3, #0
 1735 010a DED0     		beq	.L126
 856:base/os/FreeRTOS/Source/queue.c **** 				{
 1736              		.loc 1 856 10 is_stmt 1 view .LVU522
 856:base/os/FreeRTOS/Source/queue.c **** 				{
 1737              		.loc 1 856 12 is_stmt 0 view .LVU523
 1738 010c 002E     		cmp	r6, #0
 1739 010e E0D0     		beq	.L127
 1740              	.LVL139:
 1741              	.L115:
 866:base/os/FreeRTOS/Source/queue.c **** 				}
 1742              		.loc 1 866 30 is_stmt 1 view .LVU524
 870:base/os/FreeRTOS/Source/queue.c **** 
 1743              		.loc 1 870 3 view .LVU525
 1744 0110 FFF7FEFF 		bl	vPortExitCritical
 1745              	.LVL140:
 875:base/os/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1746              		.loc 1 875 3 view .LVU526
 1747 0114 FFF7FEFF 		bl	vTaskSuspendAll
 1748              	.LVL141:
 876:base/os/FreeRTOS/Source/queue.c **** 
 1749              		.loc 1 876 3 view .LVU527
 1750 0118 FFF7FEFF 		bl	vPortEnterCritical
 1751              	.LVL142:
 876:base/os/FreeRTOS/Source/queue.c **** 
 1752              		.loc 1 876 3 view .LVU528
 1753 011c 94F84420 		ldrb	r2, [r4, #68]	@ zero_extendqisi2
 1754 0120 52B2     		sxtb	r2, r2
 1755 0122 B2F1FF3F 		cmp	r2, #-1
 1756 0126 D9D0     		beq	.L128
 1757              	.L116:
 876:base/os/FreeRTOS/Source/queue.c **** 
 1758              		.loc 1 876 3 discriminator 3 view .LVU529
 1759 0128 94F84520 		ldrb	r2, [r4, #69]	@ zero_extendqisi2
 1760 012c 52B2     		sxtb	r2, r2
 1761 012e B2F1FF3F 		cmp	r2, #-1
 1762 0132 D7D0     		beq	.L129
 1763              	.L117:
 876:base/os/FreeRTOS/Source/queue.c **** 
 1764              		.loc 1 876 3 discriminator 6 view .LVU530
 1765 0134 FFF7FEFF 		bl	vPortExitCritical
 1766              	.LVL143:
 879:base/os/FreeRTOS/Source/queue.c **** 		{
 1767              		.loc 1 879 3 discriminator 6 view .LVU531
 879:base/os/FreeRTOS/Source/queue.c **** 		{
 1768              		.loc 1 879 7 is_stmt 0 discriminator 6 view .LVU532
 1769 0138 01A9     		add	r1, sp, #4
 1770 013a 02A8     		add	r0, sp, #8
 1771 013c FFF7FEFF 		bl	xTaskCheckForTimeOut
 1772              	.LVL144:
 879:base/os/FreeRTOS/Source/queue.c **** 		{
 1773              		.loc 1 879 5 discriminator 6 view .LVU533
 1774 0140 D8B9     		cbnz	r0, .L118
 881:base/os/FreeRTOS/Source/queue.c **** 			{
 1775              		.loc 1 881 4 is_stmt 1 view .LVU534
ARM GAS  /tmp/ccw4aonF.s 			page 84


 881:base/os/FreeRTOS/Source/queue.c **** 			{
 1776              		.loc 1 881 8 is_stmt 0 view .LVU535
 1777 0142 2046     		mov	r0, r4
 1778 0144 FFF7FEFF 		bl	prvIsQueueFull
 1779              	.LVL145:
 881:base/os/FreeRTOS/Source/queue.c **** 			{
 1780              		.loc 1 881 6 view .LVU536
 1781 0148 0028     		cmp	r0, #0
 1782 014a CFD0     		beq	.L119
 883:base/os/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 1783              		.loc 1 883 43 is_stmt 1 view .LVU537
 884:base/os/FreeRTOS/Source/queue.c **** 
 1784              		.loc 1 884 5 view .LVU538
 1785 014c 0199     		ldr	r1, [sp, #4]
 1786 014e 04F11000 		add	r0, r4, #16
 1787 0152 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1788              	.LVL146:
 891:base/os/FreeRTOS/Source/queue.c **** 
 1789              		.loc 1 891 5 view .LVU539
 1790 0156 2046     		mov	r0, r4
 1791 0158 FFF7FEFF 		bl	prvUnlockQueue
 1792              	.LVL147:
 898:base/os/FreeRTOS/Source/queue.c **** 				{
 1793              		.loc 1 898 5 view .LVU540
 898:base/os/FreeRTOS/Source/queue.c **** 				{
 1794              		.loc 1 898 9 is_stmt 0 view .LVU541
 1795 015c FFF7FEFF 		bl	xTaskResumeAll
 1796              	.LVL148:
 898:base/os/FreeRTOS/Source/queue.c **** 				{
 1797              		.loc 1 898 7 view .LVU542
 1798 0160 0028     		cmp	r0, #0
 1799 0162 C8D1     		bne	.L108
 900:base/os/FreeRTOS/Source/queue.c **** 				}
 1800              		.loc 1 900 6 is_stmt 1 view .LVU543
 1801 0164 4FF0E023 		mov	r3, #-536813568
 1802 0168 4FF08052 		mov	r2, #268435456
 1803 016c C3F8042D 		str	r2, [r3, #3332]
 900:base/os/FreeRTOS/Source/queue.c **** 				}
 1804              		.loc 1 900 6 view .LVU544
 1805              		.syntax unified
 1806              	@ 900 "base/os/FreeRTOS/Source/queue.c" 1
 1807 0170 BFF34F8F 		dsb
 1808              	@ 0 "" 2
 900:base/os/FreeRTOS/Source/queue.c **** 				}
 1809              		.loc 1 900 6 view .LVU545
 1810              	@ 900 "base/os/FreeRTOS/Source/queue.c" 1
 1811 0174 BFF36F8F 		isb
 1812              	@ 0 "" 2
 1813              		.thumb
 1814              		.syntax unified
 1815 0178 BDE7     		b	.L108
 1816              	.L118:
 913:base/os/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1817              		.loc 1 913 4 view .LVU546
 1818 017a 2046     		mov	r0, r4
 1819 017c FFF7FEFF 		bl	prvUnlockQueue
 1820              	.LVL149:
ARM GAS  /tmp/ccw4aonF.s 			page 85


 914:base/os/FreeRTOS/Source/queue.c **** 
 1821              		.loc 1 914 4 view .LVU547
 914:base/os/FreeRTOS/Source/queue.c **** 
 1822              		.loc 1 914 13 is_stmt 0 view .LVU548
 1823 0180 FFF7FEFF 		bl	xTaskResumeAll
 1824              	.LVL150:
 916:base/os/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 1825              		.loc 1 916 37 is_stmt 1 view .LVU549
 917:base/os/FreeRTOS/Source/queue.c **** 		}
 1826              		.loc 1 917 4 view .LVU550
 917:base/os/FreeRTOS/Source/queue.c **** 		}
 1827              		.loc 1 917 11 is_stmt 0 view .LVU551
 1828 0184 0020     		movs	r0, #0
 1829 0186 8DE7     		b	.L99
 1830              		.cfi_endproc
 1831              	.LFE17:
 1833              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1834              		.align	1
 1835              		.syntax unified
 1836              		.thumb
 1837              		.thumb_func
 1838              		.fpu softvfp
 1840              	prvInitialiseMutex:
 1841              	.LVL151:
 1842              	.LFB8:
 453:base/os/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1843              		.loc 1 453 2 is_stmt 1 view -0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 454:base/os/FreeRTOS/Source/queue.c **** 		{
 1847              		.loc 1 454 3 view .LVU553
 454:base/os/FreeRTOS/Source/queue.c **** 		{
 1848              		.loc 1 454 5 is_stmt 0 view .LVU554
 1849 0000 48B1     		cbz	r0, .L133
 453:base/os/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1850              		.loc 1 453 2 view .LVU555
 1851 0002 08B5     		push	{r3, lr}
 1852              	.LCFI23:
 1853              		.cfi_def_cfa_offset 8
 1854              		.cfi_offset 3, -8
 1855              		.cfi_offset 14, -4
 460:base/os/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1856              		.loc 1 460 4 is_stmt 1 view .LVU556
 460:base/os/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1857              		.loc 1 460 30 is_stmt 0 view .LVU557
 1858 0004 0021     		movs	r1, #0
 1859 0006 4160     		str	r1, [r0, #4]
 461:base/os/FreeRTOS/Source/queue.c **** 
 1860              		.loc 1 461 4 is_stmt 1 view .LVU558
 461:base/os/FreeRTOS/Source/queue.c **** 
 1861              		.loc 1 461 28 is_stmt 0 view .LVU559
 1862 0008 0160     		str	r1, [r0]
 464:base/os/FreeRTOS/Source/queue.c **** 
 1863              		.loc 1 464 4 is_stmt 1 view .LVU560
 464:base/os/FreeRTOS/Source/queue.c **** 
 1864              		.loc 1 464 39 is_stmt 0 view .LVU561
ARM GAS  /tmp/ccw4aonF.s 			page 86


 1865 000a C160     		str	r1, [r0, #12]
 466:base/os/FreeRTOS/Source/queue.c **** 
 1866              		.loc 1 466 35 is_stmt 1 view .LVU562
 469:base/os/FreeRTOS/Source/queue.c **** 		}
 1867              		.loc 1 469 4 view .LVU563
 469:base/os/FreeRTOS/Source/queue.c **** 		}
 1868              		.loc 1 469 13 is_stmt 0 view .LVU564
 1869 000c 0B46     		mov	r3, r1
 1870 000e 0A46     		mov	r2, r1
 1871 0010 FFF7FEFF 		bl	xQueueGenericSend
 1872              	.LVL152:
 473:base/os/FreeRTOS/Source/queue.c **** 		}
 1873              		.loc 1 473 30 is_stmt 1 view .LVU565
 475:base/os/FreeRTOS/Source/queue.c **** 
 1874              		.loc 1 475 2 is_stmt 0 view .LVU566
 1875 0014 08BD     		pop	{r3, pc}
 1876              	.LVL153:
 1877              	.L133:
 1878              	.LCFI24:
 1879              		.cfi_def_cfa_offset 0
 1880              		.cfi_restore 3
 1881              		.cfi_restore 14
 475:base/os/FreeRTOS/Source/queue.c **** 
 1882              		.loc 1 475 2 view .LVU567
 1883 0016 7047     		bx	lr
 1884              		.cfi_endproc
 1885              	.LFE8:
 1887              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1888              		.align	1
 1889              		.global	xQueueCreateMutex
 1890              		.syntax unified
 1891              		.thumb
 1892              		.thumb_func
 1893              		.fpu softvfp
 1895              	xQueueCreateMutex:
 1896              	.LVL154:
 1897              	.LFB9:
 483:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1898              		.loc 1 483 2 is_stmt 1 view -0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 483:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1902              		.loc 1 483 2 is_stmt 0 view .LVU569
 1903 0000 10B5     		push	{r4, lr}
 1904              	.LCFI25:
 1905              		.cfi_def_cfa_offset 8
 1906              		.cfi_offset 4, -8
 1907              		.cfi_offset 14, -4
 1908 0002 0246     		mov	r2, r0
 484:base/os/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 1909              		.loc 1 484 2 is_stmt 1 view .LVU570
 485:base/os/FreeRTOS/Source/queue.c **** 
 1910              		.loc 1 485 2 view .LVU571
 1911              	.LVL155:
 487:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1912              		.loc 1 487 3 view .LVU572
ARM GAS  /tmp/ccw4aonF.s 			page 87


 487:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1913              		.loc 1 487 30 is_stmt 0 view .LVU573
 1914 0004 0021     		movs	r1, #0
 1915 0006 0120     		movs	r0, #1
 1916              	.LVL156:
 487:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1917              		.loc 1 487 30 view .LVU574
 1918 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1919              	.LVL157:
 1920 000c 0446     		mov	r4, r0
 1921              	.LVL158:
 488:base/os/FreeRTOS/Source/queue.c **** 
 1922              		.loc 1 488 3 is_stmt 1 view .LVU575
 1923 000e FFF7FEFF 		bl	prvInitialiseMutex
 1924              	.LVL159:
 490:base/os/FreeRTOS/Source/queue.c **** 	}
 1925              		.loc 1 490 3 view .LVU576
 491:base/os/FreeRTOS/Source/queue.c **** 
 1926              		.loc 1 491 2 is_stmt 0 view .LVU577
 1927 0012 2046     		mov	r0, r4
 1928 0014 10BD     		pop	{r4, pc}
 491:base/os/FreeRTOS/Source/queue.c **** 
 1929              		.loc 1 491 2 view .LVU578
 1930              		.cfi_endproc
 1931              	.LFE9:
 1933              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1934              		.align	1
 1935              		.global	xQueueCreateMutexStatic
 1936              		.syntax unified
 1937              		.thumb
 1938              		.thumb_func
 1939              		.fpu softvfp
 1941              	xQueueCreateMutexStatic:
 1942              	.LVL160:
 1943              	.LFB10:
 499:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1944              		.loc 1 499 2 is_stmt 1 view -0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 0
 1947              		@ frame_needed = 0, uses_anonymous_args = 0
 499:base/os/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1948              		.loc 1 499 2 is_stmt 0 view .LVU580
 1949 0000 10B5     		push	{r4, lr}
 1950              	.LCFI26:
 1951              		.cfi_def_cfa_offset 8
 1952              		.cfi_offset 4, -8
 1953              		.cfi_offset 14, -4
 1954 0002 82B0     		sub	sp, sp, #8
 1955              	.LCFI27:
 1956              		.cfi_def_cfa_offset 16
 1957 0004 0B46     		mov	r3, r1
 500:base/os/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 1958              		.loc 1 500 2 is_stmt 1 view .LVU581
 501:base/os/FreeRTOS/Source/queue.c **** 
 1959              		.loc 1 501 2 view .LVU582
 1960              	.LVL161:
 505:base/os/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccw4aonF.s 			page 88


 1961              		.loc 1 505 3 view .LVU583
 507:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1962              		.loc 1 507 3 view .LVU584
 507:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1963              		.loc 1 507 30 is_stmt 0 view .LVU585
 1964 0006 0090     		str	r0, [sp]
 1965 0008 0022     		movs	r2, #0
 1966 000a 1146     		mov	r1, r2
 1967              	.LVL162:
 507:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1968              		.loc 1 507 30 view .LVU586
 1969 000c 0120     		movs	r0, #1
 1970              	.LVL163:
 507:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1971              		.loc 1 507 30 view .LVU587
 1972 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1973              	.LVL164:
 507:base/os/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1974              		.loc 1 507 30 view .LVU588
 1975 0012 0446     		mov	r4, r0
 1976              	.LVL165:
 508:base/os/FreeRTOS/Source/queue.c **** 
 1977              		.loc 1 508 3 is_stmt 1 view .LVU589
 1978 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1979              	.LVL166:
 510:base/os/FreeRTOS/Source/queue.c **** 	}
 1980              		.loc 1 510 3 view .LVU590
 511:base/os/FreeRTOS/Source/queue.c **** 
 1981              		.loc 1 511 2 is_stmt 0 view .LVU591
 1982 0018 2046     		mov	r0, r4
 1983 001a 02B0     		add	sp, sp, #8
 1984              	.LCFI28:
 1985              		.cfi_def_cfa_offset 8
 1986              		@ sp needed
 1987 001c 10BD     		pop	{r4, pc}
 511:base/os/FreeRTOS/Source/queue.c **** 
 1988              		.loc 1 511 2 view .LVU592
 1989              		.cfi_endproc
 1990              	.LFE10:
 1992              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1993              		.align	1
 1994              		.global	xQueueGiveMutexRecursive
 1995              		.syntax unified
 1996              		.thumb
 1997              		.thumb_func
 1998              		.fpu softvfp
 2000              	xQueueGiveMutexRecursive:
 2001              	.LVL167:
 2002              	.LFB13:
 575:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2003              		.loc 1 575 2 is_stmt 1 view -0
 2004              		.cfi_startproc
 2005              		@ args = 0, pretend = 0, frame = 0
 2006              		@ frame_needed = 0, uses_anonymous_args = 0
 575:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2007              		.loc 1 575 2 is_stmt 0 view .LVU594
 2008 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccw4aonF.s 			page 89


 2009              	.LCFI29:
 2010              		.cfi_def_cfa_offset 16
 2011              		.cfi_offset 3, -16
 2012              		.cfi_offset 4, -12
 2013              		.cfi_offset 5, -8
 2014              		.cfi_offset 14, -4
 576:base/os/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 2015              		.loc 1 576 2 is_stmt 1 view .LVU595
 577:base/os/FreeRTOS/Source/queue.c **** 
 2016              		.loc 1 577 2 view .LVU596
 2017              	.LVL168:
 579:base/os/FreeRTOS/Source/queue.c **** 
 2018              		.loc 1 579 3 view .LVU597
 2019 0002 38B1     		cbz	r0, .L147
 2020 0004 0446     		mov	r4, r0
 579:base/os/FreeRTOS/Source/queue.c **** 
 2021              		.loc 1 579 26 discriminator 2 view .LVU598
 587:base/os/FreeRTOS/Source/queue.c **** 		{
 2022              		.loc 1 587 3 discriminator 2 view .LVU599
 587:base/os/FreeRTOS/Source/queue.c **** 		{
 2023              		.loc 1 587 14 is_stmt 0 discriminator 2 view .LVU600
 2024 0006 4568     		ldr	r5, [r0, #4]
 587:base/os/FreeRTOS/Source/queue.c **** 		{
 2025              		.loc 1 587 44 discriminator 2 view .LVU601
 2026 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2027              	.LVL169:
 587:base/os/FreeRTOS/Source/queue.c **** 		{
 2028              		.loc 1 587 5 discriminator 2 view .LVU602
 2029 000c 8542     		cmp	r5, r0
 2030 000e 0AD0     		beq	.L148
 616:base/os/FreeRTOS/Source/queue.c **** 
 2031              		.loc 1 616 12 view .LVU603
 2032 0010 0020     		movs	r0, #0
 2033              	.L140:
 622:base/os/FreeRTOS/Source/queue.c **** 
 2034              		.loc 1 622 2 view .LVU604
 2035 0012 38BD     		pop	{r3, r4, r5, pc}
 2036              	.LVL170:
 2037              	.L147:
 579:base/os/FreeRTOS/Source/queue.c **** 
 2038              		.loc 1 579 3 is_stmt 1 view .LVU605
 2039              	.LBB154:
 2040              	.LBI154:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2041              		.loc 2 191 30 view .LVU606
 2042              	.LBB155:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2043              		.loc 2 193 1 view .LVU607
 2044              		.loc 2 195 2 view .LVU608
 2045              		.syntax unified
 2046              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2047 0014 4FF05003 			mov r3, #80												
 2048 0018 83F31188 		msr basepri, r3											
 2049 001c BFF36F8F 		isb														
 2050 0020 BFF34F8F 		dsb														
 2051              	
 2052              	@ 0 "" 2
ARM GAS  /tmp/ccw4aonF.s 			page 90


 2053              	.LVL171:
 2054              		.thumb
 2055              		.syntax unified
 2056              	.L142:
 2057              		.loc 2 195 2 is_stmt 0 view .LVU609
 2058              	.LBE155:
 2059              	.LBE154:
 579:base/os/FreeRTOS/Source/queue.c **** 
 2060              		.loc 1 579 3 is_stmt 1 discriminator 1 view .LVU610
 579:base/os/FreeRTOS/Source/queue.c **** 
 2061              		.loc 1 579 3 discriminator 1 view .LVU611
 2062 0024 FEE7     		b	.L142
 2063              	.LVL172:
 2064              	.L148:
 589:base/os/FreeRTOS/Source/queue.c **** 
 2065              		.loc 1 589 40 view .LVU612
 596:base/os/FreeRTOS/Source/queue.c **** 
 2066              		.loc 1 596 4 view .LVU613
 596:base/os/FreeRTOS/Source/queue.c **** 
 2067              		.loc 1 596 16 is_stmt 0 view .LVU614
 2068 0026 E368     		ldr	r3, [r4, #12]
 596:base/os/FreeRTOS/Source/queue.c **** 
 2069              		.loc 1 596 39 view .LVU615
 2070 0028 013B     		subs	r3, r3, #1
 2071 002a E360     		str	r3, [r4, #12]
 599:base/os/FreeRTOS/Source/queue.c **** 			{
 2072              		.loc 1 599 4 is_stmt 1 view .LVU616
 599:base/os/FreeRTOS/Source/queue.c **** 			{
 2073              		.loc 1 599 6 is_stmt 0 view .LVU617
 2074 002c 0BB1     		cbz	r3, .L149
 610:base/os/FreeRTOS/Source/queue.c **** 		}
 2075              		.loc 1 610 12 view .LVU618
 2076 002e 0120     		movs	r0, #1
 2077              	.LVL173:
 618:base/os/FreeRTOS/Source/queue.c **** 		}
 2078              		.loc 1 618 47 is_stmt 1 view .LVU619
 621:base/os/FreeRTOS/Source/queue.c **** 	}
 2079              		.loc 1 621 3 view .LVU620
 621:base/os/FreeRTOS/Source/queue.c **** 	}
 2080              		.loc 1 621 10 is_stmt 0 view .LVU621
 2081 0030 EFE7     		b	.L140
 2082              	.LVL174:
 2083              	.L149:
 603:base/os/FreeRTOS/Source/queue.c **** 			}
 2084              		.loc 1 603 5 is_stmt 1 view .LVU622
 603:base/os/FreeRTOS/Source/queue.c **** 			}
 2085              		.loc 1 603 14 is_stmt 0 view .LVU623
 2086 0032 1A46     		mov	r2, r3
 2087 0034 1946     		mov	r1, r3
 2088 0036 2046     		mov	r0, r4
 2089 0038 FFF7FEFF 		bl	xQueueGenericSend
 2090              	.LVL175:
 610:base/os/FreeRTOS/Source/queue.c **** 		}
 2091              		.loc 1 610 12 view .LVU624
 2092 003c 0120     		movs	r0, #1
 2093 003e E8E7     		b	.L140
 2094              		.cfi_endproc
ARM GAS  /tmp/ccw4aonF.s 			page 91


 2095              	.LFE13:
 2097              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 2098              		.align	1
 2099              		.global	xQueueGenericSendFromISR
 2100              		.syntax unified
 2101              		.thumb
 2102              		.thumb_func
 2103              		.fpu softvfp
 2105              	xQueueGenericSendFromISR:
 2106              	.LVL176:
 2107              	.LFB18:
 924:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2108              		.loc 1 924 1 is_stmt 1 view -0
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 0
 2111              		@ frame_needed = 0, uses_anonymous_args = 0
 924:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2112              		.loc 1 924 1 is_stmt 0 view .LVU626
 2113 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2114              	.LCFI30:
 2115              		.cfi_def_cfa_offset 32
 2116              		.cfi_offset 3, -32
 2117              		.cfi_offset 4, -28
 2118              		.cfi_offset 5, -24
 2119              		.cfi_offset 6, -20
 2120              		.cfi_offset 7, -16
 2121              		.cfi_offset 8, -12
 2122              		.cfi_offset 9, -8
 2123              		.cfi_offset 14, -4
 925:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 2124              		.loc 1 925 1 is_stmt 1 view .LVU627
 926:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2125              		.loc 1 926 1 view .LVU628
 927:base/os/FreeRTOS/Source/queue.c **** 
 2126              		.loc 1 927 1 view .LVU629
 2127              	.LVL177:
 929:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2128              		.loc 1 929 2 view .LVU630
 2129 0004 90B1     		cbz	r0, .L165
 2130 0006 0F46     		mov	r7, r1
 2131 0008 1646     		mov	r6, r2
 2132 000a 1C46     		mov	r4, r3
 2133 000c 0546     		mov	r5, r0
 929:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2134              		.loc 1 929 25 discriminator 2 view .LVU631
 930:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2135              		.loc 1 930 2 discriminator 2 view .LVU632
 2136 000e B1B1     		cbz	r1, .L166
 2137              	.LVL178:
 2138              	.L153:
 930:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2139              		.loc 1 930 97 discriminator 8 view .LVU633
 931:base/os/FreeRTOS/Source/queue.c **** 
 2140              		.loc 1 931 2 discriminator 8 view .LVU634
 2141 0010 022C     		cmp	r4, #2
 2142 0012 20D1     		bne	.L155
 931:base/os/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccw4aonF.s 			page 92


 2143              		.loc 1 931 2 is_stmt 0 discriminator 2 view .LVU635
 2144 0014 EB6B     		ldr	r3, [r5, #60]
 2145 0016 012B     		cmp	r3, #1
 2146 0018 1DD0     		beq	.L155
 931:base/os/FreeRTOS/Source/queue.c **** 
 2147              		.loc 1 931 2 is_stmt 1 view .LVU636
 2148              	.LBB156:
 2149              	.LBI156:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2150              		.loc 2 191 30 view .LVU637
 2151              	.LBB157:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2152              		.loc 2 193 1 view .LVU638
 2153              		.loc 2 195 2 view .LVU639
 2154              		.syntax unified
 2155              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2156 001a 4FF05003 			mov r3, #80												
 2157 001e 83F31188 		msr basepri, r3											
 2158 0022 BFF36F8F 		isb														
 2159 0026 BFF34F8F 		dsb														
 2160              	
 2161              	@ 0 "" 2
 2162              	.LVL179:
 2163              		.thumb
 2164              		.syntax unified
 2165              	.L156:
 2166              		.loc 2 195 2 is_stmt 0 view .LVU640
 2167              	.LBE157:
 2168              	.LBE156:
 931:base/os/FreeRTOS/Source/queue.c **** 
 2169              		.loc 1 931 2 is_stmt 1 discriminator 3 view .LVU641
 931:base/os/FreeRTOS/Source/queue.c **** 
 2170              		.loc 1 931 2 discriminator 3 view .LVU642
 2171 002a FEE7     		b	.L156
 2172              	.LVL180:
 2173              	.L165:
 929:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2174              		.loc 1 929 2 view .LVU643
 2175              	.LBB158:
 2176              	.LBI158:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2177              		.loc 2 191 30 view .LVU644
 2178              	.LBB159:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2179              		.loc 2 193 1 view .LVU645
 2180              		.loc 2 195 2 view .LVU646
 2181              		.syntax unified
 2182              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2183 002c 4FF05003 			mov r3, #80												
 2184 0030 83F31188 		msr basepri, r3											
 2185 0034 BFF36F8F 		isb														
 2186 0038 BFF34F8F 		dsb														
 2187              	
 2188              	@ 0 "" 2
 2189              	.LVL181:
 2190              		.thumb
 2191              		.syntax unified
ARM GAS  /tmp/ccw4aonF.s 			page 93


 2192              	.L152:
 2193              		.loc 2 195 2 is_stmt 0 view .LVU647
 2194              	.LBE159:
 2195              	.LBE158:
 929:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2196              		.loc 1 929 2 is_stmt 1 discriminator 1 view .LVU648
 929:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2197              		.loc 1 929 2 discriminator 1 view .LVU649
 2198 003c FEE7     		b	.L152
 2199              	.LVL182:
 2200              	.L166:
 930:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2201              		.loc 1 930 2 is_stmt 0 discriminator 2 view .LVU650
 2202 003e 036C     		ldr	r3, [r0, #64]
 2203              	.LVL183:
 930:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2204              		.loc 1 930 2 discriminator 2 view .LVU651
 2205 0040 002B     		cmp	r3, #0
 2206 0042 E5D0     		beq	.L153
 930:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2207              		.loc 1 930 2 is_stmt 1 view .LVU652
 2208              	.LBB160:
 2209              	.LBI160:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2210              		.loc 2 191 30 view .LVU653
 2211              	.LBB161:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2212              		.loc 2 193 1 view .LVU654
 2213              		.loc 2 195 2 view .LVU655
 2214              		.syntax unified
 2215              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2216 0044 4FF05003 			mov r3, #80												
 2217 0048 83F31188 		msr basepri, r3											
 2218 004c BFF36F8F 		isb														
 2219 0050 BFF34F8F 		dsb														
 2220              	
 2221              	@ 0 "" 2
 2222              	.LVL184:
 2223              		.thumb
 2224              		.syntax unified
 2225              	.L154:
 2226              		.loc 2 195 2 is_stmt 0 view .LVU656
 2227              	.LBE161:
 2228              	.LBE160:
 930:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2229              		.loc 1 930 2 is_stmt 1 discriminator 2 view .LVU657
 930:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2230              		.loc 1 930 2 discriminator 2 view .LVU658
 2231 0054 FEE7     		b	.L154
 2232              	.L155:
 931:base/os/FreeRTOS/Source/queue.c **** 
 2233              		.loc 1 931 88 discriminator 8 view .LVU659
 947:base/os/FreeRTOS/Source/queue.c **** 
 2234              		.loc 1 947 2 discriminator 8 view .LVU660
 2235 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2236              	.LVL185:
 954:base/os/FreeRTOS/Source/queue.c **** 	{
ARM GAS  /tmp/ccw4aonF.s 			page 94


 2237              		.loc 1 954 2 discriminator 8 view .LVU661
 2238              	.LBB162:
 2239              	.LBI162:
 196:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 204:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 2240              		.loc 2 207 34 discriminator 8 view .LVU662
 2241              	.LBB163:
 208:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 209:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 2242              		.loc 2 209 1 discriminator 8 view .LVU663
 210:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 2243              		.loc 2 211 2 discriminator 8 view .LVU664
 2244              		.syntax unified
 2245              	@ 211 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2246 005a EFF31188 			mrs r8, basepri											
 2247 005e 4FF05003 		mov r3, #80												
 2248 0062 83F31188 		msr basepri, r3											
 2249 0066 BFF36F8F 		isb														
 2250 006a BFF34F8F 		dsb														
 2251              	
 2252              	@ 0 "" 2
 2253              	.LVL186:
 212:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 221:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 2254              		.loc 2 223 2 discriminator 8 view .LVU665
 2255              		.loc 2 223 2 is_stmt 0 discriminator 8 view .LVU666
 2256              		.thumb
 2257              		.syntax unified
 2258              	.LBE163:
 2259              	.LBE162:
 956:base/os/FreeRTOS/Source/queue.c **** 		{
 2260              		.loc 1 956 3 is_stmt 1 discriminator 8 view .LVU667
 956:base/os/FreeRTOS/Source/queue.c **** 		{
 2261              		.loc 1 956 16 is_stmt 0 discriminator 8 view .LVU668
 2262 006e AA6B     		ldr	r2, [r5, #56]
 956:base/os/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccw4aonF.s 			page 95


 2263              		.loc 1 956 45 discriminator 8 view .LVU669
 2264 0070 EB6B     		ldr	r3, [r5, #60]
 956:base/os/FreeRTOS/Source/queue.c **** 		{
 2265              		.loc 1 956 5 discriminator 8 view .LVU670
 2266 0072 9A42     		cmp	r2, r3
 2267 0074 06D3     		bcc	.L157
 956:base/os/FreeRTOS/Source/queue.c **** 		{
 2268              		.loc 1 956 58 discriminator 1 view .LVU671
 2269 0076 022C     		cmp	r4, #2
 2270 0078 04D0     		beq	.L157
1065:base/os/FreeRTOS/Source/queue.c **** 		}
 2271              		.loc 1 1065 12 view .LVU672
 2272 007a 0020     		movs	r0, #0
 2273              	.L158:
 2274              	.LVL187:
1068:base/os/FreeRTOS/Source/queue.c **** 
 2275              		.loc 1 1068 2 is_stmt 1 view .LVU673
 2276              	.LBB164:
 2277              	.LBI164:
 224:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 225:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 227:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 2278              		.loc 2 227 30 view .LVU674
 2279              	.LBB165:
 228:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 229:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 2280              		.loc 2 229 2 view .LVU675
 2281              		.syntax unified
 2282              	@ 229 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2283 007c 88F31188 			msr basepri, r8	
 2284              	@ 0 "" 2
 2285              		.thumb
 2286              		.syntax unified
 2287              	.LBE165:
 2288              	.LBE164:
1070:base/os/FreeRTOS/Source/queue.c **** }
 2289              		.loc 1 1070 2 view .LVU676
1071:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2290              		.loc 1 1071 1 is_stmt 0 view .LVU677
 2291 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2292              	.LVL188:
 2293              	.L157:
 2294              	.LBB166:
 958:base/os/FreeRTOS/Source/queue.c **** 
 2295              		.loc 1 958 4 is_stmt 1 view .LVU678
 958:base/os/FreeRTOS/Source/queue.c **** 
 2296              		.loc 1 958 17 is_stmt 0 view .LVU679
 2297 0084 95F84590 		ldrb	r9, [r5, #69]	@ zero_extendqisi2
 2298 0088 4FFA89F9 		sxtb	r9, r9
 2299              	.LVL189:
 960:base/os/FreeRTOS/Source/queue.c **** 
 2300              		.loc 1 960 39 is_stmt 1 view .LVU680
 967:base/os/FreeRTOS/Source/queue.c **** 
 2301              		.loc 1 967 4 view .LVU681
 967:base/os/FreeRTOS/Source/queue.c **** 
 2302              		.loc 1 967 13 is_stmt 0 view .LVU682
ARM GAS  /tmp/ccw4aonF.s 			page 96


 2303 008c 2246     		mov	r2, r4
 2304 008e 3946     		mov	r1, r7
 2305 0090 2846     		mov	r0, r5
 2306 0092 FFF7FEFF 		bl	prvCopyDataToQueue
 2307              	.LVL190:
 971:base/os/FreeRTOS/Source/queue.c **** 			{
 2308              		.loc 1 971 4 is_stmt 1 view .LVU683
 971:base/os/FreeRTOS/Source/queue.c **** 			{
 2309              		.loc 1 971 6 is_stmt 0 view .LVU684
 2310 0096 B9F1FF3F 		cmp	r9, #-1
 2311 009a 06D0     		beq	.L167
1057:base/os/FreeRTOS/Source/queue.c **** 			}
 2312              		.loc 1 1057 5 is_stmt 1 view .LVU685
1057:base/os/FreeRTOS/Source/queue.c **** 			}
 2313              		.loc 1 1057 45 is_stmt 0 view .LVU686
 2314 009c 09F10103 		add	r3, r9, #1
1057:base/os/FreeRTOS/Source/queue.c **** 			}
 2315              		.loc 1 1057 24 view .LVU687
 2316 00a0 5BB2     		sxtb	r3, r3
1057:base/os/FreeRTOS/Source/queue.c **** 			}
 2317              		.loc 1 1057 22 view .LVU688
 2318 00a2 85F84530 		strb	r3, [r5, #69]
1060:base/os/FreeRTOS/Source/queue.c **** 		}
 2319              		.loc 1 1060 12 view .LVU689
 2320 00a6 0120     		movs	r0, #1
 2321 00a8 E8E7     		b	.L158
 2322              	.L167:
1026:base/os/FreeRTOS/Source/queue.c **** 					{
 2323              		.loc 1 1026 6 is_stmt 1 view .LVU690
1026:base/os/FreeRTOS/Source/queue.c **** 					{
 2324              		.loc 1 1026 10 is_stmt 0 view .LVU691
 2325 00aa 6B6A     		ldr	r3, [r5, #36]
1026:base/os/FreeRTOS/Source/queue.c **** 					{
 2326              		.loc 1 1026 8 view .LVU692
 2327 00ac 0BB9     		cbnz	r3, .L168
1060:base/os/FreeRTOS/Source/queue.c **** 		}
 2328              		.loc 1 1060 12 view .LVU693
 2329 00ae 0120     		movs	r0, #1
 2330 00b0 E4E7     		b	.L158
 2331              	.L168:
1028:base/os/FreeRTOS/Source/queue.c **** 						{
 2332              		.loc 1 1028 7 is_stmt 1 view .LVU694
1028:base/os/FreeRTOS/Source/queue.c **** 						{
 2333              		.loc 1 1028 11 is_stmt 0 view .LVU695
 2334 00b2 05F12400 		add	r0, r5, #36
 2335 00b6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2336              	.LVL191:
1028:base/os/FreeRTOS/Source/queue.c **** 						{
 2337              		.loc 1 1028 9 view .LVU696
 2338 00ba 18B1     		cbz	r0, .L162
1032:base/os/FreeRTOS/Source/queue.c **** 							{
 2339              		.loc 1 1032 8 is_stmt 1 view .LVU697
1032:base/os/FreeRTOS/Source/queue.c **** 							{
 2340              		.loc 1 1032 10 is_stmt 0 view .LVU698
 2341 00bc 26B1     		cbz	r6, .L163
1034:base/os/FreeRTOS/Source/queue.c **** 							}
 2342              		.loc 1 1034 9 is_stmt 1 view .LVU699
ARM GAS  /tmp/ccw4aonF.s 			page 97


1034:base/os/FreeRTOS/Source/queue.c **** 							}
 2343              		.loc 1 1034 36 is_stmt 0 view .LVU700
 2344 00be 0120     		movs	r0, #1
 2345 00c0 3060     		str	r0, [r6]
 2346 00c2 DBE7     		b	.L158
 2347              	.L162:
1060:base/os/FreeRTOS/Source/queue.c **** 		}
 2348              		.loc 1 1060 12 view .LVU701
 2349 00c4 0120     		movs	r0, #1
 2350 00c6 D9E7     		b	.L158
 2351              	.L163:
 2352 00c8 0120     		movs	r0, #1
 2353 00ca D7E7     		b	.L158
 2354              	.LBE166:
 2355              		.cfi_endproc
 2356              	.LFE18:
 2358              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 2359              		.align	1
 2360              		.global	xQueueGiveFromISR
 2361              		.syntax unified
 2362              		.thumb
 2363              		.thumb_func
 2364              		.fpu softvfp
 2366              	xQueueGiveFromISR:
 2367              	.LVL192:
 2368              	.LFB19:
1075:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2369              		.loc 1 1075 1 is_stmt 1 view -0
 2370              		.cfi_startproc
 2371              		@ args = 0, pretend = 0, frame = 0
 2372              		@ frame_needed = 0, uses_anonymous_args = 0
1076:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 2373              		.loc 1 1076 1 view .LVU703
1077:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2374              		.loc 1 1077 1 view .LVU704
1078:base/os/FreeRTOS/Source/queue.c **** 
 2375              		.loc 1 1078 1 view .LVU705
1086:base/os/FreeRTOS/Source/queue.c **** 
 2376              		.loc 1 1086 2 view .LVU706
 2377 0000 68B1     		cbz	r0, .L184
1075:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2378              		.loc 1 1075 1 is_stmt 0 discriminator 2 view .LVU707
 2379 0002 70B5     		push	{r4, r5, r6, lr}
 2380              	.LCFI31:
 2381              		.cfi_def_cfa_offset 16
 2382              		.cfi_offset 4, -16
 2383              		.cfi_offset 5, -12
 2384              		.cfi_offset 6, -8
 2385              		.cfi_offset 14, -4
 2386 0004 0C46     		mov	r4, r1
 2387 0006 0546     		mov	r5, r0
1086:base/os/FreeRTOS/Source/queue.c **** 
 2388              		.loc 1 1086 25 is_stmt 1 discriminator 2 view .LVU708
1090:base/os/FreeRTOS/Source/queue.c **** 
 2389              		.loc 1 1090 2 discriminator 2 view .LVU709
 2390 0008 036C     		ldr	r3, [r0, #64]
 2391 000a 8BB1     		cbz	r3, .L172
ARM GAS  /tmp/ccw4aonF.s 			page 98


1090:base/os/FreeRTOS/Source/queue.c **** 
 2392              		.loc 1 1090 2 view .LVU710
 2393              	.LBB167:
 2394              	.LBI167:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2395              		.loc 2 191 30 view .LVU711
 2396              	.LBB168:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2397              		.loc 2 193 1 view .LVU712
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2398              		.loc 2 195 2 view .LVU713
 2399              		.syntax unified
 2400              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2401 000c 4FF05003 			mov r3, #80												
 2402 0010 83F31188 		msr basepri, r3											
 2403 0014 BFF36F8F 		isb														
 2404 0018 BFF34F8F 		dsb														
 2405              	
 2406              	@ 0 "" 2
 2407              	.LVL193:
 2408              		.thumb
 2409              		.syntax unified
 2410              	.L173:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2411              		.loc 2 195 2 is_stmt 0 view .LVU714
 2412              	.LBE168:
 2413              	.LBE167:
1090:base/os/FreeRTOS/Source/queue.c **** 
 2414              		.loc 1 1090 2 is_stmt 1 discriminator 2 view .LVU715
1090:base/os/FreeRTOS/Source/queue.c **** 
 2415              		.loc 1 1090 2 discriminator 2 view .LVU716
 2416 001c FEE7     		b	.L173
 2417              	.L184:
 2418              	.LCFI32:
 2419              		.cfi_def_cfa_offset 0
 2420              		.cfi_restore 4
 2421              		.cfi_restore 5
 2422              		.cfi_restore 6
 2423              		.cfi_restore 14
1086:base/os/FreeRTOS/Source/queue.c **** 
 2424              		.loc 1 1086 2 view .LVU717
 2425              	.LBB169:
 2426              	.LBI169:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2427              		.loc 2 191 30 view .LVU718
 2428              	.LBB170:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2429              		.loc 2 193 1 view .LVU719
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2430              		.loc 2 195 2 view .LVU720
 2431              		.syntax unified
 2432              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2433 001e 4FF05003 			mov r3, #80												
 2434 0022 83F31188 		msr basepri, r3											
 2435 0026 BFF36F8F 		isb														
 2436 002a BFF34F8F 		dsb														
 2437              	
ARM GAS  /tmp/ccw4aonF.s 			page 99


 2438              	@ 0 "" 2
 2439              	.LVL194:
 2440              		.thumb
 2441              		.syntax unified
 2442              	.L171:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2443              		.loc 2 195 2 is_stmt 0 view .LVU721
 2444              	.LBE170:
 2445              	.LBE169:
1086:base/os/FreeRTOS/Source/queue.c **** 
 2446              		.loc 1 1086 2 is_stmt 1 discriminator 1 view .LVU722
1086:base/os/FreeRTOS/Source/queue.c **** 
 2447              		.loc 1 1086 2 discriminator 1 view .LVU723
 2448 002e FEE7     		b	.L171
 2449              	.L172:
 2450              	.LCFI33:
 2451              		.cfi_def_cfa_offset 16
 2452              		.cfi_offset 4, -16
 2453              		.cfi_offset 5, -12
 2454              		.cfi_offset 6, -8
 2455              		.cfi_offset 14, -4
1090:base/os/FreeRTOS/Source/queue.c **** 
 2456              		.loc 1 1090 42 discriminator 2 view .LVU724
1095:base/os/FreeRTOS/Source/queue.c **** 
 2457              		.loc 1 1095 2 discriminator 2 view .LVU725
 2458 0030 0368     		ldr	r3, [r0]
 2459 0032 EBB1     		cbz	r3, .L185
 2460              	.L174:
1095:base/os/FreeRTOS/Source/queue.c **** 
 2461              		.loc 1 1095 108 discriminator 8 view .LVU726
1111:base/os/FreeRTOS/Source/queue.c **** 
 2462              		.loc 1 1111 2 discriminator 8 view .LVU727
 2463 0034 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2464              	.LVL195:
1113:base/os/FreeRTOS/Source/queue.c **** 	{
 2465              		.loc 1 1113 2 discriminator 8 view .LVU728
 2466              	.LBB171:
 2467              	.LBI171:
 207:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2468              		.loc 2 207 34 discriminator 8 view .LVU729
 2469              	.LBB172:
 209:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2470              		.loc 2 209 1 discriminator 8 view .LVU730
 211:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2471              		.loc 2 211 2 discriminator 8 view .LVU731
 2472              		.syntax unified
 2473              	@ 211 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2474 0038 EFF31186 			mrs r6, basepri											
 2475 003c 4FF05003 		mov r3, #80												
 2476 0040 83F31188 		msr basepri, r3											
 2477 0044 BFF36F8F 		isb														
 2478 0048 BFF34F8F 		dsb														
 2479              	
 2480              	@ 0 "" 2
 2481              	.LVL196:
 223:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 2482              		.loc 2 223 2 discriminator 8 view .LVU732
ARM GAS  /tmp/ccw4aonF.s 			page 100


 223:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 2483              		.loc 2 223 2 is_stmt 0 discriminator 8 view .LVU733
 2484              		.thumb
 2485              		.syntax unified
 2486              	.LBE172:
 2487              	.LBE171:
 2488              	.LBB173:
1115:base/os/FreeRTOS/Source/queue.c **** 
 2489              		.loc 1 1115 3 is_stmt 1 discriminator 8 view .LVU734
1115:base/os/FreeRTOS/Source/queue.c **** 
 2490              		.loc 1 1115 21 is_stmt 0 discriminator 8 view .LVU735
 2491 004c AA6B     		ldr	r2, [r5, #56]
 2492              	.LVL197:
1120:base/os/FreeRTOS/Source/queue.c **** 		{
 2493              		.loc 1 1120 3 is_stmt 1 discriminator 8 view .LVU736
1120:base/os/FreeRTOS/Source/queue.c **** 		{
 2494              		.loc 1 1120 34 is_stmt 0 discriminator 8 view .LVU737
 2495 004e EB6B     		ldr	r3, [r5, #60]
1120:base/os/FreeRTOS/Source/queue.c **** 		{
 2496              		.loc 1 1120 5 discriminator 8 view .LVU738
 2497 0050 9342     		cmp	r3, r2
 2498 0052 26D9     		bls	.L178
 2499              	.LBB174:
1122:base/os/FreeRTOS/Source/queue.c **** 
 2500              		.loc 1 1122 4 is_stmt 1 view .LVU739
1122:base/os/FreeRTOS/Source/queue.c **** 
 2501              		.loc 1 1122 17 is_stmt 0 view .LVU740
 2502 0054 95F84530 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 2503 0058 5BB2     		sxtb	r3, r3
 2504              	.LVL198:
1124:base/os/FreeRTOS/Source/queue.c **** 
 2505              		.loc 1 1124 39 is_stmt 1 view .LVU741
1132:base/os/FreeRTOS/Source/queue.c **** 
 2506              		.loc 1 1132 4 view .LVU742
1132:base/os/FreeRTOS/Source/queue.c **** 
 2507              		.loc 1 1132 51 is_stmt 0 view .LVU743
 2508 005a 0132     		adds	r2, r2, #1
 2509              	.LVL199:
1132:base/os/FreeRTOS/Source/queue.c **** 
 2510              		.loc 1 1132 31 view .LVU744
 2511 005c AA63     		str	r2, [r5, #56]
1136:base/os/FreeRTOS/Source/queue.c **** 			{
 2512              		.loc 1 1136 4 is_stmt 1 view .LVU745
1136:base/os/FreeRTOS/Source/queue.c **** 			{
 2513              		.loc 1 1136 6 is_stmt 0 view .LVU746
 2514 005e B3F1FF3F 		cmp	r3, #-1
 2515 0062 11D0     		beq	.L186
1222:base/os/FreeRTOS/Source/queue.c **** 			}
 2516              		.loc 1 1222 5 is_stmt 1 view .LVU747
1222:base/os/FreeRTOS/Source/queue.c **** 			}
 2517              		.loc 1 1222 45 is_stmt 0 view .LVU748
 2518 0064 0133     		adds	r3, r3, #1
 2519              	.LVL200:
1222:base/os/FreeRTOS/Source/queue.c **** 			}
 2520              		.loc 1 1222 24 view .LVU749
 2521 0066 5BB2     		sxtb	r3, r3
 2522              	.LVL201:
ARM GAS  /tmp/ccw4aonF.s 			page 101


1222:base/os/FreeRTOS/Source/queue.c **** 			}
 2523              		.loc 1 1222 22 view .LVU750
 2524 0068 85F84530 		strb	r3, [r5, #69]
1225:base/os/FreeRTOS/Source/queue.c **** 		}
 2525              		.loc 1 1225 12 view .LVU751
 2526 006c 0120     		movs	r0, #1
 2527 006e 19E0     		b	.L176
 2528              	.LVL202:
 2529              	.L185:
1225:base/os/FreeRTOS/Source/queue.c **** 		}
 2530              		.loc 1 1225 12 view .LVU752
 2531              	.LBE174:
 2532              	.LBE173:
1095:base/os/FreeRTOS/Source/queue.c **** 
 2533              		.loc 1 1095 2 discriminator 2 view .LVU753
 2534 0070 4368     		ldr	r3, [r0, #4]
 2535 0072 002B     		cmp	r3, #0
 2536 0074 DED0     		beq	.L174
1095:base/os/FreeRTOS/Source/queue.c **** 
 2537              		.loc 1 1095 2 is_stmt 1 view .LVU754
 2538              	.LBB177:
 2539              	.LBI177:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2540              		.loc 2 191 30 view .LVU755
 2541              	.LBB178:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2542              		.loc 2 193 1 view .LVU756
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2543              		.loc 2 195 2 view .LVU757
 2544              		.syntax unified
 2545              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2546 0076 4FF05003 			mov r3, #80												
 2547 007a 83F31188 		msr basepri, r3											
 2548 007e BFF36F8F 		isb														
 2549 0082 BFF34F8F 		dsb														
 2550              	
 2551              	@ 0 "" 2
 2552              	.LVL203:
 2553              		.thumb
 2554              		.syntax unified
 2555              	.L175:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2556              		.loc 2 195 2 is_stmt 0 view .LVU758
 2557              	.LBE178:
 2558              	.LBE177:
1095:base/os/FreeRTOS/Source/queue.c **** 
 2559              		.loc 1 1095 2 is_stmt 1 discriminator 3 view .LVU759
1095:base/os/FreeRTOS/Source/queue.c **** 
 2560              		.loc 1 1095 2 discriminator 3 view .LVU760
 2561 0086 FEE7     		b	.L175
 2562              	.LVL204:
 2563              	.L186:
 2564              	.LBB179:
 2565              	.LBB175:
1191:base/os/FreeRTOS/Source/queue.c **** 					{
 2566              		.loc 1 1191 6 view .LVU761
1191:base/os/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/ccw4aonF.s 			page 102


 2567              		.loc 1 1191 10 is_stmt 0 view .LVU762
 2568 0088 6B6A     		ldr	r3, [r5, #36]
 2569              	.LVL205:
1191:base/os/FreeRTOS/Source/queue.c **** 					{
 2570              		.loc 1 1191 8 view .LVU763
 2571 008a 0BB9     		cbnz	r3, .L187
1225:base/os/FreeRTOS/Source/queue.c **** 		}
 2572              		.loc 1 1225 12 view .LVU764
 2573 008c 0120     		movs	r0, #1
 2574 008e 09E0     		b	.L176
 2575              	.L187:
1193:base/os/FreeRTOS/Source/queue.c **** 						{
 2576              		.loc 1 1193 7 is_stmt 1 view .LVU765
1193:base/os/FreeRTOS/Source/queue.c **** 						{
 2577              		.loc 1 1193 11 is_stmt 0 view .LVU766
 2578 0090 05F12400 		add	r0, r5, #36
 2579 0094 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2580              	.LVL206:
1193:base/os/FreeRTOS/Source/queue.c **** 						{
 2581              		.loc 1 1193 9 view .LVU767
 2582 0098 38B1     		cbz	r0, .L180
1197:base/os/FreeRTOS/Source/queue.c **** 							{
 2583              		.loc 1 1197 8 is_stmt 1 view .LVU768
1197:base/os/FreeRTOS/Source/queue.c **** 							{
 2584              		.loc 1 1197 10 is_stmt 0 view .LVU769
 2585 009a 44B1     		cbz	r4, .L181
1199:base/os/FreeRTOS/Source/queue.c **** 							}
 2586              		.loc 1 1199 9 is_stmt 1 view .LVU770
1199:base/os/FreeRTOS/Source/queue.c **** 							}
 2587              		.loc 1 1199 36 is_stmt 0 view .LVU771
 2588 009c 0120     		movs	r0, #1
 2589 009e 2060     		str	r0, [r4]
 2590 00a0 00E0     		b	.L176
 2591              	.LVL207:
 2592              	.L178:
1199:base/os/FreeRTOS/Source/queue.c **** 							}
 2593              		.loc 1 1199 36 view .LVU772
 2594              	.LBE175:
1230:base/os/FreeRTOS/Source/queue.c **** 		}
 2595              		.loc 1 1230 12 view .LVU773
 2596 00a2 0020     		movs	r0, #0
 2597              	.LVL208:
 2598              	.L176:
1230:base/os/FreeRTOS/Source/queue.c **** 		}
 2599              		.loc 1 1230 12 view .LVU774
 2600              	.LBE179:
1233:base/os/FreeRTOS/Source/queue.c **** 
 2601              		.loc 1 1233 2 is_stmt 1 view .LVU775
 2602              	.LBB180:
 2603              	.LBI180:
 227:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2604              		.loc 2 227 30 view .LVU776
 2605              	.LBB181:
 2606              		.loc 2 229 2 view .LVU777
 2607              		.syntax unified
 2608              	@ 229 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2609 00a4 86F31188 			msr basepri, r6	
ARM GAS  /tmp/ccw4aonF.s 			page 103


 2610              	@ 0 "" 2
 2611              		.thumb
 2612              		.syntax unified
 2613              	.LBE181:
 2614              	.LBE180:
1235:base/os/FreeRTOS/Source/queue.c **** }
 2615              		.loc 1 1235 2 view .LVU778
1236:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2616              		.loc 1 1236 1 is_stmt 0 view .LVU779
 2617 00a8 70BD     		pop	{r4, r5, r6, pc}
 2618              	.LVL209:
 2619              	.L180:
 2620              	.LBB182:
 2621              	.LBB176:
1225:base/os/FreeRTOS/Source/queue.c **** 		}
 2622              		.loc 1 1225 12 view .LVU780
 2623 00aa 0120     		movs	r0, #1
 2624 00ac FAE7     		b	.L176
 2625              	.L181:
 2626 00ae 0120     		movs	r0, #1
 2627 00b0 F8E7     		b	.L176
 2628              	.LBE176:
 2629              	.LBE182:
 2630              		.cfi_endproc
 2631              	.LFE19:
 2633              		.section	.text.xQueueReceive,"ax",%progbits
 2634              		.align	1
 2635              		.global	xQueueReceive
 2636              		.syntax unified
 2637              		.thumb
 2638              		.thumb_func
 2639              		.fpu softvfp
 2641              	xQueueReceive:
 2642              	.LVL210:
 2643              	.LFB20:
1240:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2644              		.loc 1 1240 1 is_stmt 1 view -0
 2645              		.cfi_startproc
 2646              		@ args = 0, pretend = 0, frame = 16
 2647              		@ frame_needed = 0, uses_anonymous_args = 0
1240:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2648              		.loc 1 1240 1 is_stmt 0 view .LVU782
 2649 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2650              	.LCFI34:
 2651              		.cfi_def_cfa_offset 20
 2652              		.cfi_offset 4, -20
 2653              		.cfi_offset 5, -16
 2654              		.cfi_offset 6, -12
 2655              		.cfi_offset 7, -8
 2656              		.cfi_offset 14, -4
 2657 0002 85B0     		sub	sp, sp, #20
 2658              	.LCFI35:
 2659              		.cfi_def_cfa_offset 40
 2660 0004 0192     		str	r2, [sp, #4]
1241:base/os/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 2661              		.loc 1 1241 1 is_stmt 1 view .LVU783
 2662              	.LVL211:
ARM GAS  /tmp/ccw4aonF.s 			page 104


1242:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2663              		.loc 1 1242 1 view .LVU784
1243:base/os/FreeRTOS/Source/queue.c **** 
 2664              		.loc 1 1243 1 view .LVU785
1246:base/os/FreeRTOS/Source/queue.c **** 
 2665              		.loc 1 1246 2 view .LVU786
 2666 0006 90B1     		cbz	r0, .L208
 2667 0008 0F46     		mov	r7, r1
 2668 000a 0446     		mov	r4, r0
1246:base/os/FreeRTOS/Source/queue.c **** 
 2669              		.loc 1 1246 29 discriminator 2 view .LVU787
1250:base/os/FreeRTOS/Source/queue.c **** 
 2670              		.loc 1 1250 2 discriminator 2 view .LVU788
 2671 000c C1B1     		cbz	r1, .L209
 2672              	.L191:
1250:base/os/FreeRTOS/Source/queue.c **** 
 2673              		.loc 1 1250 100 discriminator 8 view .LVU789
1255:base/os/FreeRTOS/Source/queue.c **** 	}
 2674              		.loc 1 1255 3 discriminator 8 view .LVU790
 2675 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 2676              	.LVL212:
1255:base/os/FreeRTOS/Source/queue.c **** 	}
 2677              		.loc 1 1255 3 is_stmt 0 discriminator 8 view .LVU791
 2678 0012 0646     		mov	r6, r0
 2679 0014 00BB     		cbnz	r0, .L206
1255:base/os/FreeRTOS/Source/queue.c **** 	}
 2680              		.loc 1 1255 3 discriminator 2 view .LVU792
 2681 0016 019B     		ldr	r3, [sp, #4]
 2682 0018 002B     		cmp	r3, #0
 2683 001a 5ED0     		beq	.L195
1255:base/os/FreeRTOS/Source/queue.c **** 	}
 2684              		.loc 1 1255 3 is_stmt 1 view .LVU793
 2685              	.LBB183:
 2686              	.LBI183:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2687              		.loc 2 191 30 view .LVU794
 2688              	.LBB184:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2689              		.loc 2 193 1 view .LVU795
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2690              		.loc 2 195 2 view .LVU796
 2691              		.syntax unified
 2692              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2693 001c 4FF05003 			mov r3, #80												
 2694 0020 83F31188 		msr basepri, r3											
 2695 0024 BFF36F8F 		isb														
 2696 0028 BFF34F8F 		dsb														
 2697              	
 2698              	@ 0 "" 2
 2699              	.LVL213:
 2700              		.thumb
 2701              		.syntax unified
 2702              	.L194:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2703              		.loc 2 195 2 is_stmt 0 view .LVU797
 2704              	.LBE184:
 2705              	.LBE183:
ARM GAS  /tmp/ccw4aonF.s 			page 105


1255:base/os/FreeRTOS/Source/queue.c **** 	}
 2706              		.loc 1 1255 3 is_stmt 1 discriminator 3 view .LVU798
1255:base/os/FreeRTOS/Source/queue.c **** 	}
 2707              		.loc 1 1255 3 discriminator 3 view .LVU799
 2708 002c FEE7     		b	.L194
 2709              	.LVL214:
 2710              	.L208:
1246:base/os/FreeRTOS/Source/queue.c **** 
 2711              		.loc 1 1246 2 view .LVU800
 2712              	.LBB185:
 2713              	.LBI185:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2714              		.loc 2 191 30 view .LVU801
 2715              	.LBB186:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2716              		.loc 2 193 1 view .LVU802
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2717              		.loc 2 195 2 view .LVU803
 2718              		.syntax unified
 2719              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2720 002e 4FF05003 			mov r3, #80												
 2721 0032 83F31188 		msr basepri, r3											
 2722 0036 BFF36F8F 		isb														
 2723 003a BFF34F8F 		dsb														
 2724              	
 2725              	@ 0 "" 2
 2726              	.LVL215:
 2727              		.thumb
 2728              		.syntax unified
 2729              	.L190:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2730              		.loc 2 195 2 is_stmt 0 view .LVU804
 2731              	.LBE186:
 2732              	.LBE185:
1246:base/os/FreeRTOS/Source/queue.c **** 
 2733              		.loc 1 1246 2 is_stmt 1 discriminator 1 view .LVU805
1246:base/os/FreeRTOS/Source/queue.c **** 
 2734              		.loc 1 1246 2 discriminator 1 view .LVU806
 2735 003e FEE7     		b	.L190
 2736              	.L209:
1250:base/os/FreeRTOS/Source/queue.c **** 
 2737              		.loc 1 1250 2 is_stmt 0 discriminator 2 view .LVU807
 2738 0040 036C     		ldr	r3, [r0, #64]
 2739 0042 002B     		cmp	r3, #0
 2740 0044 E3D0     		beq	.L191
1250:base/os/FreeRTOS/Source/queue.c **** 
 2741              		.loc 1 1250 2 is_stmt 1 view .LVU808
 2742              	.LBB187:
 2743              	.LBI187:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2744              		.loc 2 191 30 view .LVU809
 2745              	.LBB188:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2746              		.loc 2 193 1 view .LVU810
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2747              		.loc 2 195 2 view .LVU811
 2748              		.syntax unified
ARM GAS  /tmp/ccw4aonF.s 			page 106


 2749              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2750 0046 4FF05003 			mov r3, #80												
 2751 004a 83F31188 		msr basepri, r3											
 2752 004e BFF36F8F 		isb														
 2753 0052 BFF34F8F 		dsb														
 2754              	
 2755              	@ 0 "" 2
 2756              	.LVL216:
 2757              		.thumb
 2758              		.syntax unified
 2759              	.L192:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2760              		.loc 2 195 2 is_stmt 0 view .LVU812
 2761              	.LBE188:
 2762              	.LBE187:
1250:base/os/FreeRTOS/Source/queue.c **** 
 2763              		.loc 1 1250 2 is_stmt 1 discriminator 2 view .LVU813
1250:base/os/FreeRTOS/Source/queue.c **** 
 2764              		.loc 1 1250 2 discriminator 2 view .LVU814
 2765 0056 FEE7     		b	.L192
 2766              	.LVL217:
 2767              	.L206:
1250:base/os/FreeRTOS/Source/queue.c **** 
 2768              		.loc 1 1250 2 is_stmt 0 discriminator 2 view .LVU815
 2769 0058 0026     		movs	r6, #0
 2770 005a 3EE0     		b	.L195
 2771              	.LVL218:
 2772              	.L212:
 2773              	.LBB189:
1274:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2774              		.loc 1 1274 5 is_stmt 1 view .LVU816
 2775 005c 3946     		mov	r1, r7
 2776 005e 2046     		mov	r0, r4
 2777 0060 FFF7FEFF 		bl	prvCopyDataFromQueue
 2778              	.LVL219:
1275:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2779              		.loc 1 1275 34 view .LVU817
1276:base/os/FreeRTOS/Source/queue.c **** 
 2780              		.loc 1 1276 5 view .LVU818
1276:base/os/FreeRTOS/Source/queue.c **** 
 2781              		.loc 1 1276 52 is_stmt 0 view .LVU819
 2782 0064 013D     		subs	r5, r5, #1
 2783              	.LVL220:
1276:base/os/FreeRTOS/Source/queue.c **** 
 2784              		.loc 1 1276 32 view .LVU820
 2785 0066 A563     		str	r5, [r4, #56]
1281:base/os/FreeRTOS/Source/queue.c **** 				{
 2786              		.loc 1 1281 5 is_stmt 1 view .LVU821
1281:base/os/FreeRTOS/Source/queue.c **** 				{
 2787              		.loc 1 1281 9 is_stmt 0 view .LVU822
 2788 0068 2369     		ldr	r3, [r4, #16]
1281:base/os/FreeRTOS/Source/queue.c **** 				{
 2789              		.loc 1 1281 7 view .LVU823
 2790 006a 23B9     		cbnz	r3, .L210
 2791              	.L197:
1294:base/os/FreeRTOS/Source/queue.c **** 				}
 2792              		.loc 1 1294 30 is_stmt 1 view .LVU824
ARM GAS  /tmp/ccw4aonF.s 			page 107


1297:base/os/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2793              		.loc 1 1297 5 view .LVU825
 2794 006c FFF7FEFF 		bl	vPortExitCritical
 2795              	.LVL221:
1298:base/os/FreeRTOS/Source/queue.c **** 			}
 2796              		.loc 1 1298 5 view .LVU826
1298:base/os/FreeRTOS/Source/queue.c **** 			}
 2797              		.loc 1 1298 12 is_stmt 0 view .LVU827
 2798 0070 0120     		movs	r0, #1
 2799              	.LVL222:
 2800              	.L188:
1298:base/os/FreeRTOS/Source/queue.c **** 			}
 2801              		.loc 1 1298 12 view .LVU828
 2802              	.LBE189:
1377:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2803              		.loc 1 1377 1 view .LVU829
 2804 0072 05B0     		add	sp, sp, #20
 2805              	.LCFI36:
 2806              		.cfi_remember_state
 2807              		.cfi_def_cfa_offset 20
 2808              		@ sp needed
 2809 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 2810              	.LVL223:
 2811              	.L210:
 2812              	.LCFI37:
 2813              		.cfi_restore_state
 2814              	.LBB190:
1283:base/os/FreeRTOS/Source/queue.c **** 					{
 2815              		.loc 1 1283 6 is_stmt 1 view .LVU830
1283:base/os/FreeRTOS/Source/queue.c **** 					{
 2816              		.loc 1 1283 10 is_stmt 0 view .LVU831
 2817 0076 04F11000 		add	r0, r4, #16
 2818 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2819              	.LVL224:
1283:base/os/FreeRTOS/Source/queue.c **** 					{
 2820              		.loc 1 1283 8 view .LVU832
 2821 007e 0028     		cmp	r0, #0
 2822 0080 F4D0     		beq	.L197
1285:base/os/FreeRTOS/Source/queue.c **** 					}
 2823              		.loc 1 1285 7 is_stmt 1 view .LVU833
 2824 0082 4FF0E023 		mov	r3, #-536813568
 2825 0086 4FF08052 		mov	r2, #268435456
 2826 008a C3F8042D 		str	r2, [r3, #3332]
1285:base/os/FreeRTOS/Source/queue.c **** 					}
 2827              		.loc 1 1285 7 view .LVU834
 2828              		.syntax unified
 2829              	@ 1285 "base/os/FreeRTOS/Source/queue.c" 1
 2830 008e BFF34F8F 		dsb
 2831              	@ 0 "" 2
1285:base/os/FreeRTOS/Source/queue.c **** 					}
 2832              		.loc 1 1285 7 view .LVU835
 2833              	@ 1285 "base/os/FreeRTOS/Source/queue.c" 1
 2834 0092 BFF36F8F 		isb
 2835              	@ 0 "" 2
1285:base/os/FreeRTOS/Source/queue.c **** 					}
 2836              		.loc 1 1285 39 view .LVU836
 2837              		.thumb
ARM GAS  /tmp/ccw4aonF.s 			page 108


 2838              		.syntax unified
 2839 0096 E9E7     		b	.L197
 2840              	.LVL225:
 2841              	.L213:
1306:base/os/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2842              		.loc 1 1306 6 view .LVU837
 2843 0098 FFF7FEFF 		bl	vPortExitCritical
 2844              	.LVL226:
1307:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 2845              		.loc 1 1307 42 view .LVU838
1308:base/os/FreeRTOS/Source/queue.c **** 				}
 2846              		.loc 1 1308 6 view .LVU839
1308:base/os/FreeRTOS/Source/queue.c **** 				}
 2847              		.loc 1 1308 13 is_stmt 0 view .LVU840
 2848 009c 0020     		movs	r0, #0
 2849 009e E8E7     		b	.L188
 2850              	.L214:
1314:base/os/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2851              		.loc 1 1314 6 is_stmt 1 view .LVU841
 2852 00a0 02A8     		add	r0, sp, #8
 2853 00a2 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2854              	.LVL227:
1315:base/os/FreeRTOS/Source/queue.c **** 				}
 2855              		.loc 1 1315 6 view .LVU842
1315:base/os/FreeRTOS/Source/queue.c **** 				}
 2856              		.loc 1 1315 20 is_stmt 0 view .LVU843
 2857 00a6 0126     		movs	r6, #1
 2858 00a8 21E0     		b	.L200
 2859              	.LVL228:
 2860              	.L215:
1315:base/os/FreeRTOS/Source/queue.c **** 				}
 2861              		.loc 1 1315 20 view .LVU844
 2862              	.LBE190:
1330:base/os/FreeRTOS/Source/queue.c **** 
 2863              		.loc 1 1330 3 is_stmt 1 discriminator 1 view .LVU845
 2864 00aa 0023     		movs	r3, #0
 2865 00ac 84F84430 		strb	r3, [r4, #68]
 2866 00b0 29E0     		b	.L201
 2867              	.L216:
1330:base/os/FreeRTOS/Source/queue.c **** 
 2868              		.loc 1 1330 3 discriminator 4 view .LVU846
 2869 00b2 0023     		movs	r3, #0
 2870 00b4 84F84530 		strb	r3, [r4, #69]
 2871 00b8 2BE0     		b	.L202
 2872              	.L204:
1355:base/os/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2873              		.loc 1 1355 5 view .LVU847
 2874 00ba 2046     		mov	r0, r4
 2875 00bc FFF7FEFF 		bl	prvUnlockQueue
 2876              	.LVL229:
1356:base/os/FreeRTOS/Source/queue.c **** 			}
 2877              		.loc 1 1356 5 view .LVU848
1356:base/os/FreeRTOS/Source/queue.c **** 			}
 2878              		.loc 1 1356 14 is_stmt 0 view .LVU849
 2879 00c0 FFF7FEFF 		bl	xTaskResumeAll
 2880              	.LVL230:
 2881 00c4 09E0     		b	.L195
ARM GAS  /tmp/ccw4aonF.s 			page 109


 2882              	.L203:
1363:base/os/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2883              		.loc 1 1363 4 is_stmt 1 view .LVU850
 2884 00c6 2046     		mov	r0, r4
 2885 00c8 FFF7FEFF 		bl	prvUnlockQueue
 2886              	.LVL231:
1364:base/os/FreeRTOS/Source/queue.c **** 
 2887              		.loc 1 1364 4 view .LVU851
1364:base/os/FreeRTOS/Source/queue.c **** 
 2888              		.loc 1 1364 13 is_stmt 0 view .LVU852
 2889 00cc FFF7FEFF 		bl	xTaskResumeAll
 2890              	.LVL232:
1366:base/os/FreeRTOS/Source/queue.c **** 			{
 2891              		.loc 1 1366 4 is_stmt 1 view .LVU853
1366:base/os/FreeRTOS/Source/queue.c **** 			{
 2892              		.loc 1 1366 8 is_stmt 0 view .LVU854
 2893 00d0 2046     		mov	r0, r4
 2894 00d2 FFF7FEFF 		bl	prvIsQueueEmpty
 2895              	.LVL233:
1366:base/os/FreeRTOS/Source/queue.c **** 			{
 2896              		.loc 1 1366 6 view .LVU855
 2897 00d6 0028     		cmp	r0, #0
 2898 00d8 3FD1     		bne	.L211
 2899              	.LVL234:
 2900              	.L195:
1255:base/os/FreeRTOS/Source/queue.c **** 	}
 2901              		.loc 1 1255 104 is_stmt 1 discriminator 8 view .LVU856
1263:base/os/FreeRTOS/Source/queue.c **** 	{
 2902              		.loc 1 1263 2 discriminator 8 view .LVU857
1265:base/os/FreeRTOS/Source/queue.c **** 		{
 2903              		.loc 1 1265 3 discriminator 8 view .LVU858
 2904 00da FFF7FEFF 		bl	vPortEnterCritical
 2905              	.LVL235:
 2906              	.LBB191:
1267:base/os/FreeRTOS/Source/queue.c **** 
 2907              		.loc 1 1267 4 discriminator 8 view .LVU859
1267:base/os/FreeRTOS/Source/queue.c **** 
 2908              		.loc 1 1267 22 is_stmt 0 discriminator 8 view .LVU860
 2909 00de A56B     		ldr	r5, [r4, #56]
 2910              	.LVL236:
1271:base/os/FreeRTOS/Source/queue.c **** 			{
 2911              		.loc 1 1271 4 is_stmt 1 discriminator 8 view .LVU861
1271:base/os/FreeRTOS/Source/queue.c **** 			{
 2912              		.loc 1 1271 6 is_stmt 0 discriminator 8 view .LVU862
 2913 00e0 002D     		cmp	r5, #0
 2914 00e2 BBD1     		bne	.L212
1302:base/os/FreeRTOS/Source/queue.c **** 				{
 2915              		.loc 1 1302 5 is_stmt 1 view .LVU863
1302:base/os/FreeRTOS/Source/queue.c **** 				{
 2916              		.loc 1 1302 22 is_stmt 0 view .LVU864
 2917 00e4 019B     		ldr	r3, [sp, #4]
1302:base/os/FreeRTOS/Source/queue.c **** 				{
 2918              		.loc 1 1302 7 view .LVU865
 2919 00e6 002B     		cmp	r3, #0
 2920 00e8 D6D0     		beq	.L213
1310:base/os/FreeRTOS/Source/queue.c **** 				{
 2921              		.loc 1 1310 10 is_stmt 1 view .LVU866
ARM GAS  /tmp/ccw4aonF.s 			page 110


1310:base/os/FreeRTOS/Source/queue.c **** 				{
 2922              		.loc 1 1310 12 is_stmt 0 view .LVU867
 2923 00ea 002E     		cmp	r6, #0
 2924 00ec D8D0     		beq	.L214
 2925              	.LVL237:
 2926              	.L200:
1320:base/os/FreeRTOS/Source/queue.c **** 				}
 2927              		.loc 1 1320 30 is_stmt 1 view .LVU868
 2928              	.LBE191:
1324:base/os/FreeRTOS/Source/queue.c **** 
 2929              		.loc 1 1324 3 view .LVU869
 2930 00ee FFF7FEFF 		bl	vPortExitCritical
 2931              	.LVL238:
1329:base/os/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2932              		.loc 1 1329 3 view .LVU870
 2933 00f2 FFF7FEFF 		bl	vTaskSuspendAll
 2934              	.LVL239:
1330:base/os/FreeRTOS/Source/queue.c **** 
 2935              		.loc 1 1330 3 view .LVU871
 2936 00f6 FFF7FEFF 		bl	vPortEnterCritical
 2937              	.LVL240:
1330:base/os/FreeRTOS/Source/queue.c **** 
 2938              		.loc 1 1330 3 view .LVU872
 2939 00fa 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2940 00fe 5BB2     		sxtb	r3, r3
 2941 0100 B3F1FF3F 		cmp	r3, #-1
 2942 0104 D1D0     		beq	.L215
 2943              	.L201:
1330:base/os/FreeRTOS/Source/queue.c **** 
 2944              		.loc 1 1330 3 discriminator 3 view .LVU873
 2945 0106 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2946 010a 5BB2     		sxtb	r3, r3
 2947 010c B3F1FF3F 		cmp	r3, #-1
 2948 0110 CFD0     		beq	.L216
 2949              	.L202:
1330:base/os/FreeRTOS/Source/queue.c **** 
 2950              		.loc 1 1330 3 discriminator 6 view .LVU874
 2951 0112 FFF7FEFF 		bl	vPortExitCritical
 2952              	.LVL241:
1333:base/os/FreeRTOS/Source/queue.c **** 		{
 2953              		.loc 1 1333 3 discriminator 6 view .LVU875
1333:base/os/FreeRTOS/Source/queue.c **** 		{
 2954              		.loc 1 1333 7 is_stmt 0 discriminator 6 view .LVU876
 2955 0116 01A9     		add	r1, sp, #4
 2956 0118 02A8     		add	r0, sp, #8
 2957 011a FFF7FEFF 		bl	xTaskCheckForTimeOut
 2958              	.LVL242:
1333:base/os/FreeRTOS/Source/queue.c **** 		{
 2959              		.loc 1 1333 5 discriminator 6 view .LVU877
 2960 011e 0028     		cmp	r0, #0
 2961 0120 D1D1     		bne	.L203
1337:base/os/FreeRTOS/Source/queue.c **** 			{
 2962              		.loc 1 1337 4 is_stmt 1 view .LVU878
1337:base/os/FreeRTOS/Source/queue.c **** 			{
 2963              		.loc 1 1337 8 is_stmt 0 view .LVU879
 2964 0122 2046     		mov	r0, r4
 2965 0124 FFF7FEFF 		bl	prvIsQueueEmpty
ARM GAS  /tmp/ccw4aonF.s 			page 111


 2966              	.LVL243:
1337:base/os/FreeRTOS/Source/queue.c **** 			{
 2967              		.loc 1 1337 6 view .LVU880
 2968 0128 0028     		cmp	r0, #0
 2969 012a C6D0     		beq	.L204
1339:base/os/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2970              		.loc 1 1339 46 is_stmt 1 view .LVU881
1340:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2971              		.loc 1 1340 5 view .LVU882
 2972 012c 0199     		ldr	r1, [sp, #4]
 2973 012e 04F12400 		add	r0, r4, #36
 2974 0132 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2975              	.LVL244:
1341:base/os/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2976              		.loc 1 1341 5 view .LVU883
 2977 0136 2046     		mov	r0, r4
 2978 0138 FFF7FEFF 		bl	prvUnlockQueue
 2979              	.LVL245:
1342:base/os/FreeRTOS/Source/queue.c **** 				{
 2980              		.loc 1 1342 5 view .LVU884
1342:base/os/FreeRTOS/Source/queue.c **** 				{
 2981              		.loc 1 1342 9 is_stmt 0 view .LVU885
 2982 013c FFF7FEFF 		bl	xTaskResumeAll
 2983              	.LVL246:
1342:base/os/FreeRTOS/Source/queue.c **** 				{
 2984              		.loc 1 1342 7 view .LVU886
 2985 0140 0028     		cmp	r0, #0
 2986 0142 CAD1     		bne	.L195
1344:base/os/FreeRTOS/Source/queue.c **** 				}
 2987              		.loc 1 1344 6 is_stmt 1 view .LVU887
 2988 0144 4FF0E023 		mov	r3, #-536813568
 2989 0148 4FF08052 		mov	r2, #268435456
 2990 014c C3F8042D 		str	r2, [r3, #3332]
1344:base/os/FreeRTOS/Source/queue.c **** 				}
 2991              		.loc 1 1344 6 view .LVU888
 2992              		.syntax unified
 2993              	@ 1344 "base/os/FreeRTOS/Source/queue.c" 1
 2994 0150 BFF34F8F 		dsb
 2995              	@ 0 "" 2
1344:base/os/FreeRTOS/Source/queue.c **** 				}
 2996              		.loc 1 1344 6 view .LVU889
 2997              	@ 1344 "base/os/FreeRTOS/Source/queue.c" 1
 2998 0154 BFF36F8F 		isb
 2999              	@ 0 "" 2
1344:base/os/FreeRTOS/Source/queue.c **** 				}
 3000              		.loc 1 1344 28 view .LVU890
 3001              		.thumb
 3002              		.syntax unified
 3003 0158 BFE7     		b	.L195
 3004              	.L211:
1369:base/os/FreeRTOS/Source/queue.c **** 			}
 3005              		.loc 1 1369 12 is_stmt 0 view .LVU891
 3006 015a 0020     		movs	r0, #0
 3007 015c 89E7     		b	.L188
 3008              		.cfi_endproc
 3009              	.LFE20:
 3011              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
ARM GAS  /tmp/ccw4aonF.s 			page 112


 3012              		.align	1
 3013              		.global	xQueueSemaphoreTake
 3014              		.syntax unified
 3015              		.thumb
 3016              		.thumb_func
 3017              		.fpu softvfp
 3019              	xQueueSemaphoreTake:
 3020              	.LVL247:
 3021              	.LFB21:
1381:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 3022              		.loc 1 1381 1 is_stmt 1 view -0
 3023              		.cfi_startproc
 3024              		@ args = 0, pretend = 0, frame = 16
 3025              		@ frame_needed = 0, uses_anonymous_args = 0
1381:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 3026              		.loc 1 1381 1 is_stmt 0 view .LVU893
 3027 0000 70B5     		push	{r4, r5, r6, lr}
 3028              	.LCFI38:
 3029              		.cfi_def_cfa_offset 16
 3030              		.cfi_offset 4, -16
 3031              		.cfi_offset 5, -12
 3032              		.cfi_offset 6, -8
 3033              		.cfi_offset 14, -4
 3034 0002 84B0     		sub	sp, sp, #16
 3035              	.LCFI39:
 3036              		.cfi_def_cfa_offset 32
 3037 0004 0191     		str	r1, [sp, #4]
1382:base/os/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 3038              		.loc 1 1382 1 is_stmt 1 view .LVU894
 3039              	.LVL248:
1383:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 3040              		.loc 1 1383 1 view .LVU895
1384:base/os/FreeRTOS/Source/queue.c **** 
 3041              		.loc 1 1384 1 view .LVU896
1387:base/os/FreeRTOS/Source/queue.c **** #endif
 3042              		.loc 1 1387 2 view .LVU897
1391:base/os/FreeRTOS/Source/queue.c **** 
 3043              		.loc 1 1391 2 view .LVU898
 3044 0006 58B1     		cbz	r0, .L243
 3045 0008 0446     		mov	r4, r0
1391:base/os/FreeRTOS/Source/queue.c **** 
 3046              		.loc 1 1391 29 discriminator 2 view .LVU899
1395:base/os/FreeRTOS/Source/queue.c **** 
 3047              		.loc 1 1395 2 discriminator 2 view .LVU900
 3048 000a 036C     		ldr	r3, [r0, #64]
 3049 000c 8BB1     		cbz	r3, .L220
1395:base/os/FreeRTOS/Source/queue.c **** 
 3050              		.loc 1 1395 2 view .LVU901
 3051              	.LBB192:
 3052              	.LBI192:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3053              		.loc 2 191 30 view .LVU902
 3054              	.LBB193:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3055              		.loc 2 193 1 view .LVU903
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3056              		.loc 2 195 2 view .LVU904
ARM GAS  /tmp/ccw4aonF.s 			page 113


 3057              		.syntax unified
 3058              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3059 000e 4FF05003 			mov r3, #80												
 3060 0012 83F31188 		msr basepri, r3											
 3061 0016 BFF36F8F 		isb														
 3062 001a BFF34F8F 		dsb														
 3063              	
 3064              	@ 0 "" 2
 3065              	.LVL249:
 3066              		.thumb
 3067              		.syntax unified
 3068              	.L221:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3069              		.loc 2 195 2 is_stmt 0 view .LVU905
 3070              	.LBE193:
 3071              	.LBE192:
1395:base/os/FreeRTOS/Source/queue.c **** 
 3072              		.loc 1 1395 2 is_stmt 1 discriminator 2 view .LVU906
1395:base/os/FreeRTOS/Source/queue.c **** 
 3073              		.loc 1 1395 2 discriminator 2 view .LVU907
 3074 001e FEE7     		b	.L221
 3075              	.L243:
1391:base/os/FreeRTOS/Source/queue.c **** 
 3076              		.loc 1 1391 2 view .LVU908
 3077              	.LBB194:
 3078              	.LBI194:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3079              		.loc 2 191 30 view .LVU909
 3080              	.LBB195:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3081              		.loc 2 193 1 view .LVU910
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3082              		.loc 2 195 2 view .LVU911
 3083              		.syntax unified
 3084              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3085 0020 4FF05003 			mov r3, #80												
 3086 0024 83F31188 		msr basepri, r3											
 3087 0028 BFF36F8F 		isb														
 3088 002c BFF34F8F 		dsb														
 3089              	
 3090              	@ 0 "" 2
 3091              	.LVL250:
 3092              		.thumb
 3093              		.syntax unified
 3094              	.L219:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3095              		.loc 2 195 2 is_stmt 0 view .LVU912
 3096              	.LBE195:
 3097              	.LBE194:
1391:base/os/FreeRTOS/Source/queue.c **** 
 3098              		.loc 1 1391 2 is_stmt 1 discriminator 1 view .LVU913
1391:base/os/FreeRTOS/Source/queue.c **** 
 3099              		.loc 1 1391 2 discriminator 1 view .LVU914
 3100 0030 FEE7     		b	.L219
 3101              	.L220:
1395:base/os/FreeRTOS/Source/queue.c **** 
 3102              		.loc 1 1395 42 discriminator 2 view .LVU915
ARM GAS  /tmp/ccw4aonF.s 			page 114


1400:base/os/FreeRTOS/Source/queue.c **** 	}
 3103              		.loc 1 1400 3 discriminator 2 view .LVU916
 3104 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 3105              	.LVL251:
1400:base/os/FreeRTOS/Source/queue.c **** 	}
 3106              		.loc 1 1400 3 is_stmt 0 discriminator 2 view .LVU917
 3107 0036 0546     		mov	r5, r0
 3108 0038 50B9     		cbnz	r0, .L240
 3109 003a 019B     		ldr	r3, [sp, #4]
 3110 003c 5BB1     		cbz	r3, .L241
1400:base/os/FreeRTOS/Source/queue.c **** 	}
 3111              		.loc 1 1400 3 is_stmt 1 view .LVU918
 3112              	.LBB196:
 3113              	.LBI196:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3114              		.loc 2 191 30 view .LVU919
 3115              	.LBB197:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3116              		.loc 2 193 1 view .LVU920
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3117              		.loc 2 195 2 view .LVU921
 3118              		.syntax unified
 3119              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3120 003e 4FF05003 			mov r3, #80												
 3121 0042 83F31188 		msr basepri, r3											
 3122 0046 BFF36F8F 		isb														
 3123 004a BFF34F8F 		dsb														
 3124              	
 3125              	@ 0 "" 2
 3126              	.LVL252:
 3127              		.thumb
 3128              		.syntax unified
 3129              	.L223:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3130              		.loc 2 195 2 is_stmt 0 view .LVU922
 3131              	.LBE197:
 3132              	.LBE196:
1400:base/os/FreeRTOS/Source/queue.c **** 	}
 3133              		.loc 1 1400 3 is_stmt 1 discriminator 3 view .LVU923
1400:base/os/FreeRTOS/Source/queue.c **** 	}
 3134              		.loc 1 1400 3 discriminator 3 view .LVU924
 3135 004e FEE7     		b	.L223
 3136              	.L240:
 3137 0050 0026     		movs	r6, #0
 3138 0052 3546     		mov	r5, r6
 3139 0054 55E0     		b	.L224
 3140              	.L241:
 3141 0056 0646     		mov	r6, r0
 3142 0058 53E0     		b	.L224
 3143              	.LVL253:
 3144              	.L247:
 3145              	.LBB198:
1421:base/os/FreeRTOS/Source/queue.c **** 
 3146              		.loc 1 1421 34 view .LVU925
1425:base/os/FreeRTOS/Source/queue.c **** 
 3147              		.loc 1 1425 5 view .LVU926
1425:base/os/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccw4aonF.s 			page 115


 3148              		.loc 1 1425 51 is_stmt 0 view .LVU927
 3149 005a 013B     		subs	r3, r3, #1
 3150              	.LVL254:
1425:base/os/FreeRTOS/Source/queue.c **** 
 3151              		.loc 1 1425 32 view .LVU928
 3152 005c A363     		str	r3, [r4, #56]
1429:base/os/FreeRTOS/Source/queue.c **** 					{
 3153              		.loc 1 1429 6 is_stmt 1 view .LVU929
1429:base/os/FreeRTOS/Source/queue.c **** 					{
 3154              		.loc 1 1429 17 is_stmt 0 view .LVU930
 3155 005e 2368     		ldr	r3, [r4]
 3156              	.LVL255:
1429:base/os/FreeRTOS/Source/queue.c **** 					{
 3157              		.loc 1 1429 8 view .LVU931
 3158 0060 3BB1     		cbz	r3, .L244
 3159              	.LVL256:
 3160              	.L226:
1437:base/os/FreeRTOS/Source/queue.c **** 					}
 3161              		.loc 1 1437 31 is_stmt 1 view .LVU932
1444:base/os/FreeRTOS/Source/queue.c **** 				{
 3162              		.loc 1 1444 5 view .LVU933
1444:base/os/FreeRTOS/Source/queue.c **** 				{
 3163              		.loc 1 1444 9 is_stmt 0 view .LVU934
 3164 0062 2369     		ldr	r3, [r4, #16]
1444:base/os/FreeRTOS/Source/queue.c **** 				{
 3165              		.loc 1 1444 7 view .LVU935
 3166 0064 4BB9     		cbnz	r3, .L245
 3167              	.L227:
1457:base/os/FreeRTOS/Source/queue.c **** 				}
 3168              		.loc 1 1457 30 is_stmt 1 view .LVU936
1460:base/os/FreeRTOS/Source/queue.c **** 				return pdPASS;
 3169              		.loc 1 1460 5 view .LVU937
 3170 0066 FFF7FEFF 		bl	vPortExitCritical
 3171              	.LVL257:
1461:base/os/FreeRTOS/Source/queue.c **** 			}
 3172              		.loc 1 1461 5 view .LVU938
1461:base/os/FreeRTOS/Source/queue.c **** 			}
 3173              		.loc 1 1461 12 is_stmt 0 view .LVU939
 3174 006a 0126     		movs	r6, #1
 3175              	.LVL258:
 3176              	.L217:
1461:base/os/FreeRTOS/Source/queue.c **** 			}
 3177              		.loc 1 1461 12 view .LVU940
 3178              	.LBE198:
1596:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3179              		.loc 1 1596 1 view .LVU941
 3180 006c 3046     		mov	r0, r6
 3181 006e 04B0     		add	sp, sp, #16
 3182              	.LCFI40:
 3183              		.cfi_remember_state
 3184              		.cfi_def_cfa_offset 16
 3185              		@ sp needed
 3186 0070 70BD     		pop	{r4, r5, r6, pc}
 3187              	.LVL259:
 3188              	.L244:
 3189              	.LCFI41:
 3190              		.cfi_restore_state
ARM GAS  /tmp/ccw4aonF.s 			page 116


 3191              	.LBB201:
1433:base/os/FreeRTOS/Source/queue.c **** 					}
 3192              		.loc 1 1433 7 is_stmt 1 view .LVU942
1433:base/os/FreeRTOS/Source/queue.c **** 					}
 3193              		.loc 1 1433 45 is_stmt 0 view .LVU943
 3194 0072 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 3195              	.LVL260:
1433:base/os/FreeRTOS/Source/queue.c **** 					}
 3196              		.loc 1 1433 30 view .LVU944
 3197 0076 6060     		str	r0, [r4, #4]
 3198 0078 F3E7     		b	.L226
 3199              	.L245:
1446:base/os/FreeRTOS/Source/queue.c **** 					{
 3200              		.loc 1 1446 6 is_stmt 1 view .LVU945
1446:base/os/FreeRTOS/Source/queue.c **** 					{
 3201              		.loc 1 1446 10 is_stmt 0 view .LVU946
 3202 007a 04F11000 		add	r0, r4, #16
 3203 007e FFF7FEFF 		bl	xTaskRemoveFromEventList
 3204              	.LVL261:
1446:base/os/FreeRTOS/Source/queue.c **** 					{
 3205              		.loc 1 1446 8 view .LVU947
 3206 0082 0028     		cmp	r0, #0
 3207 0084 EFD0     		beq	.L227
1448:base/os/FreeRTOS/Source/queue.c **** 					}
 3208              		.loc 1 1448 7 is_stmt 1 view .LVU948
 3209 0086 4FF0E023 		mov	r3, #-536813568
 3210 008a 4FF08052 		mov	r2, #268435456
 3211 008e C3F8042D 		str	r2, [r3, #3332]
1448:base/os/FreeRTOS/Source/queue.c **** 					}
 3212              		.loc 1 1448 7 view .LVU949
 3213              		.syntax unified
 3214              	@ 1448 "base/os/FreeRTOS/Source/queue.c" 1
 3215 0092 BFF34F8F 		dsb
 3216              	@ 0 "" 2
1448:base/os/FreeRTOS/Source/queue.c **** 					}
 3217              		.loc 1 1448 7 view .LVU950
 3218              	@ 1448 "base/os/FreeRTOS/Source/queue.c" 1
 3219 0096 BFF36F8F 		isb
 3220              	@ 0 "" 2
1448:base/os/FreeRTOS/Source/queue.c **** 					}
 3221              		.loc 1 1448 39 view .LVU951
 3222              		.thumb
 3223              		.syntax unified
 3224 009a E4E7     		b	.L227
 3225              	.L248:
1472:base/os/FreeRTOS/Source/queue.c **** 					}
 3226              		.loc 1 1472 7 view .LVU952
 3227 009c 46B1     		cbz	r6, .L230
1472:base/os/FreeRTOS/Source/queue.c **** 					}
 3228              		.loc 1 1472 7 view .LVU953
 3229              	.LBB199:
 3230              	.LBI199:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3231              		.loc 2 191 30 view .LVU954
 3232              	.LBB200:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3233              		.loc 2 193 1 view .LVU955
ARM GAS  /tmp/ccw4aonF.s 			page 117


 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3234              		.loc 2 195 2 view .LVU956
 3235              		.syntax unified
 3236              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3237 009e 4FF05003 			mov r3, #80												
 3238 00a2 83F31188 		msr basepri, r3											
 3239 00a6 BFF36F8F 		isb														
 3240 00aa BFF34F8F 		dsb														
 3241              	
 3242              	@ 0 "" 2
 3243              	.LVL262:
 3244              		.thumb
 3245              		.syntax unified
 3246              	.L231:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3247              		.loc 2 195 2 is_stmt 0 view .LVU957
 3248              	.LBE200:
 3249              	.LBE199:
1472:base/os/FreeRTOS/Source/queue.c **** 					}
 3250              		.loc 1 1472 7 is_stmt 1 discriminator 4 view .LVU958
1472:base/os/FreeRTOS/Source/queue.c **** 					}
 3251              		.loc 1 1472 7 discriminator 4 view .LVU959
 3252 00ae FEE7     		b	.L231
 3253              	.L230:
1472:base/os/FreeRTOS/Source/queue.c **** 					}
 3254              		.loc 1 1472 54 discriminator 2 view .LVU960
1478:base/os/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 3255              		.loc 1 1478 6 discriminator 2 view .LVU961
 3256 00b0 FFF7FEFF 		bl	vPortExitCritical
 3257              	.LVL263:
1479:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 3258              		.loc 1 1479 42 discriminator 2 view .LVU962
1480:base/os/FreeRTOS/Source/queue.c **** 				}
 3259              		.loc 1 1480 6 discriminator 2 view .LVU963
1480:base/os/FreeRTOS/Source/queue.c **** 				}
 3260              		.loc 1 1480 13 is_stmt 0 discriminator 2 view .LVU964
 3261 00b4 DAE7     		b	.L217
 3262              	.L249:
1486:base/os/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 3263              		.loc 1 1486 6 is_stmt 1 view .LVU965
 3264 00b6 02A8     		add	r0, sp, #8
 3265 00b8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3266              	.LVL264:
1487:base/os/FreeRTOS/Source/queue.c **** 				}
 3267              		.loc 1 1487 6 view .LVU966
1487:base/os/FreeRTOS/Source/queue.c **** 				}
 3268              		.loc 1 1487 20 is_stmt 0 view .LVU967
 3269 00bc 0125     		movs	r5, #1
 3270 00be 2AE0     		b	.L232
 3271              	.LVL265:
 3272              	.L250:
1487:base/os/FreeRTOS/Source/queue.c **** 				}
 3273              		.loc 1 1487 20 view .LVU968
 3274              	.LBE201:
1502:base/os/FreeRTOS/Source/queue.c **** 
 3275              		.loc 1 1502 3 is_stmt 1 discriminator 1 view .LVU969
 3276 00c0 0023     		movs	r3, #0
ARM GAS  /tmp/ccw4aonF.s 			page 118


 3277 00c2 84F84430 		strb	r3, [r4, #68]
 3278 00c6 32E0     		b	.L233
 3279              	.L251:
1502:base/os/FreeRTOS/Source/queue.c **** 
 3280              		.loc 1 1502 3 discriminator 4 view .LVU970
 3281 00c8 0023     		movs	r3, #0
 3282 00ca 84F84530 		strb	r3, [r4, #69]
 3283 00ce 34E0     		b	.L234
 3284              	.L252:
1519:base/os/FreeRTOS/Source/queue.c **** 						{
 3285              		.loc 1 1519 7 view .LVU971
 3286 00d0 FFF7FEFF 		bl	vPortEnterCritical
 3287              	.LVL266:
1521:base/os/FreeRTOS/Source/queue.c **** 						}
 3288              		.loc 1 1521 8 view .LVU972
1521:base/os/FreeRTOS/Source/queue.c **** 						}
 3289              		.loc 1 1521 31 is_stmt 0 view .LVU973
 3290 00d4 6068     		ldr	r0, [r4, #4]
 3291 00d6 FFF7FEFF 		bl	xTaskPriorityInherit
 3292              	.LVL267:
 3293 00da 0646     		mov	r6, r0
 3294              	.LVL268:
1523:base/os/FreeRTOS/Source/queue.c **** 					}
 3295              		.loc 1 1523 7 is_stmt 1 view .LVU974
 3296 00dc FFF7FEFF 		bl	vPortExitCritical
 3297              	.LVL269:
1523:base/os/FreeRTOS/Source/queue.c **** 					}
 3298              		.loc 1 1523 7 is_stmt 0 view .LVU975
 3299 00e0 3BE0     		b	.L237
 3300              	.L236:
1547:base/os/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3301              		.loc 1 1547 5 is_stmt 1 view .LVU976
 3302 00e2 2046     		mov	r0, r4
 3303 00e4 FFF7FEFF 		bl	prvUnlockQueue
 3304              	.LVL270:
1548:base/os/FreeRTOS/Source/queue.c **** 			}
 3305              		.loc 1 1548 5 view .LVU977
1548:base/os/FreeRTOS/Source/queue.c **** 			}
 3306              		.loc 1 1548 14 is_stmt 0 view .LVU978
 3307 00e8 FFF7FEFF 		bl	xTaskResumeAll
 3308              	.LVL271:
 3309 00ec 09E0     		b	.L224
 3310              	.L235:
1554:base/os/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3311              		.loc 1 1554 4 is_stmt 1 view .LVU979
 3312 00ee 2046     		mov	r0, r4
 3313 00f0 FFF7FEFF 		bl	prvUnlockQueue
 3314              	.LVL272:
1555:base/os/FreeRTOS/Source/queue.c **** 
 3315              		.loc 1 1555 4 view .LVU980
1555:base/os/FreeRTOS/Source/queue.c **** 
 3316              		.loc 1 1555 13 is_stmt 0 view .LVU981
 3317 00f4 FFF7FEFF 		bl	xTaskResumeAll
 3318              	.LVL273:
1561:base/os/FreeRTOS/Source/queue.c **** 			{
 3319              		.loc 1 1561 4 is_stmt 1 view .LVU982
1561:base/os/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccw4aonF.s 			page 119


 3320              		.loc 1 1561 8 is_stmt 0 view .LVU983
 3321 00f8 2046     		mov	r0, r4
 3322 00fa FFF7FEFF 		bl	prvIsQueueEmpty
 3323              	.LVL274:
1561:base/os/FreeRTOS/Source/queue.c **** 			{
 3324              		.loc 1 1561 6 view .LVU984
 3325 00fe 0028     		cmp	r0, #0
 3326 0100 42D1     		bne	.L246
 3327              	.LVL275:
 3328              	.L224:
1400:base/os/FreeRTOS/Source/queue.c **** 	}
 3329              		.loc 1 1400 104 is_stmt 1 discriminator 8 view .LVU985
1409:base/os/FreeRTOS/Source/queue.c **** 	{
 3330              		.loc 1 1409 2 discriminator 8 view .LVU986
1411:base/os/FreeRTOS/Source/queue.c **** 		{
 3331              		.loc 1 1411 3 discriminator 8 view .LVU987
 3332 0102 FFF7FEFF 		bl	vPortEnterCritical
 3333              	.LVL276:
 3334              	.LBB202:
1415:base/os/FreeRTOS/Source/queue.c **** 
 3335              		.loc 1 1415 4 discriminator 8 view .LVU988
1415:base/os/FreeRTOS/Source/queue.c **** 
 3336              		.loc 1 1415 22 is_stmt 0 discriminator 8 view .LVU989
 3337 0106 A36B     		ldr	r3, [r4, #56]
 3338              	.LVL277:
1419:base/os/FreeRTOS/Source/queue.c **** 			{
 3339              		.loc 1 1419 4 is_stmt 1 discriminator 8 view .LVU990
1419:base/os/FreeRTOS/Source/queue.c **** 			{
 3340              		.loc 1 1419 6 is_stmt 0 discriminator 8 view .LVU991
 3341 0108 002B     		cmp	r3, #0
 3342 010a A6D1     		bne	.L247
1465:base/os/FreeRTOS/Source/queue.c **** 				{
 3343              		.loc 1 1465 5 is_stmt 1 view .LVU992
1465:base/os/FreeRTOS/Source/queue.c **** 				{
 3344              		.loc 1 1465 22 is_stmt 0 view .LVU993
 3345 010c 019B     		ldr	r3, [sp, #4]
 3346              	.LVL278:
1465:base/os/FreeRTOS/Source/queue.c **** 				{
 3347              		.loc 1 1465 7 view .LVU994
 3348 010e 002B     		cmp	r3, #0
 3349 0110 C4D0     		beq	.L248
1482:base/os/FreeRTOS/Source/queue.c **** 				{
 3350              		.loc 1 1482 10 is_stmt 1 view .LVU995
1482:base/os/FreeRTOS/Source/queue.c **** 				{
 3351              		.loc 1 1482 12 is_stmt 0 view .LVU996
 3352 0112 002D     		cmp	r5, #0
 3353 0114 CFD0     		beq	.L249
 3354              	.LVL279:
 3355              	.L232:
1492:base/os/FreeRTOS/Source/queue.c **** 				}
 3356              		.loc 1 1492 30 is_stmt 1 view .LVU997
 3357              	.LBE202:
1496:base/os/FreeRTOS/Source/queue.c **** 
 3358              		.loc 1 1496 3 view .LVU998
 3359 0116 FFF7FEFF 		bl	vPortExitCritical
 3360              	.LVL280:
1501:base/os/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
ARM GAS  /tmp/ccw4aonF.s 			page 120


 3361              		.loc 1 1501 3 view .LVU999
 3362 011a FFF7FEFF 		bl	vTaskSuspendAll
 3363              	.LVL281:
1502:base/os/FreeRTOS/Source/queue.c **** 
 3364              		.loc 1 1502 3 view .LVU1000
 3365 011e FFF7FEFF 		bl	vPortEnterCritical
 3366              	.LVL282:
1502:base/os/FreeRTOS/Source/queue.c **** 
 3367              		.loc 1 1502 3 view .LVU1001
 3368 0122 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3369 0126 5BB2     		sxtb	r3, r3
 3370 0128 B3F1FF3F 		cmp	r3, #-1
 3371 012c C8D0     		beq	.L250
 3372              	.L233:
1502:base/os/FreeRTOS/Source/queue.c **** 
 3373              		.loc 1 1502 3 discriminator 3 view .LVU1002
 3374 012e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3375 0132 5BB2     		sxtb	r3, r3
 3376 0134 B3F1FF3F 		cmp	r3, #-1
 3377 0138 C6D0     		beq	.L251
 3378              	.L234:
1502:base/os/FreeRTOS/Source/queue.c **** 
 3379              		.loc 1 1502 3 discriminator 6 view .LVU1003
 3380 013a FFF7FEFF 		bl	vPortExitCritical
 3381              	.LVL283:
1505:base/os/FreeRTOS/Source/queue.c **** 		{
 3382              		.loc 1 1505 3 discriminator 6 view .LVU1004
1505:base/os/FreeRTOS/Source/queue.c **** 		{
 3383              		.loc 1 1505 7 is_stmt 0 discriminator 6 view .LVU1005
 3384 013e 01A9     		add	r1, sp, #4
 3385 0140 02A8     		add	r0, sp, #8
 3386 0142 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3387              	.LVL284:
1505:base/os/FreeRTOS/Source/queue.c **** 		{
 3388              		.loc 1 1505 5 discriminator 6 view .LVU1006
 3389 0146 0028     		cmp	r0, #0
 3390 0148 D1D1     		bne	.L235
1511:base/os/FreeRTOS/Source/queue.c **** 			{
 3391              		.loc 1 1511 4 is_stmt 1 view .LVU1007
1511:base/os/FreeRTOS/Source/queue.c **** 			{
 3392              		.loc 1 1511 8 is_stmt 0 view .LVU1008
 3393 014a 2046     		mov	r0, r4
 3394 014c FFF7FEFF 		bl	prvIsQueueEmpty
 3395              	.LVL285:
1511:base/os/FreeRTOS/Source/queue.c **** 			{
 3396              		.loc 1 1511 6 view .LVU1009
 3397 0150 0028     		cmp	r0, #0
 3398 0152 C6D0     		beq	.L236
1513:base/os/FreeRTOS/Source/queue.c **** 
 3399              		.loc 1 1513 46 is_stmt 1 view .LVU1010
1517:base/os/FreeRTOS/Source/queue.c **** 					{
 3400              		.loc 1 1517 6 view .LVU1011
1517:base/os/FreeRTOS/Source/queue.c **** 					{
 3401              		.loc 1 1517 17 is_stmt 0 view .LVU1012
 3402 0154 2368     		ldr	r3, [r4]
1517:base/os/FreeRTOS/Source/queue.c **** 					{
 3403              		.loc 1 1517 8 view .LVU1013
ARM GAS  /tmp/ccw4aonF.s 			page 121


 3404 0156 002B     		cmp	r3, #0
 3405 0158 BAD0     		beq	.L252
 3406              	.L237:
1527:base/os/FreeRTOS/Source/queue.c **** 					}
 3407              		.loc 1 1527 31 is_stmt 1 view .LVU1014
1532:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3408              		.loc 1 1532 5 view .LVU1015
 3409 015a 0199     		ldr	r1, [sp, #4]
 3410 015c 04F12400 		add	r0, r4, #36
 3411 0160 FFF7FEFF 		bl	vTaskPlaceOnEventList
 3412              	.LVL286:
1533:base/os/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3413              		.loc 1 1533 5 view .LVU1016
 3414 0164 2046     		mov	r0, r4
 3415 0166 FFF7FEFF 		bl	prvUnlockQueue
 3416              	.LVL287:
1534:base/os/FreeRTOS/Source/queue.c **** 				{
 3417              		.loc 1 1534 5 view .LVU1017
1534:base/os/FreeRTOS/Source/queue.c **** 				{
 3418              		.loc 1 1534 9 is_stmt 0 view .LVU1018
 3419 016a FFF7FEFF 		bl	xTaskResumeAll
 3420              	.LVL288:
1534:base/os/FreeRTOS/Source/queue.c **** 				{
 3421              		.loc 1 1534 7 view .LVU1019
 3422 016e 0028     		cmp	r0, #0
 3423 0170 C7D1     		bne	.L224
1536:base/os/FreeRTOS/Source/queue.c **** 				}
 3424              		.loc 1 1536 6 is_stmt 1 view .LVU1020
 3425 0172 4FF0E023 		mov	r3, #-536813568
 3426 0176 4FF08052 		mov	r2, #268435456
 3427 017a C3F8042D 		str	r2, [r3, #3332]
1536:base/os/FreeRTOS/Source/queue.c **** 				}
 3428              		.loc 1 1536 6 view .LVU1021
 3429              		.syntax unified
 3430              	@ 1536 "base/os/FreeRTOS/Source/queue.c" 1
 3431 017e BFF34F8F 		dsb
 3432              	@ 0 "" 2
1536:base/os/FreeRTOS/Source/queue.c **** 				}
 3433              		.loc 1 1536 6 view .LVU1022
 3434              	@ 1536 "base/os/FreeRTOS/Source/queue.c" 1
 3435 0182 BFF36F8F 		isb
 3436              	@ 0 "" 2
1536:base/os/FreeRTOS/Source/queue.c **** 				}
 3437              		.loc 1 1536 28 view .LVU1023
 3438              		.thumb
 3439              		.syntax unified
 3440 0186 BCE7     		b	.L224
 3441              	.L246:
1568:base/os/FreeRTOS/Source/queue.c **** 					{
 3442              		.loc 1 1568 6 view .LVU1024
1568:base/os/FreeRTOS/Source/queue.c **** 					{
 3443              		.loc 1 1568 8 is_stmt 0 view .LVU1025
 3444 0188 0EB9     		cbnz	r6, .L253
 3445              	.L239:
1587:base/os/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
 3446              		.loc 1 1587 41 is_stmt 1 view .LVU1026
1588:base/os/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccw4aonF.s 			page 122


 3447              		.loc 1 1588 5 view .LVU1027
1588:base/os/FreeRTOS/Source/queue.c **** 			}
 3448              		.loc 1 1588 12 is_stmt 0 view .LVU1028
 3449 018a 0026     		movs	r6, #0
 3450              	.LVL289:
1588:base/os/FreeRTOS/Source/queue.c **** 			}
 3451              		.loc 1 1588 12 view .LVU1029
 3452 018c 6EE7     		b	.L217
 3453              	.LVL290:
 3454              	.L253:
1570:base/os/FreeRTOS/Source/queue.c **** 						{
 3455              		.loc 1 1570 7 is_stmt 1 view .LVU1030
 3456 018e FFF7FEFF 		bl	vPortEnterCritical
 3457              	.LVL291:
 3458              	.LBB203:
1572:base/os/FreeRTOS/Source/queue.c **** 
 3459              		.loc 1 1572 8 view .LVU1031
1579:base/os/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 3460              		.loc 1 1579 8 view .LVU1032
1579:base/os/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 3461              		.loc 1 1579 35 is_stmt 0 view .LVU1033
 3462 0192 2046     		mov	r0, r4
 3463 0194 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 3464              	.LVL292:
 3465 0198 0146     		mov	r1, r0
 3466              	.LVL293:
1580:base/os/FreeRTOS/Source/queue.c **** 						}
 3467              		.loc 1 1580 8 is_stmt 1 view .LVU1034
 3468 019a 6068     		ldr	r0, [r4, #4]
 3469              	.LVL294:
1580:base/os/FreeRTOS/Source/queue.c **** 						}
 3470              		.loc 1 1580 8 is_stmt 0 view .LVU1035
 3471 019c FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 3472              	.LVL295:
1580:base/os/FreeRTOS/Source/queue.c **** 						}
 3473              		.loc 1 1580 8 view .LVU1036
 3474              	.LBE203:
1582:base/os/FreeRTOS/Source/queue.c **** 					}
 3475              		.loc 1 1582 7 is_stmt 1 view .LVU1037
 3476 01a0 FFF7FEFF 		bl	vPortExitCritical
 3477              	.LVL296:
 3478 01a4 F1E7     		b	.L239
 3479              		.cfi_endproc
 3480              	.LFE21:
 3482              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 3483              		.align	1
 3484              		.global	xQueueTakeMutexRecursive
 3485              		.syntax unified
 3486              		.thumb
 3487              		.thumb_func
 3488              		.fpu softvfp
 3490              	xQueueTakeMutexRecursive:
 3491              	.LVL297:
 3492              	.LFB14:
 630:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 3493              		.loc 1 630 2 view -0
 3494              		.cfi_startproc
ARM GAS  /tmp/ccw4aonF.s 			page 123


 3495              		@ args = 0, pretend = 0, frame = 0
 3496              		@ frame_needed = 0, uses_anonymous_args = 0
 631:base/os/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 3497              		.loc 1 631 2 view .LVU1039
 632:base/os/FreeRTOS/Source/queue.c **** 
 3498              		.loc 1 632 2 view .LVU1040
 634:base/os/FreeRTOS/Source/queue.c **** 
 3499              		.loc 1 634 3 view .LVU1041
 3500 0000 80B1     		cbz	r0, .L261
 630:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 3501              		.loc 1 630 2 is_stmt 0 discriminator 2 view .LVU1042
 3502 0002 70B5     		push	{r4, r5, r6, lr}
 3503              	.LCFI42:
 3504              		.cfi_def_cfa_offset 16
 3505              		.cfi_offset 4, -16
 3506              		.cfi_offset 5, -12
 3507              		.cfi_offset 6, -8
 3508              		.cfi_offset 14, -4
 3509 0004 0C46     		mov	r4, r1
 3510 0006 0546     		mov	r5, r0
 634:base/os/FreeRTOS/Source/queue.c **** 
 3511              		.loc 1 634 26 is_stmt 1 discriminator 2 view .LVU1043
 639:base/os/FreeRTOS/Source/queue.c **** 
 3512              		.loc 1 639 39 discriminator 2 view .LVU1044
 641:base/os/FreeRTOS/Source/queue.c **** 		{
 3513              		.loc 1 641 3 discriminator 2 view .LVU1045
 641:base/os/FreeRTOS/Source/queue.c **** 		{
 3514              		.loc 1 641 14 is_stmt 0 discriminator 2 view .LVU1046
 3515 0008 4668     		ldr	r6, [r0, #4]
 641:base/os/FreeRTOS/Source/queue.c **** 		{
 3516              		.loc 1 641 44 discriminator 2 view .LVU1047
 3517 000a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 3518              	.LVL298:
 641:base/os/FreeRTOS/Source/queue.c **** 		{
 3519              		.loc 1 641 5 discriminator 2 view .LVU1048
 3520 000e 8642     		cmp	r6, r0
 3521 0010 11D0     		beq	.L262
 648:base/os/FreeRTOS/Source/queue.c **** 
 3522              		.loc 1 648 4 is_stmt 1 view .LVU1049
 648:base/os/FreeRTOS/Source/queue.c **** 
 3523              		.loc 1 648 14 is_stmt 0 view .LVU1050
 3524 0012 2146     		mov	r1, r4
 3525 0014 2846     		mov	r0, r5
 3526 0016 FFF7FEFF 		bl	xQueueSemaphoreTake
 3527              	.LVL299:
 653:base/os/FreeRTOS/Source/queue.c **** 			{
 3528              		.loc 1 653 4 is_stmt 1 view .LVU1051
 653:base/os/FreeRTOS/Source/queue.c **** 			{
 3529              		.loc 1 653 6 is_stmt 0 view .LVU1052
 3530 001a 80B1     		cbz	r0, .L254
 655:base/os/FreeRTOS/Source/queue.c **** 			}
 3531              		.loc 1 655 5 is_stmt 1 view .LVU1053
 655:base/os/FreeRTOS/Source/queue.c **** 			}
 3532              		.loc 1 655 17 is_stmt 0 view .LVU1054
 3533 001c EB68     		ldr	r3, [r5, #12]
 655:base/os/FreeRTOS/Source/queue.c **** 			}
 3534              		.loc 1 655 40 view .LVU1055
ARM GAS  /tmp/ccw4aonF.s 			page 124


 3535 001e 0133     		adds	r3, r3, #1
 3536 0020 EB60     		str	r3, [r5, #12]
 659:base/os/FreeRTOS/Source/queue.c **** 			}
 3537              		.loc 1 659 48 is_stmt 1 view .LVU1056
 663:base/os/FreeRTOS/Source/queue.c **** 	}
 3538              		.loc 1 663 3 view .LVU1057
 663:base/os/FreeRTOS/Source/queue.c **** 	}
 3539              		.loc 1 663 10 is_stmt 0 view .LVU1058
 3540 0022 0CE0     		b	.L254
 3541              	.LVL300:
 3542              	.L261:
 3543              	.LCFI43:
 3544              		.cfi_def_cfa_offset 0
 3545              		.cfi_restore 4
 3546              		.cfi_restore 5
 3547              		.cfi_restore 6
 3548              		.cfi_restore 14
 634:base/os/FreeRTOS/Source/queue.c **** 
 3549              		.loc 1 634 3 is_stmt 1 view .LVU1059
 3550              	.LBB204:
 3551              	.LBI204:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3552              		.loc 2 191 30 view .LVU1060
 3553              	.LBB205:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3554              		.loc 2 193 1 view .LVU1061
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3555              		.loc 2 195 2 view .LVU1062
 3556              		.syntax unified
 3557              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3558 0024 4FF05003 			mov r3, #80												
 3559 0028 83F31188 		msr basepri, r3											
 3560 002c BFF36F8F 		isb														
 3561 0030 BFF34F8F 		dsb														
 3562              	
 3563              	@ 0 "" 2
 3564              	.LVL301:
 3565              		.thumb
 3566              		.syntax unified
 3567              	.L256:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3568              		.loc 2 195 2 is_stmt 0 view .LVU1063
 3569              	.LBE205:
 3570              	.LBE204:
 634:base/os/FreeRTOS/Source/queue.c **** 
 3571              		.loc 1 634 3 is_stmt 1 discriminator 1 view .LVU1064
 634:base/os/FreeRTOS/Source/queue.c **** 
 3572              		.loc 1 634 3 discriminator 1 view .LVU1065
 3573 0034 FEE7     		b	.L256
 3574              	.LVL302:
 3575              	.L262:
 3576              	.LCFI44:
 3577              		.cfi_def_cfa_offset 16
 3578              		.cfi_offset 4, -16
 3579              		.cfi_offset 5, -12
 3580              		.cfi_offset 6, -8
 3581              		.cfi_offset 14, -4
ARM GAS  /tmp/ccw4aonF.s 			page 125


 643:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 3582              		.loc 1 643 4 view .LVU1066
 643:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 3583              		.loc 1 643 16 is_stmt 0 view .LVU1067
 3584 0036 EB68     		ldr	r3, [r5, #12]
 643:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 3585              		.loc 1 643 39 view .LVU1068
 3586 0038 0133     		adds	r3, r3, #1
 3587 003a EB60     		str	r3, [r5, #12]
 644:base/os/FreeRTOS/Source/queue.c **** 		}
 3588              		.loc 1 644 4 is_stmt 1 view .LVU1069
 3589              	.LVL303:
 644:base/os/FreeRTOS/Source/queue.c **** 		}
 3590              		.loc 1 644 12 is_stmt 0 view .LVU1070
 3591 003c 0120     		movs	r0, #1
 3592              	.LVL304:
 3593              	.L254:
 664:base/os/FreeRTOS/Source/queue.c **** 
 3594              		.loc 1 664 2 view .LVU1071
 3595 003e 70BD     		pop	{r4, r5, r6, pc}
 664:base/os/FreeRTOS/Source/queue.c **** 
 3596              		.loc 1 664 2 view .LVU1072
 3597              		.cfi_endproc
 3598              	.LFE14:
 3600              		.section	.text.xQueuePeek,"ax",%progbits
 3601              		.align	1
 3602              		.global	xQueuePeek
 3603              		.syntax unified
 3604              		.thumb
 3605              		.thumb_func
 3606              		.fpu softvfp
 3608              	xQueuePeek:
 3609              	.LVL305:
 3610              	.LFB22:
1600:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 3611              		.loc 1 1600 1 is_stmt 1 view -0
 3612              		.cfi_startproc
 3613              		@ args = 0, pretend = 0, frame = 16
 3614              		@ frame_needed = 0, uses_anonymous_args = 0
1600:base/os/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 3615              		.loc 1 1600 1 is_stmt 0 view .LVU1074
 3616 0000 70B5     		push	{r4, r5, r6, lr}
 3617              	.LCFI45:
 3618              		.cfi_def_cfa_offset 16
 3619              		.cfi_offset 4, -16
 3620              		.cfi_offset 5, -12
 3621              		.cfi_offset 6, -8
 3622              		.cfi_offset 14, -4
 3623 0002 84B0     		sub	sp, sp, #16
 3624              	.LCFI46:
 3625              		.cfi_def_cfa_offset 32
 3626 0004 0192     		str	r2, [sp, #4]
1601:base/os/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 3627              		.loc 1 1601 1 is_stmt 1 view .LVU1075
 3628              	.LVL306:
1602:base/os/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
 3629              		.loc 1 1602 1 view .LVU1076
ARM GAS  /tmp/ccw4aonF.s 			page 126


1603:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 3630              		.loc 1 1603 1 view .LVU1077
1604:base/os/FreeRTOS/Source/queue.c **** 
 3631              		.loc 1 1604 1 view .LVU1078
1607:base/os/FreeRTOS/Source/queue.c **** 
 3632              		.loc 1 1607 2 view .LVU1079
 3633 0006 90B1     		cbz	r0, .L283
 3634 0008 0E46     		mov	r6, r1
 3635 000a 0446     		mov	r4, r0
1607:base/os/FreeRTOS/Source/queue.c **** 
 3636              		.loc 1 1607 29 discriminator 2 view .LVU1080
1611:base/os/FreeRTOS/Source/queue.c **** 
 3637              		.loc 1 1611 2 discriminator 2 view .LVU1081
 3638 000c C1B1     		cbz	r1, .L284
 3639              	.L266:
1611:base/os/FreeRTOS/Source/queue.c **** 
 3640              		.loc 1 1611 100 discriminator 8 view .LVU1082
1616:base/os/FreeRTOS/Source/queue.c **** 	}
 3641              		.loc 1 1616 3 discriminator 8 view .LVU1083
 3642 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 3643              	.LVL307:
1616:base/os/FreeRTOS/Source/queue.c **** 	}
 3644              		.loc 1 1616 3 is_stmt 0 discriminator 8 view .LVU1084
 3645 0012 0546     		mov	r5, r0
 3646 0014 00BB     		cbnz	r0, .L281
1616:base/os/FreeRTOS/Source/queue.c **** 	}
 3647              		.loc 1 1616 3 discriminator 2 view .LVU1085
 3648 0016 019B     		ldr	r3, [sp, #4]
 3649 0018 002B     		cmp	r3, #0
 3650 001a 5ED0     		beq	.L270
1616:base/os/FreeRTOS/Source/queue.c **** 	}
 3651              		.loc 1 1616 3 is_stmt 1 view .LVU1086
 3652              	.LBB206:
 3653              	.LBI206:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3654              		.loc 2 191 30 view .LVU1087
 3655              	.LBB207:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3656              		.loc 2 193 1 view .LVU1088
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3657              		.loc 2 195 2 view .LVU1089
 3658              		.syntax unified
 3659              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3660 001c 4FF05003 			mov r3, #80												
 3661 0020 83F31188 		msr basepri, r3											
 3662 0024 BFF36F8F 		isb														
 3663 0028 BFF34F8F 		dsb														
 3664              	
 3665              	@ 0 "" 2
 3666              	.LVL308:
 3667              		.thumb
 3668              		.syntax unified
 3669              	.L269:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3670              		.loc 2 195 2 is_stmt 0 view .LVU1090
 3671              	.LBE207:
 3672              	.LBE206:
ARM GAS  /tmp/ccw4aonF.s 			page 127


1616:base/os/FreeRTOS/Source/queue.c **** 	}
 3673              		.loc 1 1616 3 is_stmt 1 discriminator 3 view .LVU1091
1616:base/os/FreeRTOS/Source/queue.c **** 	}
 3674              		.loc 1 1616 3 discriminator 3 view .LVU1092
 3675 002c FEE7     		b	.L269
 3676              	.LVL309:
 3677              	.L283:
1607:base/os/FreeRTOS/Source/queue.c **** 
 3678              		.loc 1 1607 2 view .LVU1093
 3679              	.LBB208:
 3680              	.LBI208:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3681              		.loc 2 191 30 view .LVU1094
 3682              	.LBB209:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3683              		.loc 2 193 1 view .LVU1095
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3684              		.loc 2 195 2 view .LVU1096
 3685              		.syntax unified
 3686              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3687 002e 4FF05003 			mov r3, #80												
 3688 0032 83F31188 		msr basepri, r3											
 3689 0036 BFF36F8F 		isb														
 3690 003a BFF34F8F 		dsb														
 3691              	
 3692              	@ 0 "" 2
 3693              	.LVL310:
 3694              		.thumb
 3695              		.syntax unified
 3696              	.L265:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3697              		.loc 2 195 2 is_stmt 0 view .LVU1097
 3698              	.LBE209:
 3699              	.LBE208:
1607:base/os/FreeRTOS/Source/queue.c **** 
 3700              		.loc 1 1607 2 is_stmt 1 discriminator 1 view .LVU1098
1607:base/os/FreeRTOS/Source/queue.c **** 
 3701              		.loc 1 1607 2 discriminator 1 view .LVU1099
 3702 003e FEE7     		b	.L265
 3703              	.L284:
1611:base/os/FreeRTOS/Source/queue.c **** 
 3704              		.loc 1 1611 2 is_stmt 0 discriminator 2 view .LVU1100
 3705 0040 036C     		ldr	r3, [r0, #64]
 3706 0042 002B     		cmp	r3, #0
 3707 0044 E3D0     		beq	.L266
1611:base/os/FreeRTOS/Source/queue.c **** 
 3708              		.loc 1 1611 2 is_stmt 1 view .LVU1101
 3709              	.LBB210:
 3710              	.LBI210:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3711              		.loc 2 191 30 view .LVU1102
 3712              	.LBB211:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3713              		.loc 2 193 1 view .LVU1103
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3714              		.loc 2 195 2 view .LVU1104
 3715              		.syntax unified
ARM GAS  /tmp/ccw4aonF.s 			page 128


 3716              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3717 0046 4FF05003 			mov r3, #80												
 3718 004a 83F31188 		msr basepri, r3											
 3719 004e BFF36F8F 		isb														
 3720 0052 BFF34F8F 		dsb														
 3721              	
 3722              	@ 0 "" 2
 3723              	.LVL311:
 3724              		.thumb
 3725              		.syntax unified
 3726              	.L267:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3727              		.loc 2 195 2 is_stmt 0 view .LVU1105
 3728              	.LBE211:
 3729              	.LBE210:
1611:base/os/FreeRTOS/Source/queue.c **** 
 3730              		.loc 1 1611 2 is_stmt 1 discriminator 2 view .LVU1106
1611:base/os/FreeRTOS/Source/queue.c **** 
 3731              		.loc 1 1611 2 discriminator 2 view .LVU1107
 3732 0056 FEE7     		b	.L267
 3733              	.LVL312:
 3734              	.L281:
1611:base/os/FreeRTOS/Source/queue.c **** 
 3735              		.loc 1 1611 2 is_stmt 0 discriminator 2 view .LVU1108
 3736 0058 0025     		movs	r5, #0
 3737 005a 3EE0     		b	.L270
 3738              	.LVL313:
 3739              	.L287:
 3740              	.LBB212:
1638:base/os/FreeRTOS/Source/queue.c **** 
 3741              		.loc 1 1638 5 is_stmt 1 view .LVU1109
1638:base/os/FreeRTOS/Source/queue.c **** 
 3742              		.loc 1 1638 28 is_stmt 0 view .LVU1110
 3743 005c E568     		ldr	r5, [r4, #12]
 3744              	.LVL314:
1640:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 3745              		.loc 1 1640 5 is_stmt 1 view .LVU1111
 3746 005e 3146     		mov	r1, r6
 3747 0060 2046     		mov	r0, r4
 3748 0062 FFF7FEFF 		bl	prvCopyDataFromQueue
 3749              	.LVL315:
1641:base/os/FreeRTOS/Source/queue.c **** 
 3750              		.loc 1 1641 31 view .LVU1112
1644:base/os/FreeRTOS/Source/queue.c **** 
 3751              		.loc 1 1644 5 view .LVU1113
1644:base/os/FreeRTOS/Source/queue.c **** 
 3752              		.loc 1 1644 27 is_stmt 0 view .LVU1114
 3753 0066 E560     		str	r5, [r4, #12]
1648:base/os/FreeRTOS/Source/queue.c **** 				{
 3754              		.loc 1 1648 5 is_stmt 1 view .LVU1115
1648:base/os/FreeRTOS/Source/queue.c **** 				{
 3755              		.loc 1 1648 9 is_stmt 0 view .LVU1116
 3756 0068 636A     		ldr	r3, [r4, #36]
1648:base/os/FreeRTOS/Source/queue.c **** 				{
 3757              		.loc 1 1648 7 view .LVU1117
 3758 006a 23B9     		cbnz	r3, .L285
 3759              	.L272:
ARM GAS  /tmp/ccw4aonF.s 			page 129


1662:base/os/FreeRTOS/Source/queue.c **** 				}
 3760              		.loc 1 1662 30 is_stmt 1 view .LVU1118
1665:base/os/FreeRTOS/Source/queue.c **** 				return pdPASS;
 3761              		.loc 1 1665 5 view .LVU1119
 3762 006c FFF7FEFF 		bl	vPortExitCritical
 3763              	.LVL316:
1666:base/os/FreeRTOS/Source/queue.c **** 			}
 3764              		.loc 1 1666 5 view .LVU1120
1666:base/os/FreeRTOS/Source/queue.c **** 			}
 3765              		.loc 1 1666 12 is_stmt 0 view .LVU1121
 3766 0070 0120     		movs	r0, #1
 3767              	.LVL317:
 3768              	.L263:
1666:base/os/FreeRTOS/Source/queue.c **** 			}
 3769              		.loc 1 1666 12 view .LVU1122
 3770              	.LBE212:
1746:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3771              		.loc 1 1746 1 view .LVU1123
 3772 0072 04B0     		add	sp, sp, #16
 3773              	.LCFI47:
 3774              		.cfi_remember_state
 3775              		.cfi_def_cfa_offset 16
 3776              		@ sp needed
 3777 0074 70BD     		pop	{r4, r5, r6, pc}
 3778              	.LVL318:
 3779              	.L285:
 3780              	.LCFI48:
 3781              		.cfi_restore_state
 3782              	.LBB213:
1650:base/os/FreeRTOS/Source/queue.c **** 					{
 3783              		.loc 1 1650 6 is_stmt 1 view .LVU1124
1650:base/os/FreeRTOS/Source/queue.c **** 					{
 3784              		.loc 1 1650 10 is_stmt 0 view .LVU1125
 3785 0076 04F12400 		add	r0, r4, #36
 3786 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 3787              	.LVL319:
1650:base/os/FreeRTOS/Source/queue.c **** 					{
 3788              		.loc 1 1650 8 view .LVU1126
 3789 007e 0028     		cmp	r0, #0
 3790 0080 F4D0     		beq	.L272
1653:base/os/FreeRTOS/Source/queue.c **** 					}
 3791              		.loc 1 1653 7 is_stmt 1 view .LVU1127
 3792 0082 4FF0E023 		mov	r3, #-536813568
 3793 0086 4FF08052 		mov	r2, #268435456
 3794 008a C3F8042D 		str	r2, [r3, #3332]
1653:base/os/FreeRTOS/Source/queue.c **** 					}
 3795              		.loc 1 1653 7 view .LVU1128
 3796              		.syntax unified
 3797              	@ 1653 "base/os/FreeRTOS/Source/queue.c" 1
 3798 008e BFF34F8F 		dsb
 3799              	@ 0 "" 2
1653:base/os/FreeRTOS/Source/queue.c **** 					}
 3800              		.loc 1 1653 7 view .LVU1129
 3801              	@ 1653 "base/os/FreeRTOS/Source/queue.c" 1
 3802 0092 BFF36F8F 		isb
 3803              	@ 0 "" 2
1653:base/os/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/ccw4aonF.s 			page 130


 3804              		.loc 1 1653 39 view .LVU1130
 3805              		.thumb
 3806              		.syntax unified
 3807 0096 E9E7     		b	.L272
 3808              	.LVL320:
 3809              	.L288:
1674:base/os/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 3810              		.loc 1 1674 6 view .LVU1131
 3811 0098 FFF7FEFF 		bl	vPortExitCritical
 3812              	.LVL321:
1675:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 3813              		.loc 1 1675 39 view .LVU1132
1676:base/os/FreeRTOS/Source/queue.c **** 				}
 3814              		.loc 1 1676 6 view .LVU1133
1676:base/os/FreeRTOS/Source/queue.c **** 				}
 3815              		.loc 1 1676 13 is_stmt 0 view .LVU1134
 3816 009c 0020     		movs	r0, #0
 3817 009e E8E7     		b	.L263
 3818              	.L289:
1683:base/os/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 3819              		.loc 1 1683 6 is_stmt 1 view .LVU1135
 3820 00a0 02A8     		add	r0, sp, #8
 3821 00a2 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3822              	.LVL322:
1684:base/os/FreeRTOS/Source/queue.c **** 				}
 3823              		.loc 1 1684 6 view .LVU1136
1684:base/os/FreeRTOS/Source/queue.c **** 				}
 3824              		.loc 1 1684 20 is_stmt 0 view .LVU1137
 3825 00a6 0125     		movs	r5, #1
 3826 00a8 21E0     		b	.L275
 3827              	.LVL323:
 3828              	.L290:
1684:base/os/FreeRTOS/Source/queue.c **** 				}
 3829              		.loc 1 1684 20 view .LVU1138
 3830              	.LBE213:
1699:base/os/FreeRTOS/Source/queue.c **** 
 3831              		.loc 1 1699 3 is_stmt 1 discriminator 1 view .LVU1139
 3832 00aa 0023     		movs	r3, #0
 3833 00ac 84F84430 		strb	r3, [r4, #68]
 3834 00b0 29E0     		b	.L276
 3835              	.L291:
1699:base/os/FreeRTOS/Source/queue.c **** 
 3836              		.loc 1 1699 3 discriminator 4 view .LVU1140
 3837 00b2 0023     		movs	r3, #0
 3838 00b4 84F84530 		strb	r3, [r4, #69]
 3839 00b8 2BE0     		b	.L277
 3840              	.L279:
1724:base/os/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3841              		.loc 1 1724 5 view .LVU1141
 3842 00ba 2046     		mov	r0, r4
 3843 00bc FFF7FEFF 		bl	prvUnlockQueue
 3844              	.LVL324:
1725:base/os/FreeRTOS/Source/queue.c **** 			}
 3845              		.loc 1 1725 5 view .LVU1142
1725:base/os/FreeRTOS/Source/queue.c **** 			}
 3846              		.loc 1 1725 14 is_stmt 0 view .LVU1143
 3847 00c0 FFF7FEFF 		bl	xTaskResumeAll
ARM GAS  /tmp/ccw4aonF.s 			page 131


 3848              	.LVL325:
 3849 00c4 09E0     		b	.L270
 3850              	.L278:
1732:base/os/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3851              		.loc 1 1732 4 is_stmt 1 view .LVU1144
 3852 00c6 2046     		mov	r0, r4
 3853 00c8 FFF7FEFF 		bl	prvUnlockQueue
 3854              	.LVL326:
1733:base/os/FreeRTOS/Source/queue.c **** 
 3855              		.loc 1 1733 4 view .LVU1145
1733:base/os/FreeRTOS/Source/queue.c **** 
 3856              		.loc 1 1733 13 is_stmt 0 view .LVU1146
 3857 00cc FFF7FEFF 		bl	xTaskResumeAll
 3858              	.LVL327:
1735:base/os/FreeRTOS/Source/queue.c **** 			{
 3859              		.loc 1 1735 4 is_stmt 1 view .LVU1147
1735:base/os/FreeRTOS/Source/queue.c **** 			{
 3860              		.loc 1 1735 8 is_stmt 0 view .LVU1148
 3861 00d0 2046     		mov	r0, r4
 3862 00d2 FFF7FEFF 		bl	prvIsQueueEmpty
 3863              	.LVL328:
1735:base/os/FreeRTOS/Source/queue.c **** 			{
 3864              		.loc 1 1735 6 view .LVU1149
 3865 00d6 0028     		cmp	r0, #0
 3866 00d8 3FD1     		bne	.L286
 3867              	.LVL329:
 3868              	.L270:
1616:base/os/FreeRTOS/Source/queue.c **** 	}
 3869              		.loc 1 1616 104 is_stmt 1 discriminator 8 view .LVU1150
1625:base/os/FreeRTOS/Source/queue.c **** 	{
 3870              		.loc 1 1625 2 discriminator 8 view .LVU1151
1627:base/os/FreeRTOS/Source/queue.c **** 		{
 3871              		.loc 1 1627 3 discriminator 8 view .LVU1152
 3872 00da FFF7FEFF 		bl	vPortEnterCritical
 3873              	.LVL330:
 3874              	.LBB214:
1629:base/os/FreeRTOS/Source/queue.c **** 
 3875              		.loc 1 1629 4 discriminator 8 view .LVU1153
1629:base/os/FreeRTOS/Source/queue.c **** 
 3876              		.loc 1 1629 22 is_stmt 0 discriminator 8 view .LVU1154
 3877 00de A36B     		ldr	r3, [r4, #56]
 3878              	.LVL331:
1633:base/os/FreeRTOS/Source/queue.c **** 			{
 3879              		.loc 1 1633 4 is_stmt 1 discriminator 8 view .LVU1155
1633:base/os/FreeRTOS/Source/queue.c **** 			{
 3880              		.loc 1 1633 6 is_stmt 0 discriminator 8 view .LVU1156
 3881 00e0 002B     		cmp	r3, #0
 3882 00e2 BBD1     		bne	.L287
1670:base/os/FreeRTOS/Source/queue.c **** 				{
 3883              		.loc 1 1670 5 is_stmt 1 view .LVU1157
1670:base/os/FreeRTOS/Source/queue.c **** 				{
 3884              		.loc 1 1670 22 is_stmt 0 view .LVU1158
 3885 00e4 019B     		ldr	r3, [sp, #4]
 3886              	.LVL332:
1670:base/os/FreeRTOS/Source/queue.c **** 				{
 3887              		.loc 1 1670 7 view .LVU1159
 3888 00e6 002B     		cmp	r3, #0
ARM GAS  /tmp/ccw4aonF.s 			page 132


 3889 00e8 D6D0     		beq	.L288
1678:base/os/FreeRTOS/Source/queue.c **** 				{
 3890              		.loc 1 1678 10 is_stmt 1 view .LVU1160
1678:base/os/FreeRTOS/Source/queue.c **** 				{
 3891              		.loc 1 1678 12 is_stmt 0 view .LVU1161
 3892 00ea 002D     		cmp	r5, #0
 3893 00ec D8D0     		beq	.L289
 3894              	.LVL333:
 3895              	.L275:
1689:base/os/FreeRTOS/Source/queue.c **** 				}
 3896              		.loc 1 1689 30 is_stmt 1 view .LVU1162
 3897              	.LBE214:
1693:base/os/FreeRTOS/Source/queue.c **** 
 3898              		.loc 1 1693 3 view .LVU1163
 3899 00ee FFF7FEFF 		bl	vPortExitCritical
 3900              	.LVL334:
1698:base/os/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 3901              		.loc 1 1698 3 view .LVU1164
 3902 00f2 FFF7FEFF 		bl	vTaskSuspendAll
 3903              	.LVL335:
1699:base/os/FreeRTOS/Source/queue.c **** 
 3904              		.loc 1 1699 3 view .LVU1165
 3905 00f6 FFF7FEFF 		bl	vPortEnterCritical
 3906              	.LVL336:
1699:base/os/FreeRTOS/Source/queue.c **** 
 3907              		.loc 1 1699 3 view .LVU1166
 3908 00fa 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3909 00fe 5BB2     		sxtb	r3, r3
 3910 0100 B3F1FF3F 		cmp	r3, #-1
 3911 0104 D1D0     		beq	.L290
 3912              	.L276:
1699:base/os/FreeRTOS/Source/queue.c **** 
 3913              		.loc 1 1699 3 discriminator 3 view .LVU1167
 3914 0106 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3915 010a 5BB2     		sxtb	r3, r3
 3916 010c B3F1FF3F 		cmp	r3, #-1
 3917 0110 CFD0     		beq	.L291
 3918              	.L277:
1699:base/os/FreeRTOS/Source/queue.c **** 
 3919              		.loc 1 1699 3 discriminator 6 view .LVU1168
 3920 0112 FFF7FEFF 		bl	vPortExitCritical
 3921              	.LVL337:
1702:base/os/FreeRTOS/Source/queue.c **** 		{
 3922              		.loc 1 1702 3 discriminator 6 view .LVU1169
1702:base/os/FreeRTOS/Source/queue.c **** 		{
 3923              		.loc 1 1702 7 is_stmt 0 discriminator 6 view .LVU1170
 3924 0116 01A9     		add	r1, sp, #4
 3925 0118 02A8     		add	r0, sp, #8
 3926 011a FFF7FEFF 		bl	xTaskCheckForTimeOut
 3927              	.LVL338:
1702:base/os/FreeRTOS/Source/queue.c **** 		{
 3928              		.loc 1 1702 5 discriminator 6 view .LVU1171
 3929 011e 0028     		cmp	r0, #0
 3930 0120 D1D1     		bne	.L278
1706:base/os/FreeRTOS/Source/queue.c **** 			{
 3931              		.loc 1 1706 4 is_stmt 1 view .LVU1172
1706:base/os/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccw4aonF.s 			page 133


 3932              		.loc 1 1706 8 is_stmt 0 view .LVU1173
 3933 0122 2046     		mov	r0, r4
 3934 0124 FFF7FEFF 		bl	prvIsQueueEmpty
 3935              	.LVL339:
1706:base/os/FreeRTOS/Source/queue.c **** 			{
 3936              		.loc 1 1706 6 view .LVU1174
 3937 0128 0028     		cmp	r0, #0
 3938 012a C6D0     		beq	.L279
1708:base/os/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 3939              		.loc 1 1708 43 is_stmt 1 view .LVU1175
1709:base/os/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3940              		.loc 1 1709 5 view .LVU1176
 3941 012c 0199     		ldr	r1, [sp, #4]
 3942 012e 04F12400 		add	r0, r4, #36
 3943 0132 FFF7FEFF 		bl	vTaskPlaceOnEventList
 3944              	.LVL340:
1710:base/os/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3945              		.loc 1 1710 5 view .LVU1177
 3946 0136 2046     		mov	r0, r4
 3947 0138 FFF7FEFF 		bl	prvUnlockQueue
 3948              	.LVL341:
1711:base/os/FreeRTOS/Source/queue.c **** 				{
 3949              		.loc 1 1711 5 view .LVU1178
1711:base/os/FreeRTOS/Source/queue.c **** 				{
 3950              		.loc 1 1711 9 is_stmt 0 view .LVU1179
 3951 013c FFF7FEFF 		bl	xTaskResumeAll
 3952              	.LVL342:
1711:base/os/FreeRTOS/Source/queue.c **** 				{
 3953              		.loc 1 1711 7 view .LVU1180
 3954 0140 0028     		cmp	r0, #0
 3955 0142 CAD1     		bne	.L270
1713:base/os/FreeRTOS/Source/queue.c **** 				}
 3956              		.loc 1 1713 6 is_stmt 1 view .LVU1181
 3957 0144 4FF0E023 		mov	r3, #-536813568
 3958 0148 4FF08052 		mov	r2, #268435456
 3959 014c C3F8042D 		str	r2, [r3, #3332]
1713:base/os/FreeRTOS/Source/queue.c **** 				}
 3960              		.loc 1 1713 6 view .LVU1182
 3961              		.syntax unified
 3962              	@ 1713 "base/os/FreeRTOS/Source/queue.c" 1
 3963 0150 BFF34F8F 		dsb
 3964              	@ 0 "" 2
1713:base/os/FreeRTOS/Source/queue.c **** 				}
 3965              		.loc 1 1713 6 view .LVU1183
 3966              	@ 1713 "base/os/FreeRTOS/Source/queue.c" 1
 3967 0154 BFF36F8F 		isb
 3968              	@ 0 "" 2
1713:base/os/FreeRTOS/Source/queue.c **** 				}
 3969              		.loc 1 1713 28 view .LVU1184
 3970              		.thumb
 3971              		.syntax unified
 3972 0158 BFE7     		b	.L270
 3973              	.L286:
1738:base/os/FreeRTOS/Source/queue.c **** 			}
 3974              		.loc 1 1738 12 is_stmt 0 view .LVU1185
 3975 015a 0020     		movs	r0, #0
 3976 015c 89E7     		b	.L263
ARM GAS  /tmp/ccw4aonF.s 			page 134


 3977              		.cfi_endproc
 3978              	.LFE22:
 3980              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3981              		.align	1
 3982              		.global	xQueueReceiveFromISR
 3983              		.syntax unified
 3984              		.thumb
 3985              		.thumb_func
 3986              		.fpu softvfp
 3988              	xQueueReceiveFromISR:
 3989              	.LVL343:
 3990              	.LFB23:
1750:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3991              		.loc 1 1750 1 is_stmt 1 view -0
 3992              		.cfi_startproc
 3993              		@ args = 0, pretend = 0, frame = 0
 3994              		@ frame_needed = 0, uses_anonymous_args = 0
1750:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3995              		.loc 1 1750 1 is_stmt 0 view .LVU1187
 3996 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3997              	.LCFI49:
 3998              		.cfi_def_cfa_offset 32
 3999              		.cfi_offset 3, -32
 4000              		.cfi_offset 4, -28
 4001              		.cfi_offset 5, -24
 4002              		.cfi_offset 6, -20
 4003              		.cfi_offset 7, -16
 4004              		.cfi_offset 8, -12
 4005              		.cfi_offset 9, -8
 4006              		.cfi_offset 14, -4
1751:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 4007              		.loc 1 1751 1 is_stmt 1 view .LVU1188
1752:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 4008              		.loc 1 1752 1 view .LVU1189
1753:base/os/FreeRTOS/Source/queue.c **** 
 4009              		.loc 1 1753 1 view .LVU1190
 4010              	.LVL344:
1755:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4011              		.loc 1 1755 2 view .LVU1191
 4012 0004 B0B1     		cbz	r0, .L304
 4013 0006 0D46     		mov	r5, r1
 4014 0008 9046     		mov	r8, r2
 4015 000a 0446     		mov	r4, r0
1755:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4016              		.loc 1 1755 25 discriminator 2 view .LVU1192
1756:base/os/FreeRTOS/Source/queue.c **** 
 4017              		.loc 1 1756 2 discriminator 2 view .LVU1193
 4018 000c D9B1     		cbz	r1, .L305
 4019              	.L295:
1756:base/os/FreeRTOS/Source/queue.c **** 
 4020              		.loc 1 1756 92 discriminator 8 view .LVU1194
1772:base/os/FreeRTOS/Source/queue.c **** 
 4021              		.loc 1 1772 2 discriminator 8 view .LVU1195
 4022 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 4023              	.LVL345:
1774:base/os/FreeRTOS/Source/queue.c **** 	{
 4024              		.loc 1 1774 2 discriminator 8 view .LVU1196
ARM GAS  /tmp/ccw4aonF.s 			page 135


 4025              	.LBB215:
 4026              	.LBI215:
 207:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4027              		.loc 2 207 34 discriminator 8 view .LVU1197
 4028              	.LBB216:
 209:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4029              		.loc 2 209 1 discriminator 8 view .LVU1198
 211:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4030              		.loc 2 211 2 discriminator 8 view .LVU1199
 4031              		.syntax unified
 4032              	@ 211 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4033 0012 EFF31187 			mrs r7, basepri											
 4034 0016 4FF05003 		mov r3, #80												
 4035 001a 83F31188 		msr basepri, r3											
 4036 001e BFF36F8F 		isb														
 4037 0022 BFF34F8F 		dsb														
 4038              	
 4039              	@ 0 "" 2
 4040              	.LVL346:
 223:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 4041              		.loc 2 223 2 discriminator 8 view .LVU1200
 223:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 4042              		.loc 2 223 2 is_stmt 0 discriminator 8 view .LVU1201
 4043              		.thumb
 4044              		.syntax unified
 4045              	.LBE216:
 4046              	.LBE215:
 4047              	.LBB217:
1776:base/os/FreeRTOS/Source/queue.c **** 
 4048              		.loc 1 1776 3 is_stmt 1 discriminator 8 view .LVU1202
1776:base/os/FreeRTOS/Source/queue.c **** 
 4049              		.loc 1 1776 21 is_stmt 0 discriminator 8 view .LVU1203
 4050 0026 A66B     		ldr	r6, [r4, #56]
 4051              	.LVL347:
1779:base/os/FreeRTOS/Source/queue.c **** 		{
 4052              		.loc 1 1779 3 is_stmt 1 discriminator 8 view .LVU1204
1779:base/os/FreeRTOS/Source/queue.c **** 		{
 4053              		.loc 1 1779 5 is_stmt 0 discriminator 8 view .LVU1205
 4054 0028 CEB9     		cbnz	r6, .L306
1830:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 4055              		.loc 1 1830 12 view .LVU1206
 4056 002a 0020     		movs	r0, #0
 4057              	.L297:
 4058              	.LVL348:
1831:base/os/FreeRTOS/Source/queue.c **** 		}
 4059              		.loc 1 1831 49 is_stmt 1 view .LVU1207
 4060              	.LBE217:
1834:base/os/FreeRTOS/Source/queue.c **** 
 4061              		.loc 1 1834 2 view .LVU1208
 4062              	.LBB219:
 4063              	.LBI219:
 227:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4064              		.loc 2 227 30 view .LVU1209
 4065              	.LBB220:
 4066              		.loc 2 229 2 view .LVU1210
 4067              		.syntax unified
 4068              	@ 229 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  /tmp/ccw4aonF.s 			page 136


 4069 002c 87F31188 			msr basepri, r7	
 4070              	@ 0 "" 2
 4071              		.thumb
 4072              		.syntax unified
 4073              	.LBE220:
 4074              	.LBE219:
1836:base/os/FreeRTOS/Source/queue.c **** }
 4075              		.loc 1 1836 2 view .LVU1211
1837:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4076              		.loc 1 1837 1 is_stmt 0 view .LVU1212
 4077 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4078              	.LVL349:
 4079              	.L304:
1755:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4080              		.loc 1 1755 2 is_stmt 1 view .LVU1213
 4081              	.LBB221:
 4082              	.LBI221:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4083              		.loc 2 191 30 view .LVU1214
 4084              	.LBB222:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4085              		.loc 2 193 1 view .LVU1215
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4086              		.loc 2 195 2 view .LVU1216
 4087              		.syntax unified
 4088              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4089 0034 4FF05003 			mov r3, #80												
 4090 0038 83F31188 		msr basepri, r3											
 4091 003c BFF36F8F 		isb														
 4092 0040 BFF34F8F 		dsb														
 4093              	
 4094              	@ 0 "" 2
 4095              	.LVL350:
 4096              		.thumb
 4097              		.syntax unified
 4098              	.L294:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4099              		.loc 2 195 2 is_stmt 0 view .LVU1217
 4100              	.LBE222:
 4101              	.LBE221:
1755:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4102              		.loc 1 1755 2 is_stmt 1 discriminator 1 view .LVU1218
1755:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4103              		.loc 1 1755 2 discriminator 1 view .LVU1219
 4104 0044 FEE7     		b	.L294
 4105              	.L305:
1756:base/os/FreeRTOS/Source/queue.c **** 
 4106              		.loc 1 1756 2 is_stmt 0 discriminator 2 view .LVU1220
 4107 0046 036C     		ldr	r3, [r0, #64]
 4108 0048 002B     		cmp	r3, #0
 4109 004a E0D0     		beq	.L295
1756:base/os/FreeRTOS/Source/queue.c **** 
 4110              		.loc 1 1756 2 is_stmt 1 view .LVU1221
 4111              	.LBB223:
 4112              	.LBI223:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4113              		.loc 2 191 30 view .LVU1222
ARM GAS  /tmp/ccw4aonF.s 			page 137


 4114              	.LBB224:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4115              		.loc 2 193 1 view .LVU1223
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4116              		.loc 2 195 2 view .LVU1224
 4117              		.syntax unified
 4118              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4119 004c 4FF05003 			mov r3, #80												
 4120 0050 83F31188 		msr basepri, r3											
 4121 0054 BFF36F8F 		isb														
 4122 0058 BFF34F8F 		dsb														
 4123              	
 4124              	@ 0 "" 2
 4125              	.LVL351:
 4126              		.thumb
 4127              		.syntax unified
 4128              	.L296:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4129              		.loc 2 195 2 is_stmt 0 view .LVU1225
 4130              	.LBE224:
 4131              	.LBE223:
1756:base/os/FreeRTOS/Source/queue.c **** 
 4132              		.loc 1 1756 2 is_stmt 1 discriminator 2 view .LVU1226
1756:base/os/FreeRTOS/Source/queue.c **** 
 4133              		.loc 1 1756 2 discriminator 2 view .LVU1227
 4134 005c FEE7     		b	.L296
 4135              	.LVL352:
 4136              	.L306:
 4137              	.LBB225:
 4138              	.LBB218:
1781:base/os/FreeRTOS/Source/queue.c **** 
 4139              		.loc 1 1781 4 view .LVU1228
1781:base/os/FreeRTOS/Source/queue.c **** 
 4140              		.loc 1 1781 17 is_stmt 0 view .LVU1229
 4141 005e 94F84490 		ldrb	r9, [r4, #68]	@ zero_extendqisi2
 4142 0062 4FFA89F9 		sxtb	r9, r9
 4143              	.LVL353:
1783:base/os/FreeRTOS/Source/queue.c **** 
 4144              		.loc 1 1783 42 is_stmt 1 view .LVU1230
1785:base/os/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 4145              		.loc 1 1785 4 view .LVU1231
 4146 0066 2946     		mov	r1, r5
 4147 0068 2046     		mov	r0, r4
 4148 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 4149              	.LVL354:
1786:base/os/FreeRTOS/Source/queue.c **** 
 4150              		.loc 1 1786 4 view .LVU1232
1786:base/os/FreeRTOS/Source/queue.c **** 
 4151              		.loc 1 1786 51 is_stmt 0 view .LVU1233
 4152 006e 731E     		subs	r3, r6, #1
1786:base/os/FreeRTOS/Source/queue.c **** 
 4153              		.loc 1 1786 31 view .LVU1234
 4154 0070 A363     		str	r3, [r4, #56]
1792:base/os/FreeRTOS/Source/queue.c **** 			{
 4155              		.loc 1 1792 4 is_stmt 1 view .LVU1235
1792:base/os/FreeRTOS/Source/queue.c **** 			{
 4156              		.loc 1 1792 6 is_stmt 0 view .LVU1236
ARM GAS  /tmp/ccw4aonF.s 			page 138


 4157 0072 B9F1FF3F 		cmp	r9, #-1
 4158 0076 06D0     		beq	.L307
1823:base/os/FreeRTOS/Source/queue.c **** 			}
 4159              		.loc 1 1823 5 is_stmt 1 view .LVU1237
1823:base/os/FreeRTOS/Source/queue.c **** 			}
 4160              		.loc 1 1823 45 is_stmt 0 view .LVU1238
 4161 0078 09F10103 		add	r3, r9, #1
1823:base/os/FreeRTOS/Source/queue.c **** 			}
 4162              		.loc 1 1823 24 view .LVU1239
 4163 007c 5BB2     		sxtb	r3, r3
1823:base/os/FreeRTOS/Source/queue.c **** 			}
 4164              		.loc 1 1823 22 view .LVU1240
 4165 007e 84F84430 		strb	r3, [r4, #68]
1826:base/os/FreeRTOS/Source/queue.c **** 		}
 4166              		.loc 1 1826 12 view .LVU1241
 4167 0082 0120     		movs	r0, #1
 4168 0084 D2E7     		b	.L297
 4169              	.L307:
1794:base/os/FreeRTOS/Source/queue.c **** 				{
 4170              		.loc 1 1794 5 is_stmt 1 view .LVU1242
1794:base/os/FreeRTOS/Source/queue.c **** 				{
 4171              		.loc 1 1794 9 is_stmt 0 view .LVU1243
 4172 0086 2369     		ldr	r3, [r4, #16]
1794:base/os/FreeRTOS/Source/queue.c **** 				{
 4173              		.loc 1 1794 7 view .LVU1244
 4174 0088 0BB9     		cbnz	r3, .L308
1826:base/os/FreeRTOS/Source/queue.c **** 		}
 4175              		.loc 1 1826 12 view .LVU1245
 4176 008a 0120     		movs	r0, #1
 4177 008c CEE7     		b	.L297
 4178              	.L308:
1796:base/os/FreeRTOS/Source/queue.c **** 					{
 4179              		.loc 1 1796 6 is_stmt 1 view .LVU1246
1796:base/os/FreeRTOS/Source/queue.c **** 					{
 4180              		.loc 1 1796 10 is_stmt 0 view .LVU1247
 4181 008e 04F11000 		add	r0, r4, #16
 4182 0092 FFF7FEFF 		bl	xTaskRemoveFromEventList
 4183              	.LVL355:
1796:base/os/FreeRTOS/Source/queue.c **** 					{
 4184              		.loc 1 1796 8 view .LVU1248
 4185 0096 30B1     		cbz	r0, .L301
1800:base/os/FreeRTOS/Source/queue.c **** 						{
 4186              		.loc 1 1800 7 is_stmt 1 view .LVU1249
1800:base/os/FreeRTOS/Source/queue.c **** 						{
 4187              		.loc 1 1800 9 is_stmt 0 view .LVU1250
 4188 0098 B8F1000F 		cmp	r8, #0
 4189 009c 05D0     		beq	.L302
1802:base/os/FreeRTOS/Source/queue.c **** 						}
 4190              		.loc 1 1802 8 is_stmt 1 view .LVU1251
1802:base/os/FreeRTOS/Source/queue.c **** 						}
 4191              		.loc 1 1802 35 is_stmt 0 view .LVU1252
 4192 009e 0120     		movs	r0, #1
 4193 00a0 C8F80000 		str	r0, [r8]
 4194 00a4 C2E7     		b	.L297
 4195              	.L301:
1826:base/os/FreeRTOS/Source/queue.c **** 		}
 4196              		.loc 1 1826 12 view .LVU1253
ARM GAS  /tmp/ccw4aonF.s 			page 139


 4197 00a6 0120     		movs	r0, #1
 4198 00a8 C0E7     		b	.L297
 4199              	.L302:
 4200 00aa 0120     		movs	r0, #1
 4201 00ac BEE7     		b	.L297
 4202              	.LBE218:
 4203              	.LBE225:
 4204              		.cfi_endproc
 4205              	.LFE23:
 4207              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 4208              		.align	1
 4209              		.global	xQueuePeekFromISR
 4210              		.syntax unified
 4211              		.thumb
 4212              		.thumb_func
 4213              		.fpu softvfp
 4215              	xQueuePeekFromISR:
 4216              	.LVL356:
 4217              	.LFB24:
1841:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 4218              		.loc 1 1841 1 is_stmt 1 view -0
 4219              		.cfi_startproc
 4220              		@ args = 0, pretend = 0, frame = 0
 4221              		@ frame_needed = 0, uses_anonymous_args = 0
1841:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 4222              		.loc 1 1841 1 is_stmt 0 view .LVU1255
 4223 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4224              	.LCFI50:
 4225              		.cfi_def_cfa_offset 24
 4226              		.cfi_offset 3, -24
 4227              		.cfi_offset 4, -20
 4228              		.cfi_offset 5, -16
 4229              		.cfi_offset 6, -12
 4230              		.cfi_offset 7, -8
 4231              		.cfi_offset 14, -4
1842:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 4232              		.loc 1 1842 1 is_stmt 1 view .LVU1256
1843:base/os/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
 4233              		.loc 1 1843 1 view .LVU1257
1844:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 4234              		.loc 1 1844 1 view .LVU1258
1845:base/os/FreeRTOS/Source/queue.c **** 
 4235              		.loc 1 1845 1 view .LVU1259
 4236              	.LVL357:
1847:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4237              		.loc 1 1847 2 view .LVU1260
 4238 0002 68B1     		cbz	r0, .L319
 4239 0004 0D46     		mov	r5, r1
 4240 0006 0446     		mov	r4, r0
1847:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4241              		.loc 1 1847 25 discriminator 2 view .LVU1261
1848:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4242              		.loc 1 1848 2 discriminator 2 view .LVU1262
 4243 0008 99B1     		cbz	r1, .L320
 4244              	.L312:
1848:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4245              		.loc 1 1848 92 discriminator 8 view .LVU1263
ARM GAS  /tmp/ccw4aonF.s 			page 140


1849:base/os/FreeRTOS/Source/queue.c **** 
 4246              		.loc 1 1849 2 discriminator 8 view .LVU1264
 4247 000a 236C     		ldr	r3, [r4, #64]
 4248 000c EBB9     		cbnz	r3, .L314
1849:base/os/FreeRTOS/Source/queue.c **** 
 4249              		.loc 1 1849 2 view .LVU1265
 4250              	.LBB226:
 4251              	.LBI226:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4252              		.loc 2 191 30 view .LVU1266
 4253              	.LBB227:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4254              		.loc 2 193 1 view .LVU1267
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4255              		.loc 2 195 2 view .LVU1268
 4256              		.syntax unified
 4257              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4258 000e 4FF05003 			mov r3, #80												
 4259 0012 83F31188 		msr basepri, r3											
 4260 0016 BFF36F8F 		isb														
 4261 001a BFF34F8F 		dsb														
 4262              	
 4263              	@ 0 "" 2
 4264              	.LVL358:
 4265              		.thumb
 4266              		.syntax unified
 4267              	.L315:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4268              		.loc 2 195 2 is_stmt 0 view .LVU1269
 4269              	.LBE227:
 4270              	.LBE226:
1849:base/os/FreeRTOS/Source/queue.c **** 
 4271              		.loc 1 1849 2 is_stmt 1 discriminator 3 view .LVU1270
1849:base/os/FreeRTOS/Source/queue.c **** 
 4272              		.loc 1 1849 2 discriminator 3 view .LVU1271
 4273 001e FEE7     		b	.L315
 4274              	.L319:
1847:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4275              		.loc 1 1847 2 view .LVU1272
 4276              	.LBB228:
 4277              	.LBI228:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4278              		.loc 2 191 30 view .LVU1273
 4279              	.LBB229:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4280              		.loc 2 193 1 view .LVU1274
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4281              		.loc 2 195 2 view .LVU1275
 4282              		.syntax unified
 4283              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4284 0020 4FF05003 			mov r3, #80												
 4285 0024 83F31188 		msr basepri, r3											
 4286 0028 BFF36F8F 		isb														
 4287 002c BFF34F8F 		dsb														
 4288              	
 4289              	@ 0 "" 2
 4290              	.LVL359:
ARM GAS  /tmp/ccw4aonF.s 			page 141


 4291              		.thumb
 4292              		.syntax unified
 4293              	.L311:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4294              		.loc 2 195 2 is_stmt 0 view .LVU1276
 4295              	.LBE229:
 4296              	.LBE228:
1847:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4297              		.loc 1 1847 2 is_stmt 1 discriminator 1 view .LVU1277
1847:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 4298              		.loc 1 1847 2 discriminator 1 view .LVU1278
 4299 0030 FEE7     		b	.L311
 4300              	.L320:
1848:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4301              		.loc 1 1848 2 is_stmt 0 discriminator 2 view .LVU1279
 4302 0032 036C     		ldr	r3, [r0, #64]
 4303 0034 002B     		cmp	r3, #0
 4304 0036 E8D0     		beq	.L312
1848:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4305              		.loc 1 1848 2 is_stmt 1 view .LVU1280
 4306              	.LBB230:
 4307              	.LBI230:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4308              		.loc 2 191 30 view .LVU1281
 4309              	.LBB231:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4310              		.loc 2 193 1 view .LVU1282
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4311              		.loc 2 195 2 view .LVU1283
 4312              		.syntax unified
 4313              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4314 0038 4FF05003 			mov r3, #80												
 4315 003c 83F31188 		msr basepri, r3											
 4316 0040 BFF36F8F 		isb														
 4317 0044 BFF34F8F 		dsb														
 4318              	
 4319              	@ 0 "" 2
 4320              	.LVL360:
 4321              		.thumb
 4322              		.syntax unified
 4323              	.L313:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4324              		.loc 2 195 2 is_stmt 0 view .LVU1284
 4325              	.LBE231:
 4326              	.LBE230:
1848:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4327              		.loc 1 1848 2 is_stmt 1 discriminator 2 view .LVU1285
1848:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4328              		.loc 1 1848 2 discriminator 2 view .LVU1286
 4329 0048 FEE7     		b	.L313
 4330              	.L314:
1849:base/os/FreeRTOS/Source/queue.c **** 
 4331              		.loc 1 1849 42 discriminator 2 view .LVU1287
1865:base/os/FreeRTOS/Source/queue.c **** 
 4332              		.loc 1 1865 2 discriminator 2 view .LVU1288
 4333 004a FFF7FEFF 		bl	vPortValidateInterruptPriority
 4334              	.LVL361:
ARM GAS  /tmp/ccw4aonF.s 			page 142


1867:base/os/FreeRTOS/Source/queue.c **** 	{
 4335              		.loc 1 1867 2 discriminator 2 view .LVU1289
 4336              	.LBB232:
 4337              	.LBI232:
 207:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4338              		.loc 2 207 34 discriminator 2 view .LVU1290
 4339              	.LBB233:
 209:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4340              		.loc 2 209 1 discriminator 2 view .LVU1291
 211:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4341              		.loc 2 211 2 discriminator 2 view .LVU1292
 4342              		.syntax unified
 4343              	@ 211 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4344 004e EFF31186 			mrs r6, basepri											
 4345 0052 4FF05003 		mov r3, #80												
 4346 0056 83F31188 		msr basepri, r3											
 4347 005a BFF36F8F 		isb														
 4348 005e BFF34F8F 		dsb														
 4349              	
 4350              	@ 0 "" 2
 4351              	.LVL362:
 223:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 4352              		.loc 2 223 2 discriminator 2 view .LVU1293
 223:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 4353              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1294
 4354              		.thumb
 4355              		.syntax unified
 4356              	.LBE233:
 4357              	.LBE232:
1870:base/os/FreeRTOS/Source/queue.c **** 		{
 4358              		.loc 1 1870 3 is_stmt 1 discriminator 2 view .LVU1295
1870:base/os/FreeRTOS/Source/queue.c **** 		{
 4359              		.loc 1 1870 14 is_stmt 0 discriminator 2 view .LVU1296
 4360 0062 A36B     		ldr	r3, [r4, #56]
1870:base/os/FreeRTOS/Source/queue.c **** 		{
 4361              		.loc 1 1870 5 discriminator 2 view .LVU1297
 4362 0064 1BB9     		cbnz	r3, .L321
1884:base/os/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 4363              		.loc 1 1884 12 view .LVU1298
 4364 0066 0020     		movs	r0, #0
 4365              	.L316:
 4366              	.LVL363:
1885:base/os/FreeRTOS/Source/queue.c **** 		}
 4367              		.loc 1 1885 46 is_stmt 1 view .LVU1299
1888:base/os/FreeRTOS/Source/queue.c **** 
 4368              		.loc 1 1888 2 view .LVU1300
 4369              	.LBB234:
 4370              	.LBI234:
 227:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4371              		.loc 2 227 30 view .LVU1301
 4372              	.LBB235:
 4373              		.loc 2 229 2 view .LVU1302
 4374              		.syntax unified
 4375              	@ 229 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4376 0068 86F31188 			msr basepri, r6	
 4377              	@ 0 "" 2
 4378              		.thumb
ARM GAS  /tmp/ccw4aonF.s 			page 143


 4379              		.syntax unified
 4380              	.LBE235:
 4381              	.LBE234:
1890:base/os/FreeRTOS/Source/queue.c **** }
 4382              		.loc 1 1890 2 view .LVU1303
1891:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4383              		.loc 1 1891 1 is_stmt 0 view .LVU1304
 4384 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4385              	.LVL364:
 4386              	.L321:
1872:base/os/FreeRTOS/Source/queue.c **** 
 4387              		.loc 1 1872 39 is_stmt 1 view .LVU1305
1876:base/os/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 4388              		.loc 1 1876 4 view .LVU1306
1876:base/os/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 4389              		.loc 1 1876 27 is_stmt 0 view .LVU1307
 4390 006e E768     		ldr	r7, [r4, #12]
 4391              	.LVL365:
1877:base/os/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 4392              		.loc 1 1877 4 is_stmt 1 view .LVU1308
 4393 0070 2946     		mov	r1, r5
 4394 0072 2046     		mov	r0, r4
 4395 0074 FFF7FEFF 		bl	prvCopyDataFromQueue
 4396              	.LVL366:
1878:base/os/FreeRTOS/Source/queue.c **** 
 4397              		.loc 1 1878 4 view .LVU1309
1878:base/os/FreeRTOS/Source/queue.c **** 
 4398              		.loc 1 1878 26 is_stmt 0 view .LVU1310
 4399 0078 E760     		str	r7, [r4, #12]
1880:base/os/FreeRTOS/Source/queue.c **** 		}
 4400              		.loc 1 1880 4 is_stmt 1 view .LVU1311
 4401              	.LVL367:
1880:base/os/FreeRTOS/Source/queue.c **** 		}
 4402              		.loc 1 1880 12 is_stmt 0 view .LVU1312
 4403 007a 0120     		movs	r0, #1
 4404 007c F4E7     		b	.L316
 4405              		.cfi_endproc
 4406              	.LFE24:
 4408              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 4409              		.align	1
 4410              		.global	uxQueueMessagesWaiting
 4411              		.syntax unified
 4412              		.thumb
 4413              		.thumb_func
 4414              		.fpu softvfp
 4416              	uxQueueMessagesWaiting:
 4417              	.LVL368:
 4418              	.LFB25:
1895:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 4419              		.loc 1 1895 1 is_stmt 1 view -0
 4420              		.cfi_startproc
 4421              		@ args = 0, pretend = 0, frame = 0
 4422              		@ frame_needed = 0, uses_anonymous_args = 0
1896:base/os/FreeRTOS/Source/queue.c **** 
 4423              		.loc 1 1896 1 view .LVU1314
1898:base/os/FreeRTOS/Source/queue.c **** 
 4424              		.loc 1 1898 2 view .LVU1315
ARM GAS  /tmp/ccw4aonF.s 			page 144


 4425 0000 40B1     		cbz	r0, .L327
1895:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 4426              		.loc 1 1895 1 is_stmt 0 discriminator 2 view .LVU1316
 4427 0002 10B5     		push	{r4, lr}
 4428              	.LCFI51:
 4429              		.cfi_def_cfa_offset 8
 4430              		.cfi_offset 4, -8
 4431              		.cfi_offset 14, -4
 4432 0004 0446     		mov	r4, r0
1898:base/os/FreeRTOS/Source/queue.c **** 
 4433              		.loc 1 1898 24 is_stmt 1 discriminator 2 view .LVU1317
1900:base/os/FreeRTOS/Source/queue.c **** 	{
 4434              		.loc 1 1900 2 discriminator 2 view .LVU1318
 4435 0006 FFF7FEFF 		bl	vPortEnterCritical
 4436              	.LVL369:
1902:base/os/FreeRTOS/Source/queue.c **** 	}
 4437              		.loc 1 1902 3 discriminator 2 view .LVU1319
1902:base/os/FreeRTOS/Source/queue.c **** 	}
 4438              		.loc 1 1902 12 is_stmt 0 discriminator 2 view .LVU1320
 4439 000a A46B     		ldr	r4, [r4, #56]
 4440              	.LVL370:
1904:base/os/FreeRTOS/Source/queue.c **** 
 4441              		.loc 1 1904 2 is_stmt 1 discriminator 2 view .LVU1321
 4442 000c FFF7FEFF 		bl	vPortExitCritical
 4443              	.LVL371:
1906:base/os/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4444              		.loc 1 1906 2 discriminator 2 view .LVU1322
1907:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4445              		.loc 1 1907 1 is_stmt 0 discriminator 2 view .LVU1323
 4446 0010 2046     		mov	r0, r4
 4447 0012 10BD     		pop	{r4, pc}
 4448              	.LVL372:
 4449              	.L327:
 4450              	.LCFI52:
 4451              		.cfi_def_cfa_offset 0
 4452              		.cfi_restore 4
 4453              		.cfi_restore 14
1898:base/os/FreeRTOS/Source/queue.c **** 
 4454              		.loc 1 1898 2 is_stmt 1 view .LVU1324
 4455              	.LBB236:
 4456              	.LBI236:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4457              		.loc 2 191 30 view .LVU1325
 4458              	.LBB237:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4459              		.loc 2 193 1 view .LVU1326
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4460              		.loc 2 195 2 view .LVU1327
 4461              		.syntax unified
 4462              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4463 0014 4FF05003 			mov r3, #80												
 4464 0018 83F31188 		msr basepri, r3											
 4465 001c BFF36F8F 		isb														
 4466 0020 BFF34F8F 		dsb														
 4467              	
 4468              	@ 0 "" 2
 4469              	.LVL373:
ARM GAS  /tmp/ccw4aonF.s 			page 145


 4470              		.thumb
 4471              		.syntax unified
 4472              	.L324:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4473              		.loc 2 195 2 is_stmt 0 view .LVU1328
 4474              	.LBE237:
 4475              	.LBE236:
1898:base/os/FreeRTOS/Source/queue.c **** 
 4476              		.loc 1 1898 2 is_stmt 1 discriminator 1 view .LVU1329
1898:base/os/FreeRTOS/Source/queue.c **** 
 4477              		.loc 1 1898 2 discriminator 1 view .LVU1330
 4478 0024 FEE7     		b	.L324
 4479              		.cfi_endproc
 4480              	.LFE25:
 4482              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 4483              		.align	1
 4484              		.global	uxQueueSpacesAvailable
 4485              		.syntax unified
 4486              		.thumb
 4487              		.thumb_func
 4488              		.fpu softvfp
 4490              	uxQueueSpacesAvailable:
 4491              	.LVL374:
 4492              	.LFB26:
1911:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 4493              		.loc 1 1911 1 view -0
 4494              		.cfi_startproc
 4495              		@ args = 0, pretend = 0, frame = 0
 4496              		@ frame_needed = 0, uses_anonymous_args = 0
1911:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 4497              		.loc 1 1911 1 is_stmt 0 view .LVU1332
 4498 0000 38B5     		push	{r3, r4, r5, lr}
 4499              	.LCFI53:
 4500              		.cfi_def_cfa_offset 16
 4501              		.cfi_offset 3, -16
 4502              		.cfi_offset 4, -12
 4503              		.cfi_offset 5, -8
 4504              		.cfi_offset 14, -4
1912:base/os/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
 4505              		.loc 1 1912 1 is_stmt 1 view .LVU1333
1913:base/os/FreeRTOS/Source/queue.c **** 
 4506              		.loc 1 1913 1 view .LVU1334
1915:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 4507              		.loc 1 1915 2 view .LVU1335
 4508              	.LVL375:
1916:base/os/FreeRTOS/Source/queue.c **** 
 4509              		.loc 1 1916 2 view .LVU1336
 4510 0002 48B1     		cbz	r0, .L332
 4511 0004 0546     		mov	r5, r0
1916:base/os/FreeRTOS/Source/queue.c **** 
 4512              		.loc 1 1916 25 discriminator 2 view .LVU1337
1918:base/os/FreeRTOS/Source/queue.c **** 	{
 4513              		.loc 1 1918 2 discriminator 2 view .LVU1338
 4514 0006 FFF7FEFF 		bl	vPortEnterCritical
 4515              	.LVL376:
1920:base/os/FreeRTOS/Source/queue.c **** 	}
 4516              		.loc 1 1920 3 discriminator 2 view .LVU1339
ARM GAS  /tmp/ccw4aonF.s 			page 146


1920:base/os/FreeRTOS/Source/queue.c **** 	}
 4517              		.loc 1 1920 21 is_stmt 0 discriminator 2 view .LVU1340
 4518 000a EC6B     		ldr	r4, [r5, #60]
1920:base/os/FreeRTOS/Source/queue.c **** 	}
 4519              		.loc 1 1920 41 discriminator 2 view .LVU1341
 4520 000c AB6B     		ldr	r3, [r5, #56]
1920:base/os/FreeRTOS/Source/queue.c **** 	}
 4521              		.loc 1 1920 12 discriminator 2 view .LVU1342
 4522 000e E41A     		subs	r4, r4, r3
 4523              	.LVL377:
1922:base/os/FreeRTOS/Source/queue.c **** 
 4524              		.loc 1 1922 2 is_stmt 1 discriminator 2 view .LVU1343
 4525 0010 FFF7FEFF 		bl	vPortExitCritical
 4526              	.LVL378:
1924:base/os/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4527              		.loc 1 1924 2 discriminator 2 view .LVU1344
1925:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4528              		.loc 1 1925 1 is_stmt 0 discriminator 2 view .LVU1345
 4529 0014 2046     		mov	r0, r4
 4530 0016 38BD     		pop	{r3, r4, r5, pc}
 4531              	.LVL379:
 4532              	.L332:
1916:base/os/FreeRTOS/Source/queue.c **** 
 4533              		.loc 1 1916 2 is_stmt 1 view .LVU1346
 4534              	.LBB238:
 4535              	.LBI238:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4536              		.loc 2 191 30 view .LVU1347
 4537              	.LBB239:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4538              		.loc 2 193 1 view .LVU1348
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4539              		.loc 2 195 2 view .LVU1349
 4540              		.syntax unified
 4541              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4542 0018 4FF05003 			mov r3, #80												
 4543 001c 83F31188 		msr basepri, r3											
 4544 0020 BFF36F8F 		isb														
 4545 0024 BFF34F8F 		dsb														
 4546              	
 4547              	@ 0 "" 2
 4548              	.LVL380:
 4549              		.thumb
 4550              		.syntax unified
 4551              	.L330:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4552              		.loc 2 195 2 is_stmt 0 view .LVU1350
 4553              	.LBE239:
 4554              	.LBE238:
1916:base/os/FreeRTOS/Source/queue.c **** 
 4555              		.loc 1 1916 2 is_stmt 1 discriminator 1 view .LVU1351
1916:base/os/FreeRTOS/Source/queue.c **** 
 4556              		.loc 1 1916 2 discriminator 1 view .LVU1352
 4557 0028 FEE7     		b	.L330
 4558              		.cfi_endproc
 4559              	.LFE26:
 4561              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
ARM GAS  /tmp/ccw4aonF.s 			page 147


 4562              		.align	1
 4563              		.global	uxQueueMessagesWaitingFromISR
 4564              		.syntax unified
 4565              		.thumb
 4566              		.thumb_func
 4567              		.fpu softvfp
 4569              	uxQueueMessagesWaitingFromISR:
 4570              	.LVL381:
 4571              	.LFB27:
1929:base/os/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 4572              		.loc 1 1929 1 view -0
 4573              		.cfi_startproc
 4574              		@ args = 0, pretend = 0, frame = 0
 4575              		@ frame_needed = 0, uses_anonymous_args = 0
 4576              		@ link register save eliminated.
1930:base/os/FreeRTOS/Source/queue.c **** 
 4577              		.loc 1 1930 1 view .LVU1354
1932:base/os/FreeRTOS/Source/queue.c **** 
 4578              		.loc 1 1932 2 view .LVU1355
 4579 0000 08B1     		cbz	r0, .L336
1932:base/os/FreeRTOS/Source/queue.c **** 
 4580              		.loc 1 1932 24 discriminator 2 view .LVU1356
1934:base/os/FreeRTOS/Source/queue.c **** 
 4581              		.loc 1 1934 2 discriminator 2 view .LVU1357
1934:base/os/FreeRTOS/Source/queue.c **** 
 4582              		.loc 1 1934 11 is_stmt 0 discriminator 2 view .LVU1358
 4583 0002 806B     		ldr	r0, [r0, #56]
 4584              	.LVL382:
1936:base/os/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4585              		.loc 1 1936 2 is_stmt 1 discriminator 2 view .LVU1359
1937:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4586              		.loc 1 1937 1 is_stmt 0 discriminator 2 view .LVU1360
 4587 0004 7047     		bx	lr
 4588              	.LVL383:
 4589              	.L336:
1932:base/os/FreeRTOS/Source/queue.c **** 
 4590              		.loc 1 1932 2 is_stmt 1 view .LVU1361
 4591              	.LBB240:
 4592              	.LBI240:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4593              		.loc 2 191 30 view .LVU1362
 4594              	.LBB241:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4595              		.loc 2 193 1 view .LVU1363
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4596              		.loc 2 195 2 view .LVU1364
 4597              		.syntax unified
 4598              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4599 0006 4FF05003 			mov r3, #80												
 4600 000a 83F31188 		msr basepri, r3											
 4601 000e BFF36F8F 		isb														
 4602 0012 BFF34F8F 		dsb														
 4603              	
 4604              	@ 0 "" 2
 4605              	.LVL384:
 4606              		.thumb
 4607              		.syntax unified
ARM GAS  /tmp/ccw4aonF.s 			page 148


 4608              	.L335:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4609              		.loc 2 195 2 is_stmt 0 view .LVU1365
 4610              	.LBE241:
 4611              	.LBE240:
1932:base/os/FreeRTOS/Source/queue.c **** 
 4612              		.loc 1 1932 2 is_stmt 1 discriminator 1 view .LVU1366
1932:base/os/FreeRTOS/Source/queue.c **** 
 4613              		.loc 1 1932 2 discriminator 1 view .LVU1367
 4614 0016 FEE7     		b	.L335
 4615              		.cfi_endproc
 4616              	.LFE27:
 4618              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 4619              		.align	1
 4620              		.global	uxQueueGetQueueNumber
 4621              		.syntax unified
 4622              		.thumb
 4623              		.thumb_func
 4624              		.fpu softvfp
 4626              	uxQueueGetQueueNumber:
 4627              	.LVL385:
 4628              	.LFB29:
1985:base/os/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 4629              		.loc 1 1985 2 view -0
 4630              		.cfi_startproc
 4631              		@ args = 0, pretend = 0, frame = 0
 4632              		@ frame_needed = 0, uses_anonymous_args = 0
 4633              		@ link register save eliminated.
1986:base/os/FreeRTOS/Source/queue.c **** 	}
 4634              		.loc 1 1986 3 view .LVU1369
1987:base/os/FreeRTOS/Source/queue.c **** 
 4635              		.loc 1 1987 2 is_stmt 0 view .LVU1370
 4636 0000 806C     		ldr	r0, [r0, #72]
 4637              	.LVL386:
1987:base/os/FreeRTOS/Source/queue.c **** 
 4638              		.loc 1 1987 2 view .LVU1371
 4639 0002 7047     		bx	lr
 4640              		.cfi_endproc
 4641              	.LFE29:
 4643              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 4644              		.align	1
 4645              		.global	vQueueSetQueueNumber
 4646              		.syntax unified
 4647              		.thumb
 4648              		.thumb_func
 4649              		.fpu softvfp
 4651              	vQueueSetQueueNumber:
 4652              	.LVL387:
 4653              	.LFB30:
1995:base/os/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 4654              		.loc 1 1995 2 is_stmt 1 view -0
 4655              		.cfi_startproc
 4656              		@ args = 0, pretend = 0, frame = 0
 4657              		@ frame_needed = 0, uses_anonymous_args = 0
 4658              		@ link register save eliminated.
1996:base/os/FreeRTOS/Source/queue.c **** 	}
 4659              		.loc 1 1996 3 view .LVU1373
ARM GAS  /tmp/ccw4aonF.s 			page 149


1996:base/os/FreeRTOS/Source/queue.c **** 	}
 4660              		.loc 1 1996 43 is_stmt 0 view .LVU1374
 4661 0000 8164     		str	r1, [r0, #72]
1997:base/os/FreeRTOS/Source/queue.c **** 
 4662              		.loc 1 1997 2 view .LVU1375
 4663 0002 7047     		bx	lr
 4664              		.cfi_endproc
 4665              	.LFE30:
 4667              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 4668              		.align	1
 4669              		.global	ucQueueGetQueueType
 4670              		.syntax unified
 4671              		.thumb
 4672              		.thumb_func
 4673              		.fpu softvfp
 4675              	ucQueueGetQueueType:
 4676              	.LVL388:
 4677              	.LFB31:
2005:base/os/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 4678              		.loc 1 2005 2 is_stmt 1 view -0
 4679              		.cfi_startproc
 4680              		@ args = 0, pretend = 0, frame = 0
 4681              		@ frame_needed = 0, uses_anonymous_args = 0
 4682              		@ link register save eliminated.
2006:base/os/FreeRTOS/Source/queue.c **** 	}
 4683              		.loc 1 2006 3 view .LVU1377
2007:base/os/FreeRTOS/Source/queue.c **** 
 4684              		.loc 1 2007 2 is_stmt 0 view .LVU1378
 4685 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 4686              	.LVL389:
2007:base/os/FreeRTOS/Source/queue.c **** 
 4687              		.loc 1 2007 2 view .LVU1379
 4688 0004 7047     		bx	lr
 4689              		.cfi_endproc
 4690              	.LFE31:
 4692              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 4693              		.align	1
 4694              		.global	xQueueIsQueueEmptyFromISR
 4695              		.syntax unified
 4696              		.thumb
 4697              		.thumb_func
 4698              		.fpu softvfp
 4700              	xQueueIsQueueEmptyFromISR:
 4701              	.LVL390:
 4702              	.LFB37:
2278:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 4703              		.loc 1 2278 1 is_stmt 1 view -0
 4704              		.cfi_startproc
 4705              		@ args = 0, pretend = 0, frame = 0
 4706              		@ frame_needed = 0, uses_anonymous_args = 0
 4707              		@ link register save eliminated.
2279:base/os/FreeRTOS/Source/queue.c **** 
 4708              		.loc 1 2279 1 view .LVU1381
2281:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4709              		.loc 1 2281 2 view .LVU1382
 4710 0000 18B1     		cbz	r0, .L345
2281:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
ARM GAS  /tmp/ccw4aonF.s 			page 150


 4711              		.loc 1 2281 24 discriminator 2 view .LVU1383
2282:base/os/FreeRTOS/Source/queue.c **** 	{
 4712              		.loc 1 2282 2 discriminator 2 view .LVU1384
2282:base/os/FreeRTOS/Source/queue.c **** 	{
 4713              		.loc 1 2282 30 is_stmt 0 discriminator 2 view .LVU1385
 4714 0002 836B     		ldr	r3, [r0, #56]
2282:base/os/FreeRTOS/Source/queue.c **** 	{
 4715              		.loc 1 2282 4 discriminator 2 view .LVU1386
 4716 0004 53B9     		cbnz	r3, .L344
2284:base/os/FreeRTOS/Source/queue.c **** 	}
 4717              		.loc 1 2284 11 view .LVU1387
 4718 0006 0120     		movs	r0, #1
 4719              	.LVL391:
2284:base/os/FreeRTOS/Source/queue.c **** 	}
 4720              		.loc 1 2284 11 view .LVU1388
 4721 0008 7047     		bx	lr
 4722              	.LVL392:
 4723              	.L345:
2281:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4724              		.loc 1 2281 2 is_stmt 1 view .LVU1389
 4725              	.LBB242:
 4726              	.LBI242:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4727              		.loc 2 191 30 view .LVU1390
 4728              	.LBB243:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4729              		.loc 2 193 1 view .LVU1391
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4730              		.loc 2 195 2 view .LVU1392
 4731              		.syntax unified
 4732              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4733 000a 4FF05003 			mov r3, #80												
 4734 000e 83F31188 		msr basepri, r3											
 4735 0012 BFF36F8F 		isb														
 4736 0016 BFF34F8F 		dsb														
 4737              	
 4738              	@ 0 "" 2
 4739              	.LVL393:
 4740              		.thumb
 4741              		.syntax unified
 4742              	.L342:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4743              		.loc 2 195 2 is_stmt 0 view .LVU1393
 4744              	.LBE243:
 4745              	.LBE242:
2281:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4746              		.loc 1 2281 2 is_stmt 1 discriminator 1 view .LVU1394
2281:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4747              		.loc 1 2281 2 discriminator 1 view .LVU1395
 4748 001a FEE7     		b	.L342
 4749              	.L344:
2288:base/os/FreeRTOS/Source/queue.c **** 	}
 4750              		.loc 1 2288 11 is_stmt 0 view .LVU1396
 4751 001c 0020     		movs	r0, #0
 4752              	.LVL394:
2291:base/os/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4753              		.loc 1 2291 2 is_stmt 1 view .LVU1397
ARM GAS  /tmp/ccw4aonF.s 			page 151


2292:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4754              		.loc 1 2292 1 is_stmt 0 view .LVU1398
 4755 001e 7047     		bx	lr
 4756              		.cfi_endproc
 4757              	.LFE37:
 4759              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 4760              		.align	1
 4761              		.global	xQueueIsQueueFullFromISR
 4762              		.syntax unified
 4763              		.thumb
 4764              		.thumb_func
 4765              		.fpu softvfp
 4767              	xQueueIsQueueFullFromISR:
 4768              	.LVL395:
 4769              	.LFB39:
2314:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2315:base/os/FreeRTOS/Source/queue.c **** 
2316:base/os/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2317:base/os/FreeRTOS/Source/queue.c **** {
 4770              		.loc 1 2317 1 is_stmt 1 view -0
 4771              		.cfi_startproc
 4772              		@ args = 0, pretend = 0, frame = 0
 4773              		@ frame_needed = 0, uses_anonymous_args = 0
 4774              		@ link register save eliminated.
2318:base/os/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 4775              		.loc 1 2318 1 view .LVU1400
2319:base/os/FreeRTOS/Source/queue.c **** 
2320:base/os/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 4776              		.loc 1 2320 2 view .LVU1401
 4777 0000 28B1     		cbz	r0, .L351
 4778              		.loc 1 2320 24 discriminator 2 view .LVU1402
2321:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 4779              		.loc 1 2321 2 discriminator 2 view .LVU1403
 4780              		.loc 1 2321 30 is_stmt 0 discriminator 2 view .LVU1404
 4781 0002 826B     		ldr	r2, [r0, #56]
 4782              		.loc 1 2321 77 discriminator 2 view .LVU1405
 4783 0004 C36B     		ldr	r3, [r0, #60]
 4784              		.loc 1 2321 4 discriminator 2 view .LVU1406
 4785 0006 9A42     		cmp	r2, r3
 4786 0008 0AD0     		beq	.L352
2322:base/os/FreeRTOS/Source/queue.c **** 	{
2323:base/os/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2324:base/os/FreeRTOS/Source/queue.c **** 	}
2325:base/os/FreeRTOS/Source/queue.c **** 	else
2326:base/os/FreeRTOS/Source/queue.c **** 	{
2327:base/os/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 4787              		.loc 1 2327 11 view .LVU1407
 4788 000a 0020     		movs	r0, #0
 4789              	.LVL396:
2328:base/os/FreeRTOS/Source/queue.c **** 	}
2329:base/os/FreeRTOS/Source/queue.c **** 
2330:base/os/FreeRTOS/Source/queue.c **** 	return xReturn;
 4790              		.loc 1 2330 2 is_stmt 1 view .LVU1408
2331:base/os/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4791              		.loc 1 2331 1 is_stmt 0 view .LVU1409
 4792 000c 7047     		bx	lr
 4793              	.LVL397:
ARM GAS  /tmp/ccw4aonF.s 			page 152


 4794              	.L351:
2320:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 4795              		.loc 1 2320 2 is_stmt 1 view .LVU1410
 4796              	.LBB244:
 4797              	.LBI244:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4798              		.loc 2 191 30 view .LVU1411
 4799              	.LBB245:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4800              		.loc 2 193 1 view .LVU1412
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4801              		.loc 2 195 2 view .LVU1413
 4802              		.syntax unified
 4803              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4804 000e 4FF05003 			mov r3, #80												
 4805 0012 83F31188 		msr basepri, r3											
 4806 0016 BFF36F8F 		isb														
 4807 001a BFF34F8F 		dsb														
 4808              	
 4809              	@ 0 "" 2
 4810              	.LVL398:
 4811              		.thumb
 4812              		.syntax unified
 4813              	.L348:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4814              		.loc 2 195 2 is_stmt 0 view .LVU1414
 4815              	.LBE245:
 4816              	.LBE244:
2320:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 4817              		.loc 1 2320 2 is_stmt 1 discriminator 1 view .LVU1415
2320:base/os/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 4818              		.loc 1 2320 2 discriminator 1 view .LVU1416
 4819 001e FEE7     		b	.L348
 4820              	.L352:
2323:base/os/FreeRTOS/Source/queue.c **** 	}
 4821              		.loc 1 2323 11 is_stmt 0 view .LVU1417
 4822 0020 0120     		movs	r0, #1
 4823              	.LVL399:
2323:base/os/FreeRTOS/Source/queue.c **** 	}
 4824              		.loc 1 2323 11 view .LVU1418
 4825 0022 7047     		bx	lr
 4826              		.cfi_endproc
 4827              	.LFE39:
 4829              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 4830              		.align	1
 4831              		.global	vQueueAddToRegistry
 4832              		.syntax unified
 4833              		.thumb
 4834              		.thumb_func
 4835              		.fpu softvfp
 4837              	vQueueAddToRegistry:
 4838              	.LVL400:
 4839              	.LFB40:
2332:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2333:base/os/FreeRTOS/Source/queue.c **** 
2334:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2335:base/os/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccw4aonF.s 			page 153


2336:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2337:base/os/FreeRTOS/Source/queue.c **** 	{
2338:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2339:base/os/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2340:base/os/FreeRTOS/Source/queue.c **** 
2341:base/os/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2342:base/os/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2343:base/os/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2344:base/os/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2345:base/os/FreeRTOS/Source/queue.c **** 		{
2346:base/os/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2347:base/os/FreeRTOS/Source/queue.c **** 			{
2348:base/os/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2349:base/os/FreeRTOS/Source/queue.c **** 				posting? */
2350:base/os/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2351:base/os/FreeRTOS/Source/queue.c **** 				{
2352:base/os/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2353:base/os/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2354:base/os/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2355:base/os/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2356:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2357:base/os/FreeRTOS/Source/queue.c **** 				}
2358:base/os/FreeRTOS/Source/queue.c **** 				else
2359:base/os/FreeRTOS/Source/queue.c **** 				{
2360:base/os/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2361:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2362:base/os/FreeRTOS/Source/queue.c **** 				}
2363:base/os/FreeRTOS/Source/queue.c **** 			}
2364:base/os/FreeRTOS/Source/queue.c **** 		}
2365:base/os/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2366:base/os/FreeRTOS/Source/queue.c **** 
2367:base/os/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2368:base/os/FreeRTOS/Source/queue.c **** 		{
2369:base/os/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2370:base/os/FreeRTOS/Source/queue.c **** 			{
2371:base/os/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2372:base/os/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2373:base/os/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2374:base/os/FreeRTOS/Source/queue.c **** 
2375:base/os/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2376:base/os/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2377:base/os/FreeRTOS/Source/queue.c **** 				{
2378:base/os/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2379:base/os/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2380:base/os/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2381:base/os/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2382:base/os/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2383:base/os/FreeRTOS/Source/queue.c **** 					{
2384:base/os/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2385:base/os/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2386:base/os/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2387:base/os/FreeRTOS/Source/queue.c **** 					}
2388:base/os/FreeRTOS/Source/queue.c **** 					else
2389:base/os/FreeRTOS/Source/queue.c **** 					{
2390:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2391:base/os/FreeRTOS/Source/queue.c **** 					}
2392:base/os/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccw4aonF.s 			page 154


2393:base/os/FreeRTOS/Source/queue.c **** 				else
2394:base/os/FreeRTOS/Source/queue.c **** 				{
2395:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2396:base/os/FreeRTOS/Source/queue.c **** 				}
2397:base/os/FreeRTOS/Source/queue.c **** 			}
2398:base/os/FreeRTOS/Source/queue.c **** 			else
2399:base/os/FreeRTOS/Source/queue.c **** 			{
2400:base/os/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2401:base/os/FreeRTOS/Source/queue.c **** 			}
2402:base/os/FreeRTOS/Source/queue.c **** 		}
2403:base/os/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2404:base/os/FreeRTOS/Source/queue.c **** 
2405:base/os/FreeRTOS/Source/queue.c **** 		return xReturn;
2406:base/os/FreeRTOS/Source/queue.c **** 	}
2407:base/os/FreeRTOS/Source/queue.c **** 
2408:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2409:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2410:base/os/FreeRTOS/Source/queue.c **** 
2411:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2412:base/os/FreeRTOS/Source/queue.c **** 
2413:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2414:base/os/FreeRTOS/Source/queue.c **** 	{
2415:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2416:base/os/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2417:base/os/FreeRTOS/Source/queue.c **** 
2418:base/os/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2419:base/os/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2420:base/os/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2421:base/os/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2422:base/os/FreeRTOS/Source/queue.c **** 		{
2423:base/os/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2424:base/os/FreeRTOS/Source/queue.c **** 			{
2425:base/os/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2426:base/os/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2427:base/os/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2428:base/os/FreeRTOS/Source/queue.c **** 				{
2429:base/os/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2430:base/os/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2431:base/os/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2432:base/os/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2433:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2434:base/os/FreeRTOS/Source/queue.c **** 				}
2435:base/os/FreeRTOS/Source/queue.c **** 				else
2436:base/os/FreeRTOS/Source/queue.c **** 				{
2437:base/os/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2438:base/os/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2439:base/os/FreeRTOS/Source/queue.c **** 				}
2440:base/os/FreeRTOS/Source/queue.c **** 			}
2441:base/os/FreeRTOS/Source/queue.c **** 			else
2442:base/os/FreeRTOS/Source/queue.c **** 			{
2443:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2444:base/os/FreeRTOS/Source/queue.c **** 			}
2445:base/os/FreeRTOS/Source/queue.c **** 		}
2446:base/os/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2447:base/os/FreeRTOS/Source/queue.c **** 
2448:base/os/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2449:base/os/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccw4aonF.s 			page 155


2450:base/os/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2451:base/os/FreeRTOS/Source/queue.c **** 			{
2452:base/os/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2453:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2454:base/os/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2455:base/os/FreeRTOS/Source/queue.c **** 				{
2456:base/os/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2457:base/os/FreeRTOS/Source/queue.c **** 				}
2458:base/os/FreeRTOS/Source/queue.c **** 				else
2459:base/os/FreeRTOS/Source/queue.c **** 				{
2460:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2461:base/os/FreeRTOS/Source/queue.c **** 				}
2462:base/os/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2463:base/os/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2464:base/os/FreeRTOS/Source/queue.c **** 
2465:base/os/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2466:base/os/FreeRTOS/Source/queue.c **** 
2467:base/os/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2468:base/os/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2469:base/os/FreeRTOS/Source/queue.c **** 				{
2470:base/os/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2471:base/os/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2472:base/os/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2473:base/os/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2474:base/os/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2475:base/os/FreeRTOS/Source/queue.c **** 					{
2476:base/os/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2477:base/os/FreeRTOS/Source/queue.c **** 					}
2478:base/os/FreeRTOS/Source/queue.c **** 					else
2479:base/os/FreeRTOS/Source/queue.c **** 					{
2480:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2481:base/os/FreeRTOS/Source/queue.c **** 					}
2482:base/os/FreeRTOS/Source/queue.c **** 				}
2483:base/os/FreeRTOS/Source/queue.c **** 				else
2484:base/os/FreeRTOS/Source/queue.c **** 				{
2485:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2486:base/os/FreeRTOS/Source/queue.c **** 				}
2487:base/os/FreeRTOS/Source/queue.c **** 			}
2488:base/os/FreeRTOS/Source/queue.c **** 			else
2489:base/os/FreeRTOS/Source/queue.c **** 			{
2490:base/os/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2491:base/os/FreeRTOS/Source/queue.c **** 			}
2492:base/os/FreeRTOS/Source/queue.c **** 		}
2493:base/os/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2494:base/os/FreeRTOS/Source/queue.c **** 
2495:base/os/FreeRTOS/Source/queue.c **** 		return xReturn;
2496:base/os/FreeRTOS/Source/queue.c **** 	}
2497:base/os/FreeRTOS/Source/queue.c **** 
2498:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2499:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2500:base/os/FreeRTOS/Source/queue.c **** 
2501:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2502:base/os/FreeRTOS/Source/queue.c **** 
2503:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2504:base/os/FreeRTOS/Source/queue.c **** 	{
2505:base/os/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2506:base/os/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccw4aonF.s 			page 156


2507:base/os/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2508:base/os/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2509:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2510:base/os/FreeRTOS/Source/queue.c **** 		{
2511:base/os/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2512:base/os/FreeRTOS/Source/queue.c **** 
2513:base/os/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2514:base/os/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2515:base/os/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2516:base/os/FreeRTOS/Source/queue.c **** 			{
2517:base/os/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2518:base/os/FreeRTOS/Source/queue.c **** 				{
2519:base/os/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2520:base/os/FreeRTOS/Source/queue.c **** 					{
2521:base/os/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2522:base/os/FreeRTOS/Source/queue.c **** 					}
2523:base/os/FreeRTOS/Source/queue.c **** 					else
2524:base/os/FreeRTOS/Source/queue.c **** 					{
2525:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2526:base/os/FreeRTOS/Source/queue.c **** 					}
2527:base/os/FreeRTOS/Source/queue.c **** 				}
2528:base/os/FreeRTOS/Source/queue.c **** 				else
2529:base/os/FreeRTOS/Source/queue.c **** 				{
2530:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2531:base/os/FreeRTOS/Source/queue.c **** 				}
2532:base/os/FreeRTOS/Source/queue.c **** 			}
2533:base/os/FreeRTOS/Source/queue.c **** 			else
2534:base/os/FreeRTOS/Source/queue.c **** 			{
2535:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2536:base/os/FreeRTOS/Source/queue.c **** 			}
2537:base/os/FreeRTOS/Source/queue.c **** 		}
2538:base/os/FreeRTOS/Source/queue.c **** 		else
2539:base/os/FreeRTOS/Source/queue.c **** 		{
2540:base/os/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2541:base/os/FreeRTOS/Source/queue.c **** 		}
2542:base/os/FreeRTOS/Source/queue.c **** 
2543:base/os/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2544:base/os/FreeRTOS/Source/queue.c **** 	}
2545:base/os/FreeRTOS/Source/queue.c **** 
2546:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2547:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2548:base/os/FreeRTOS/Source/queue.c **** 
2549:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2550:base/os/FreeRTOS/Source/queue.c **** 
2551:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2552:base/os/FreeRTOS/Source/queue.c **** 	{
2553:base/os/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2554:base/os/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2555:base/os/FreeRTOS/Source/queue.c **** 
2556:base/os/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2557:base/os/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2558:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2559:base/os/FreeRTOS/Source/queue.c **** 		{
2560:base/os/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2561:base/os/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2562:base/os/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2563:base/os/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccw4aonF.s 			page 157


2564:base/os/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2565:base/os/FreeRTOS/Source/queue.c **** 			}
2566:base/os/FreeRTOS/Source/queue.c **** 			else
2567:base/os/FreeRTOS/Source/queue.c **** 			{
2568:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:base/os/FreeRTOS/Source/queue.c **** 			}
2570:base/os/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2571:base/os/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2572:base/os/FreeRTOS/Source/queue.c **** 
2573:base/os/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2574:base/os/FreeRTOS/Source/queue.c **** 			{
2575:base/os/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2576:base/os/FreeRTOS/Source/queue.c **** 				{
2577:base/os/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2578:base/os/FreeRTOS/Source/queue.c **** 					{
2579:base/os/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2580:base/os/FreeRTOS/Source/queue.c **** 					}
2581:base/os/FreeRTOS/Source/queue.c **** 					else
2582:base/os/FreeRTOS/Source/queue.c **** 					{
2583:base/os/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2584:base/os/FreeRTOS/Source/queue.c **** 					}
2585:base/os/FreeRTOS/Source/queue.c **** 				}
2586:base/os/FreeRTOS/Source/queue.c **** 				else
2587:base/os/FreeRTOS/Source/queue.c **** 				{
2588:base/os/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2589:base/os/FreeRTOS/Source/queue.c **** 				}
2590:base/os/FreeRTOS/Source/queue.c **** 			}
2591:base/os/FreeRTOS/Source/queue.c **** 			else
2592:base/os/FreeRTOS/Source/queue.c **** 			{
2593:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2594:base/os/FreeRTOS/Source/queue.c **** 			}
2595:base/os/FreeRTOS/Source/queue.c **** 
2596:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2597:base/os/FreeRTOS/Source/queue.c **** 		}
2598:base/os/FreeRTOS/Source/queue.c **** 		else
2599:base/os/FreeRTOS/Source/queue.c **** 		{
2600:base/os/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2601:base/os/FreeRTOS/Source/queue.c **** 		}
2602:base/os/FreeRTOS/Source/queue.c **** 
2603:base/os/FreeRTOS/Source/queue.c **** 		return xReturn;
2604:base/os/FreeRTOS/Source/queue.c **** 	}
2605:base/os/FreeRTOS/Source/queue.c **** 
2606:base/os/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2607:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2608:base/os/FreeRTOS/Source/queue.c **** 
2609:base/os/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2610:base/os/FreeRTOS/Source/queue.c **** 
2611:base/os/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2612:base/os/FreeRTOS/Source/queue.c **** 	{
 4840              		.loc 1 2612 2 is_stmt 1 view -0
 4841              		.cfi_startproc
 4842              		@ args = 0, pretend = 0, frame = 0
 4843              		@ frame_needed = 0, uses_anonymous_args = 0
 4844              		@ link register save eliminated.
2613:base/os/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 4845              		.loc 1 2613 2 view .LVU1420
2614:base/os/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccw4aonF.s 			page 158


2615:base/os/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2616:base/os/FreeRTOS/Source/queue.c **** 		a free slot. */
2617:base/os/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4846              		.loc 1 2617 3 view .LVU1421
 4847              		.loc 1 2617 11 is_stmt 0 view .LVU1422
 4848 0000 0023     		movs	r3, #0
 4849              	.LVL401:
 4850              	.L354:
 4851              		.loc 1 2617 36 is_stmt 1 discriminator 1 view .LVU1423
 4852 0002 072B     		cmp	r3, #7
 4853 0004 0CD8     		bhi	.L358
2618:base/os/FreeRTOS/Source/queue.c **** 		{
2619:base/os/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 4854              		.loc 1 2619 4 view .LVU1424
 4855              		.loc 1 2619 28 is_stmt 0 view .LVU1425
 4856 0006 074A     		ldr	r2, .L360
 4857 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 4858              		.loc 1 2619 6 view .LVU1426
 4859 000c 0AB1     		cbz	r2, .L359
2620:base/os/FreeRTOS/Source/queue.c **** 			{
2621:base/os/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2622:base/os/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
2623:base/os/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
2624:base/os/FreeRTOS/Source/queue.c **** 
2625:base/os/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2626:base/os/FreeRTOS/Source/queue.c **** 				break;
2627:base/os/FreeRTOS/Source/queue.c **** 			}
2628:base/os/FreeRTOS/Source/queue.c **** 			else
2629:base/os/FreeRTOS/Source/queue.c **** 			{
2630:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 4860              		.loc 1 2630 29 is_stmt 1 discriminator 2 view .LVU1427
2617:base/os/FreeRTOS/Source/queue.c **** 		{
 4861              		.loc 1 2617 83 discriminator 2 view .LVU1428
 4862 000e 0133     		adds	r3, r3, #1
 4863              	.LVL402:
2617:base/os/FreeRTOS/Source/queue.c **** 		{
 4864              		.loc 1 2617 83 is_stmt 0 discriminator 2 view .LVU1429
 4865 0010 F7E7     		b	.L354
 4866              	.L359:
2622:base/os/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 4867              		.loc 1 2622 5 is_stmt 1 view .LVU1430
2622:base/os/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 4868              		.loc 1 2622 38 is_stmt 0 view .LVU1431
 4869 0012 044A     		ldr	r2, .L360
 4870 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2623:base/os/FreeRTOS/Source/queue.c **** 
 4871              		.loc 1 2623 5 is_stmt 1 view .LVU1432
2623:base/os/FreeRTOS/Source/queue.c **** 
 4872              		.loc 1 2623 34 is_stmt 0 view .LVU1433
 4873 0018 02EBC302 		add	r2, r2, r3, lsl #3
 4874 001c 5060     		str	r0, [r2, #4]
2625:base/os/FreeRTOS/Source/queue.c **** 				break;
 4875              		.loc 1 2625 51 is_stmt 1 view .LVU1434
2626:base/os/FreeRTOS/Source/queue.c **** 			}
 4876              		.loc 1 2626 5 view .LVU1435
 4877 001e 7047     		bx	lr
 4878              	.L358:
ARM GAS  /tmp/ccw4aonF.s 			page 159


2631:base/os/FreeRTOS/Source/queue.c **** 			}
2632:base/os/FreeRTOS/Source/queue.c **** 		}
2633:base/os/FreeRTOS/Source/queue.c **** 	}
 4879              		.loc 1 2633 2 is_stmt 0 view .LVU1436
 4880 0020 7047     		bx	lr
 4881              	.L361:
 4882 0022 00BF     		.align	2
 4883              	.L360:
 4884 0024 00000000 		.word	.LANCHOR0
 4885              		.cfi_endproc
 4886              	.LFE40:
 4888              		.section	.text.pcQueueGetName,"ax",%progbits
 4889              		.align	1
 4890              		.global	pcQueueGetName
 4891              		.syntax unified
 4892              		.thumb
 4893              		.thumb_func
 4894              		.fpu softvfp
 4896              	pcQueueGetName:
 4897              	.LVL403:
 4898              	.LFB41:
2634:base/os/FreeRTOS/Source/queue.c **** 
2635:base/os/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2636:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2637:base/os/FreeRTOS/Source/queue.c **** 
2638:base/os/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2639:base/os/FreeRTOS/Source/queue.c **** 
2640:base/os/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2641:base/os/FreeRTOS/Source/queue.c **** 	{
 4899              		.loc 1 2641 2 is_stmt 1 view -0
 4900              		.cfi_startproc
 4901              		@ args = 0, pretend = 0, frame = 0
 4902              		@ frame_needed = 0, uses_anonymous_args = 0
 4903              		@ link register save eliminated.
2642:base/os/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 4904              		.loc 1 2642 2 view .LVU1438
2643:base/os/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
 4905              		.loc 1 2643 2 view .LVU1439
2644:base/os/FreeRTOS/Source/queue.c **** 
2645:base/os/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2646:base/os/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2647:base/os/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4906              		.loc 1 2647 3 view .LVU1440
 4907              		.loc 1 2647 11 is_stmt 0 view .LVU1441
 4908 0000 0023     		movs	r3, #0
 4909              	.LVL404:
 4910              	.L363:
 4911              		.loc 1 2647 36 is_stmt 1 discriminator 1 view .LVU1442
 4912 0002 072B     		cmp	r3, #7
 4913 0004 0BD8     		bhi	.L367
2648:base/os/FreeRTOS/Source/queue.c **** 		{
2649:base/os/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4914              		.loc 1 2649 4 view .LVU1443
 4915              		.loc 1 2649 28 is_stmt 0 view .LVU1444
 4916 0006 074A     		ldr	r2, .L369
 4917 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4918 000c 5268     		ldr	r2, [r2, #4]
ARM GAS  /tmp/ccw4aonF.s 			page 160


 4919              		.loc 1 2649 6 view .LVU1445
 4920 000e 8242     		cmp	r2, r0
 4921 0010 01D0     		beq	.L368
2650:base/os/FreeRTOS/Source/queue.c **** 			{
2651:base/os/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
2652:base/os/FreeRTOS/Source/queue.c **** 				break;
2653:base/os/FreeRTOS/Source/queue.c **** 			}
2654:base/os/FreeRTOS/Source/queue.c **** 			else
2655:base/os/FreeRTOS/Source/queue.c **** 			{
2656:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 4922              		.loc 1 2656 29 is_stmt 1 discriminator 2 view .LVU1446
2647:base/os/FreeRTOS/Source/queue.c **** 		{
 4923              		.loc 1 2647 83 discriminator 2 view .LVU1447
 4924 0012 0133     		adds	r3, r3, #1
 4925              	.LVL405:
2647:base/os/FreeRTOS/Source/queue.c **** 		{
 4926              		.loc 1 2647 83 is_stmt 0 discriminator 2 view .LVU1448
 4927 0014 F5E7     		b	.L363
 4928              	.L368:
2651:base/os/FreeRTOS/Source/queue.c **** 				break;
 4929              		.loc 1 2651 5 is_stmt 1 view .LVU1449
2651:base/os/FreeRTOS/Source/queue.c **** 				break;
 4930              		.loc 1 2651 14 is_stmt 0 view .LVU1450
 4931 0016 034A     		ldr	r2, .L369
 4932 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 4933              	.LVL406:
2652:base/os/FreeRTOS/Source/queue.c **** 			}
 4934              		.loc 1 2652 5 is_stmt 1 view .LVU1451
 4935 001c 7047     		bx	lr
 4936              	.LVL407:
 4937              	.L367:
2643:base/os/FreeRTOS/Source/queue.c **** 
 4938              		.loc 1 2643 14 is_stmt 0 view .LVU1452
 4939 001e 0020     		movs	r0, #0
 4940              	.LVL408:
2657:base/os/FreeRTOS/Source/queue.c **** 			}
2658:base/os/FreeRTOS/Source/queue.c **** 		}
2659:base/os/FreeRTOS/Source/queue.c **** 
2660:base/os/FreeRTOS/Source/queue.c **** 		return pcReturn;
 4941              		.loc 1 2660 3 is_stmt 1 view .LVU1453
2661:base/os/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 4942              		.loc 1 2661 2 is_stmt 0 view .LVU1454
 4943 0020 7047     		bx	lr
 4944              	.L370:
 4945 0022 00BF     		.align	2
 4946              	.L369:
 4947 0024 00000000 		.word	.LANCHOR0
 4948              		.cfi_endproc
 4949              	.LFE41:
 4951              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 4952              		.align	1
 4953              		.global	vQueueUnregisterQueue
 4954              		.syntax unified
 4955              		.thumb
 4956              		.thumb_func
 4957              		.fpu softvfp
 4959              	vQueueUnregisterQueue:
ARM GAS  /tmp/ccw4aonF.s 			page 161


 4960              	.LVL409:
 4961              	.LFB42:
2662:base/os/FreeRTOS/Source/queue.c **** 
2663:base/os/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2664:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2665:base/os/FreeRTOS/Source/queue.c **** 
2666:base/os/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2667:base/os/FreeRTOS/Source/queue.c **** 
2668:base/os/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2669:base/os/FreeRTOS/Source/queue.c **** 	{
 4962              		.loc 1 2669 2 is_stmt 1 view -0
 4963              		.cfi_startproc
 4964              		@ args = 0, pretend = 0, frame = 0
 4965              		@ frame_needed = 0, uses_anonymous_args = 0
 4966              		@ link register save eliminated.
2670:base/os/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 4967              		.loc 1 2670 2 view .LVU1456
2671:base/os/FreeRTOS/Source/queue.c **** 
2672:base/os/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2673:base/os/FreeRTOS/Source/queue.c **** 		registry. */
2674:base/os/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4968              		.loc 1 2674 3 view .LVU1457
 4969              		.loc 1 2674 11 is_stmt 0 view .LVU1458
 4970 0000 0023     		movs	r3, #0
 4971              	.LVL410:
 4972              	.L372:
 4973              		.loc 1 2674 36 is_stmt 1 discriminator 1 view .LVU1459
 4974 0002 072B     		cmp	r3, #7
 4975 0004 0FD8     		bhi	.L376
2675:base/os/FreeRTOS/Source/queue.c **** 		{
2676:base/os/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4976              		.loc 1 2676 4 view .LVU1460
 4977              		.loc 1 2676 28 is_stmt 0 view .LVU1461
 4978 0006 084A     		ldr	r2, .L378
 4979 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4980 000c 5268     		ldr	r2, [r2, #4]
 4981              		.loc 1 2676 6 view .LVU1462
 4982 000e 8242     		cmp	r2, r0
 4983 0010 01D0     		beq	.L377
2677:base/os/FreeRTOS/Source/queue.c **** 			{
2678:base/os/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2679:base/os/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
2680:base/os/FreeRTOS/Source/queue.c **** 
2681:base/os/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2682:base/os/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2683:base/os/FreeRTOS/Source/queue.c **** 				added again. */
2684:base/os/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
2685:base/os/FreeRTOS/Source/queue.c **** 				break;
2686:base/os/FreeRTOS/Source/queue.c **** 			}
2687:base/os/FreeRTOS/Source/queue.c **** 			else
2688:base/os/FreeRTOS/Source/queue.c **** 			{
2689:base/os/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 4984              		.loc 1 2689 29 is_stmt 1 discriminator 2 view .LVU1463
2674:base/os/FreeRTOS/Source/queue.c **** 		{
 4985              		.loc 1 2674 83 discriminator 2 view .LVU1464
 4986 0012 0133     		adds	r3, r3, #1
 4987              	.LVL411:
ARM GAS  /tmp/ccw4aonF.s 			page 162


2674:base/os/FreeRTOS/Source/queue.c **** 		{
 4988              		.loc 1 2674 83 is_stmt 0 discriminator 2 view .LVU1465
 4989 0014 F5E7     		b	.L372
 4990              	.L377:
2679:base/os/FreeRTOS/Source/queue.c **** 
 4991              		.loc 1 2679 5 is_stmt 1 view .LVU1466
2679:base/os/FreeRTOS/Source/queue.c **** 
 4992              		.loc 1 2679 38 is_stmt 0 view .LVU1467
 4993 0016 044A     		ldr	r2, .L378
 4994 0018 0021     		movs	r1, #0
 4995 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2684:base/os/FreeRTOS/Source/queue.c **** 				break;
 4996              		.loc 1 2684 5 is_stmt 1 view .LVU1468
2684:base/os/FreeRTOS/Source/queue.c **** 				break;
 4997              		.loc 1 2684 34 is_stmt 0 view .LVU1469
 4998 001e 02EBC302 		add	r2, r2, r3, lsl #3
 4999 0022 5160     		str	r1, [r2, #4]
2685:base/os/FreeRTOS/Source/queue.c **** 			}
 5000              		.loc 1 2685 5 is_stmt 1 view .LVU1470
 5001 0024 7047     		bx	lr
 5002              	.L376:
2690:base/os/FreeRTOS/Source/queue.c **** 			}
2691:base/os/FreeRTOS/Source/queue.c **** 		}
2692:base/os/FreeRTOS/Source/queue.c **** 
2693:base/os/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 5003              		.loc 1 2693 2 is_stmt 0 view .LVU1471
 5004 0026 7047     		bx	lr
 5005              	.L379:
 5006              		.align	2
 5007              	.L378:
 5008 0028 00000000 		.word	.LANCHOR0
 5009              		.cfi_endproc
 5010              	.LFE42:
 5012              		.section	.text.vQueueDelete,"ax",%progbits
 5013              		.align	1
 5014              		.global	vQueueDelete
 5015              		.syntax unified
 5016              		.thumb
 5017              		.thumb_func
 5018              		.fpu softvfp
 5020              	vQueueDelete:
 5021              	.LVL412:
 5022              	.LFB28:
1941:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 5023              		.loc 1 1941 1 is_stmt 1 view -0
 5024              		.cfi_startproc
 5025              		@ args = 0, pretend = 0, frame = 0
 5026              		@ frame_needed = 0, uses_anonymous_args = 0
1942:base/os/FreeRTOS/Source/queue.c **** 
 5027              		.loc 1 1942 1 view .LVU1473
1944:base/os/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 5028              		.loc 1 1944 2 view .LVU1474
 5029 0000 38B1     		cbz	r0, .L386
1941:base/os/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 5030              		.loc 1 1941 1 is_stmt 0 discriminator 2 view .LVU1475
 5031 0002 10B5     		push	{r4, lr}
 5032              	.LCFI54:
ARM GAS  /tmp/ccw4aonF.s 			page 163


 5033              		.cfi_def_cfa_offset 8
 5034              		.cfi_offset 4, -8
 5035              		.cfi_offset 14, -4
 5036 0004 0446     		mov	r4, r0
1944:base/os/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 5037              		.loc 1 1944 25 is_stmt 1 discriminator 2 view .LVU1476
1945:base/os/FreeRTOS/Source/queue.c **** 
 5038              		.loc 1 1945 30 discriminator 2 view .LVU1477
1949:base/os/FreeRTOS/Source/queue.c **** 	}
 5039              		.loc 1 1949 3 discriminator 2 view .LVU1478
 5040 0006 FFF7FEFF 		bl	vQueueUnregisterQueue
 5041              	.LVL413:
1963:base/os/FreeRTOS/Source/queue.c **** 		{
 5042              		.loc 1 1963 3 discriminator 2 view .LVU1479
1963:base/os/FreeRTOS/Source/queue.c **** 		{
 5043              		.loc 1 1963 14 is_stmt 0 discriminator 2 view .LVU1480
 5044 000a 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
1963:base/os/FreeRTOS/Source/queue.c **** 		{
 5045              		.loc 1 1963 5 discriminator 2 view .LVU1481
 5046 000e 4BB1     		cbz	r3, .L387
 5047              	.L380:
1979:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 5048              		.loc 1 1979 1 view .LVU1482
 5049 0010 10BD     		pop	{r4, pc}
 5050              	.LVL414:
 5051              	.L386:
 5052              	.LCFI55:
 5053              		.cfi_def_cfa_offset 0
 5054              		.cfi_restore 4
 5055              		.cfi_restore 14
1944:base/os/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 5056              		.loc 1 1944 2 is_stmt 1 view .LVU1483
 5057              	.LBB246:
 5058              	.LBI246:
 191:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5059              		.loc 2 191 30 view .LVU1484
 5060              	.LBB247:
 193:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5061              		.loc 2 193 1 view .LVU1485
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5062              		.loc 2 195 2 view .LVU1486
 5063              		.syntax unified
 5064              	@ 195 "base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5065 0012 4FF05003 			mov r3, #80												
 5066 0016 83F31188 		msr basepri, r3											
 5067 001a BFF36F8F 		isb														
 5068 001e BFF34F8F 		dsb														
 5069              	
 5070              	@ 0 "" 2
 5071              	.LVL415:
 5072              		.thumb
 5073              		.syntax unified
 5074              	.L382:
 195:base/os/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5075              		.loc 2 195 2 is_stmt 0 view .LVU1487
 5076              	.LBE247:
 5077              	.LBE246:
ARM GAS  /tmp/ccw4aonF.s 			page 164


1944:base/os/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 5078              		.loc 1 1944 2 is_stmt 1 discriminator 1 view .LVU1488
1944:base/os/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 5079              		.loc 1 1944 2 discriminator 1 view .LVU1489
 5080 0022 FEE7     		b	.L382
 5081              	.LVL416:
 5082              	.L387:
 5083              	.LCFI56:
 5084              		.cfi_def_cfa_offset 8
 5085              		.cfi_offset 4, -8
 5086              		.cfi_offset 14, -4
1965:base/os/FreeRTOS/Source/queue.c **** 		}
 5087              		.loc 1 1965 4 view .LVU1490
 5088 0024 2046     		mov	r0, r4
 5089 0026 FFF7FEFF 		bl	vPortFree
 5090              	.LVL417:
1969:base/os/FreeRTOS/Source/queue.c **** 		}
 5091              		.loc 1 1969 28 view .LVU1491
1979:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 5092              		.loc 1 1979 1 is_stmt 0 view .LVU1492
 5093 002a F1E7     		b	.L380
 5094              		.cfi_endproc
 5095              	.LFE28:
 5097              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 5098              		.align	1
 5099              		.global	vQueueWaitForMessageRestricted
 5100              		.syntax unified
 5101              		.thumb
 5102              		.thumb_func
 5103              		.fpu softvfp
 5105              	vQueueWaitForMessageRestricted:
 5106              	.LVL418:
 5107              	.LFB43:
2694:base/os/FreeRTOS/Source/queue.c **** 
2695:base/os/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2696:base/os/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2697:base/os/FreeRTOS/Source/queue.c **** 
2698:base/os/FreeRTOS/Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2699:base/os/FreeRTOS/Source/queue.c **** 
2700:base/os/FreeRTOS/Source/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2701:base/os/FreeRTOS/Source/queue.c **** 	{
 5108              		.loc 1 2701 2 is_stmt 1 view -0
 5109              		.cfi_startproc
 5110              		@ args = 0, pretend = 0, frame = 0
 5111              		@ frame_needed = 0, uses_anonymous_args = 0
 5112              		.loc 1 2701 2 is_stmt 0 view .LVU1494
 5113 0000 70B5     		push	{r4, r5, r6, lr}
 5114              	.LCFI57:
 5115              		.cfi_def_cfa_offset 16
 5116              		.cfi_offset 4, -16
 5117              		.cfi_offset 5, -12
 5118              		.cfi_offset 6, -8
 5119              		.cfi_offset 14, -4
 5120 0002 0446     		mov	r4, r0
 5121 0004 0D46     		mov	r5, r1
 5122 0006 1646     		mov	r6, r2
2702:base/os/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
ARM GAS  /tmp/ccw4aonF.s 			page 165


 5123              		.loc 1 2702 2 is_stmt 1 view .LVU1495
 5124              	.LVL419:
2703:base/os/FreeRTOS/Source/queue.c **** 
2704:base/os/FreeRTOS/Source/queue.c **** 		/* This function should not be called by application code hence the
2705:base/os/FreeRTOS/Source/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2706:base/os/FreeRTOS/Source/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2707:base/os/FreeRTOS/Source/queue.c **** 		It can result in vListInsert() being called on a list that can only
2708:base/os/FreeRTOS/Source/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2709:base/os/FreeRTOS/Source/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2710:base/os/FreeRTOS/Source/queue.c **** 		section. */
2711:base/os/FreeRTOS/Source/queue.c **** 
2712:base/os/FreeRTOS/Source/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2713:base/os/FreeRTOS/Source/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2714:base/os/FreeRTOS/Source/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2715:base/os/FreeRTOS/Source/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2716:base/os/FreeRTOS/Source/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2717:base/os/FreeRTOS/Source/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2718:base/os/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 5125              		.loc 1 2718 3 view .LVU1496
 5126 0008 FFF7FEFF 		bl	vPortEnterCritical
 5127              	.LVL420:
 5128              		.loc 1 2718 3 view .LVU1497
 5129 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 5130 0010 5BB2     		sxtb	r3, r3
 5131 0012 B3F1FF3F 		cmp	r3, #-1
 5132 0016 0DD0     		beq	.L393
 5133              	.L389:
 5134              		.loc 1 2718 3 discriminator 3 view .LVU1498
 5135 0018 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 5136 001c 5BB2     		sxtb	r3, r3
 5137 001e B3F1FF3F 		cmp	r3, #-1
 5138 0022 0BD0     		beq	.L394
 5139              	.L390:
 5140              		.loc 1 2718 3 discriminator 6 view .LVU1499
 5141 0024 FFF7FEFF 		bl	vPortExitCritical
 5142              	.LVL421:
2719:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 5143              		.loc 1 2719 3 discriminator 6 view .LVU1500
 5144              		.loc 1 2719 14 is_stmt 0 discriminator 6 view .LVU1501
 5145 0028 A36B     		ldr	r3, [r4, #56]
 5146              		.loc 1 2719 5 discriminator 6 view .LVU1502
 5147 002a 5BB1     		cbz	r3, .L395
 5148              	.L391:
2720:base/os/FreeRTOS/Source/queue.c **** 		{
2721:base/os/FreeRTOS/Source/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2722:base/os/FreeRTOS/Source/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
2723:base/os/FreeRTOS/Source/queue.c **** 		}
2724:base/os/FreeRTOS/Source/queue.c **** 		else
2725:base/os/FreeRTOS/Source/queue.c **** 		{
2726:base/os/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 5149              		.loc 1 2726 28 is_stmt 1 view .LVU1503
2727:base/os/FreeRTOS/Source/queue.c **** 		}
2728:base/os/FreeRTOS/Source/queue.c **** 		prvUnlockQueue( pxQueue );
 5150              		.loc 1 2728 3 view .LVU1504
 5151 002c 2046     		mov	r0, r4
 5152 002e FFF7FEFF 		bl	prvUnlockQueue
 5153              	.LVL422:
ARM GAS  /tmp/ccw4aonF.s 			page 166


2729:base/os/FreeRTOS/Source/queue.c **** 	}
 5154              		.loc 1 2729 2 is_stmt 0 view .LVU1505
 5155 0032 70BD     		pop	{r4, r5, r6, pc}
 5156              	.LVL423:
 5157              	.L393:
2718:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 5158              		.loc 1 2718 3 is_stmt 1 discriminator 1 view .LVU1506
 5159 0034 0023     		movs	r3, #0
 5160 0036 84F84430 		strb	r3, [r4, #68]
 5161 003a EDE7     		b	.L389
 5162              	.L394:
2718:base/os/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 5163              		.loc 1 2718 3 discriminator 4 view .LVU1507
 5164 003c 0023     		movs	r3, #0
 5165 003e 84F84530 		strb	r3, [r4, #69]
 5166 0042 EFE7     		b	.L390
 5167              	.L395:
2722:base/os/FreeRTOS/Source/queue.c **** 		}
 5168              		.loc 1 2722 4 view .LVU1508
 5169 0044 3246     		mov	r2, r6
 5170 0046 2946     		mov	r1, r5
 5171 0048 04F12400 		add	r0, r4, #36
 5172 004c FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 5173              	.LVL424:
 5174 0050 ECE7     		b	.L391
 5175              		.cfi_endproc
 5176              	.LFE43:
 5178              		.global	xQueueRegistry
 5179              		.section	.bss.xQueueRegistry,"aw",%nobits
 5180              		.align	2
 5181              		.set	.LANCHOR0,. + 0
 5184              	xQueueRegistry:
 5185 0000 00000000 		.space	64
 5185      00000000 
 5185      00000000 
 5185      00000000 
 5185      00000000 
 5186              		.text
 5187              	.Letext0:
 5188              		.file 3 "/usr/lib/gcc/arm-none-eabi/11.1.0/include/stddef.h"
 5189              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 5190              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 5191              		.file 6 "base/os/FreeRTOS/Source/include/FreeRTOS.h"
 5192              		.file 7 "base/os/FreeRTOS/Source/include/list.h"
 5193              		.file 8 "base/os/FreeRTOS/Source/include/task.h"
 5194              		.file 9 "base/os/FreeRTOS/Source/include/queue.h"
 5195              		.file 10 "base/os/FreeRTOS/Source/include/portable.h"
 5196              		.file 11 "/usr/arm-none-eabi/include/string.h"
 5197              		.file 12 "<built-in>"
ARM GAS  /tmp/ccw4aonF.s 			page 167


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/ccw4aonF.s:16     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/ccw4aonF.s:23     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/ccw4aonF.s:58     .text.prvIsQueueFull:0000000000000000 $t
     /tmp/ccw4aonF.s:64     .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/ccw4aonF.s:112    .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/ccw4aonF.s:118    .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/ccw4aonF.s:163    .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/ccw4aonF.s:169    .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/ccw4aonF.s:326    .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/ccw4aonF.s:332    .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/ccw4aonF.s:384    .text.prvUnlockQueue:0000000000000000 $t
     /tmp/ccw4aonF.s:390    .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/ccw4aonF.s:515    .text.xQueueGenericReset:0000000000000000 $t
     /tmp/ccw4aonF.s:522    .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/ccw4aonF.s:664    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/ccw4aonF.s:670    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/ccw4aonF.s:730    .text.xQueueGenericCreateStatic:0000000000000000 $t
     /tmp/ccw4aonF.s:737    .text.xQueueGenericCreateStatic:0000000000000000 xQueueGenericCreateStatic
     /tmp/ccw4aonF.s:952    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/ccw4aonF.s:959    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/ccw4aonF.s:1074   .text.xQueueGetMutexHolder:0000000000000000 $t
     /tmp/ccw4aonF.s:1081   .text.xQueueGetMutexHolder:0000000000000000 xQueueGetMutexHolder
     /tmp/ccw4aonF.s:1127   .text.xQueueGetMutexHolderFromISR:0000000000000000 $t
     /tmp/ccw4aonF.s:1134   .text.xQueueGetMutexHolderFromISR:0000000000000000 xQueueGetMutexHolderFromISR
     /tmp/ccw4aonF.s:1195   .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 $t
     /tmp/ccw4aonF.s:1202   .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 xQueueCreateCountingSemaphoreStatic
     /tmp/ccw4aonF.s:1313   .text.xQueueCreateCountingSemaphore:0000000000000000 $t
     /tmp/ccw4aonF.s:1320   .text.xQueueCreateCountingSemaphore:0000000000000000 xQueueCreateCountingSemaphore
     /tmp/ccw4aonF.s:1419   .text.xQueueGenericSend:0000000000000000 $t
     /tmp/ccw4aonF.s:1426   .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/ccw4aonF.s:1834   .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/ccw4aonF.s:1840   .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/ccw4aonF.s:1888   .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/ccw4aonF.s:1895   .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/ccw4aonF.s:1934   .text.xQueueCreateMutexStatic:0000000000000000 $t
     /tmp/ccw4aonF.s:1941   .text.xQueueCreateMutexStatic:0000000000000000 xQueueCreateMutexStatic
     /tmp/ccw4aonF.s:1993   .text.xQueueGiveMutexRecursive:0000000000000000 $t
     /tmp/ccw4aonF.s:2000   .text.xQueueGiveMutexRecursive:0000000000000000 xQueueGiveMutexRecursive
     /tmp/ccw4aonF.s:2098   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/ccw4aonF.s:2105   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/ccw4aonF.s:2359   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/ccw4aonF.s:2366   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/ccw4aonF.s:2634   .text.xQueueReceive:0000000000000000 $t
     /tmp/ccw4aonF.s:2641   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/ccw4aonF.s:3012   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/ccw4aonF.s:3019   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/ccw4aonF.s:3483   .text.xQueueTakeMutexRecursive:0000000000000000 $t
     /tmp/ccw4aonF.s:3490   .text.xQueueTakeMutexRecursive:0000000000000000 xQueueTakeMutexRecursive
     /tmp/ccw4aonF.s:3601   .text.xQueuePeek:0000000000000000 $t
     /tmp/ccw4aonF.s:3608   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/ccw4aonF.s:3981   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/ccw4aonF.s:3988   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/ccw4aonF.s:4208   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/ccw4aonF.s:4215   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/ccw4aonF.s:4409   .text.uxQueueMessagesWaiting:0000000000000000 $t
ARM GAS  /tmp/ccw4aonF.s 			page 168


     /tmp/ccw4aonF.s:4416   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/ccw4aonF.s:4483   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/ccw4aonF.s:4490   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/ccw4aonF.s:4562   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/ccw4aonF.s:4569   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/ccw4aonF.s:4619   .text.uxQueueGetQueueNumber:0000000000000000 $t
     /tmp/ccw4aonF.s:4626   .text.uxQueueGetQueueNumber:0000000000000000 uxQueueGetQueueNumber
     /tmp/ccw4aonF.s:4644   .text.vQueueSetQueueNumber:0000000000000000 $t
     /tmp/ccw4aonF.s:4651   .text.vQueueSetQueueNumber:0000000000000000 vQueueSetQueueNumber
     /tmp/ccw4aonF.s:4668   .text.ucQueueGetQueueType:0000000000000000 $t
     /tmp/ccw4aonF.s:4675   .text.ucQueueGetQueueType:0000000000000000 ucQueueGetQueueType
     /tmp/ccw4aonF.s:4693   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/ccw4aonF.s:4700   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/ccw4aonF.s:4760   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/ccw4aonF.s:4767   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/ccw4aonF.s:4830   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/ccw4aonF.s:4837   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/ccw4aonF.s:4884   .text.vQueueAddToRegistry:0000000000000024 $d
     /tmp/ccw4aonF.s:4889   .text.pcQueueGetName:0000000000000000 $t
     /tmp/ccw4aonF.s:4896   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/ccw4aonF.s:4947   .text.pcQueueGetName:0000000000000024 $d
     /tmp/ccw4aonF.s:4952   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/ccw4aonF.s:4959   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/ccw4aonF.s:5008   .text.vQueueUnregisterQueue:0000000000000028 $d
     /tmp/ccw4aonF.s:5013   .text.vQueueDelete:0000000000000000 $t
     /tmp/ccw4aonF.s:5020   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/ccw4aonF.s:5098   .text.vQueueWaitForMessageRestricted:0000000000000000 $t
     /tmp/ccw4aonF.s:5105   .text.vQueueWaitForMessageRestricted:0000000000000000 vQueueWaitForMessageRestricted
     /tmp/ccw4aonF.s:5184   .bss.xQueueRegistry:0000000000000000 xQueueRegistry
     /tmp/ccw4aonF.s:5180   .bss.xQueueRegistry:0000000000000000 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
vTaskPlaceOnEventListRestricted
