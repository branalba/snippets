ARM GAS  /tmp/ccSbJIsV.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"SEGGER_RTT_printf.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._StoreChar,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_StoreChar:
  24              	.LVL0:
  25              	.LFB0:
  26              		.file 1 "base/debug/RTT/SEGGER_RTT_printf.c"
   1:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
   2:base/debug/RTT/SEGGER_RTT_printf.c **** *                    SEGGER Microcontroller GmbH                     *
   3:base/debug/RTT/SEGGER_RTT_printf.c **** *                        The Embedded Experts                        *
   4:base/debug/RTT/SEGGER_RTT_printf.c **** **********************************************************************
   5:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
   6:base/debug/RTT/SEGGER_RTT_printf.c **** *            (c) 1995 - 2019 SEGGER Microcontroller GmbH             *
   7:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
   8:base/debug/RTT/SEGGER_RTT_printf.c **** *       www.segger.com     Support: support@segger.com               *
   9:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
  10:base/debug/RTT/SEGGER_RTT_printf.c **** **********************************************************************
  11:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
  12:base/debug/RTT/SEGGER_RTT_printf.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
  14:base/debug/RTT/SEGGER_RTT_printf.c **** **********************************************************************
  15:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
  16:base/debug/RTT/SEGGER_RTT_printf.c **** * All rights reserved.                                               *
  17:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
  18:base/debug/RTT/SEGGER_RTT_printf.c **** * SEGGER strongly recommends to not make any changes                 *
  19:base/debug/RTT/SEGGER_RTT_printf.c **** * to or modify the source code of this software in order to stay     *
  20:base/debug/RTT/SEGGER_RTT_printf.c **** * compatible with the RTT protocol and J-Link.                       *
  21:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
  22:base/debug/RTT/SEGGER_RTT_printf.c **** * Redistribution and use in source and binary forms, with or         *
  23:base/debug/RTT/SEGGER_RTT_printf.c **** * without modification, are permitted provided that the following    *
  24:base/debug/RTT/SEGGER_RTT_printf.c **** * condition is met:                                                  *
  25:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
  26:base/debug/RTT/SEGGER_RTT_printf.c **** * o Redistributions of source code must retain the above copyright   *
  27:base/debug/RTT/SEGGER_RTT_printf.c **** *   notice, this condition and the following disclaimer.             *
  28:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
  29:base/debug/RTT/SEGGER_RTT_printf.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  30:base/debug/RTT/SEGGER_RTT_printf.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  31:base/debug/RTT/SEGGER_RTT_printf.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  32:base/debug/RTT/SEGGER_RTT_printf.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
ARM GAS  /tmp/ccSbJIsV.s 			page 2


  33:base/debug/RTT/SEGGER_RTT_printf.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  34:base/debug/RTT/SEGGER_RTT_printf.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  35:base/debug/RTT/SEGGER_RTT_printf.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  36:base/debug/RTT/SEGGER_RTT_printf.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  37:base/debug/RTT/SEGGER_RTT_printf.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  38:base/debug/RTT/SEGGER_RTT_printf.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  39:base/debug/RTT/SEGGER_RTT_printf.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  40:base/debug/RTT/SEGGER_RTT_printf.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  41:base/debug/RTT/SEGGER_RTT_printf.c **** * DAMAGE.                                                            *
  42:base/debug/RTT/SEGGER_RTT_printf.c **** *                                                                    *
  43:base/debug/RTT/SEGGER_RTT_printf.c **** **********************************************************************
  44:base/debug/RTT/SEGGER_RTT_printf.c **** ---------------------------END-OF-HEADER------------------------------
  45:base/debug/RTT/SEGGER_RTT_printf.c **** File    : SEGGER_RTT_printf.c
  46:base/debug/RTT/SEGGER_RTT_printf.c **** Purpose : Replacement for printf to write formatted data via RTT
  47:base/debug/RTT/SEGGER_RTT_printf.c **** Revision: $Rev: 17697 $
  48:base/debug/RTT/SEGGER_RTT_printf.c **** ----------------------------------------------------------------------
  49:base/debug/RTT/SEGGER_RTT_printf.c **** */
  50:base/debug/RTT/SEGGER_RTT_printf.c **** #include "SEGGER_RTT.h"
  51:base/debug/RTT/SEGGER_RTT_printf.c **** #include "SEGGER_RTT_Conf.h"
  52:base/debug/RTT/SEGGER_RTT_printf.c **** 
  53:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
  54:base/debug/RTT/SEGGER_RTT_printf.c **** *
  55:base/debug/RTT/SEGGER_RTT_printf.c **** *       Defines, configurable
  56:base/debug/RTT/SEGGER_RTT_printf.c **** *
  57:base/debug/RTT/SEGGER_RTT_printf.c **** **********************************************************************
  58:base/debug/RTT/SEGGER_RTT_printf.c **** */
  59:base/debug/RTT/SEGGER_RTT_printf.c **** 
  60:base/debug/RTT/SEGGER_RTT_printf.c **** #ifndef SEGGER_RTT_PRINTF_BUFFER_SIZE
  61:base/debug/RTT/SEGGER_RTT_printf.c ****   #define SEGGER_RTT_PRINTF_BUFFER_SIZE (64)
  62:base/debug/RTT/SEGGER_RTT_printf.c **** #endif
  63:base/debug/RTT/SEGGER_RTT_printf.c **** 
  64:base/debug/RTT/SEGGER_RTT_printf.c **** #include <stdlib.h>
  65:base/debug/RTT/SEGGER_RTT_printf.c **** #include <stdarg.h>
  66:base/debug/RTT/SEGGER_RTT_printf.c **** 
  67:base/debug/RTT/SEGGER_RTT_printf.c **** 
  68:base/debug/RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_LEFT_JUSTIFY   (1u << 0)
  69:base/debug/RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PAD_ZERO       (1u << 1)
  70:base/debug/RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PRINT_SIGN     (1u << 2)
  71:base/debug/RTT/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_ALTERNATE      (1u << 3)
  72:base/debug/RTT/SEGGER_RTT_printf.c **** 
  73:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
  74:base/debug/RTT/SEGGER_RTT_printf.c **** *
  75:base/debug/RTT/SEGGER_RTT_printf.c **** *       Types
  76:base/debug/RTT/SEGGER_RTT_printf.c **** *
  77:base/debug/RTT/SEGGER_RTT_printf.c **** **********************************************************************
  78:base/debug/RTT/SEGGER_RTT_printf.c **** */
  79:base/debug/RTT/SEGGER_RTT_printf.c **** 
  80:base/debug/RTT/SEGGER_RTT_printf.c **** typedef struct {
  81:base/debug/RTT/SEGGER_RTT_printf.c ****   char*     pBuffer;
  82:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned  BufferSize;
  83:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned  Cnt;
  84:base/debug/RTT/SEGGER_RTT_printf.c **** 
  85:base/debug/RTT/SEGGER_RTT_printf.c ****   int   ReturnValue;
  86:base/debug/RTT/SEGGER_RTT_printf.c **** 
  87:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned RTTBufferIndex;
  88:base/debug/RTT/SEGGER_RTT_printf.c **** } SEGGER_RTT_PRINTF_DESC;
  89:base/debug/RTT/SEGGER_RTT_printf.c **** 
ARM GAS  /tmp/ccSbJIsV.s 			page 3


  90:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
  91:base/debug/RTT/SEGGER_RTT_printf.c **** *
  92:base/debug/RTT/SEGGER_RTT_printf.c **** *       Function prototypes
  93:base/debug/RTT/SEGGER_RTT_printf.c **** *
  94:base/debug/RTT/SEGGER_RTT_printf.c **** **********************************************************************
  95:base/debug/RTT/SEGGER_RTT_printf.c **** */
  96:base/debug/RTT/SEGGER_RTT_printf.c **** 
  97:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
  98:base/debug/RTT/SEGGER_RTT_printf.c **** *
  99:base/debug/RTT/SEGGER_RTT_printf.c **** *       Static code
 100:base/debug/RTT/SEGGER_RTT_printf.c **** *
 101:base/debug/RTT/SEGGER_RTT_printf.c **** **********************************************************************
 102:base/debug/RTT/SEGGER_RTT_printf.c **** */
 103:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 104:base/debug/RTT/SEGGER_RTT_printf.c **** *
 105:base/debug/RTT/SEGGER_RTT_printf.c **** *       _StoreChar
 106:base/debug/RTT/SEGGER_RTT_printf.c **** */
 107:base/debug/RTT/SEGGER_RTT_printf.c **** static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
  27              		.loc 1 107 60 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 107 60 is_stmt 0 view .LVU1
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 0446     		mov	r4, r0
 108:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned Cnt;
  38              		.loc 1 108 3 is_stmt 1 view .LVU2
 109:base/debug/RTT/SEGGER_RTT_printf.c **** 
 110:base/debug/RTT/SEGGER_RTT_printf.c ****   Cnt = p->Cnt;
  39              		.loc 1 110 3 view .LVU3
  40              		.loc 1 110 7 is_stmt 0 view .LVU4
  41 0004 8268     		ldr	r2, [r0, #8]
  42              	.LVL1:
 111:base/debug/RTT/SEGGER_RTT_printf.c ****   if ((Cnt + 1u) <= p->BufferSize) {
  43              		.loc 1 111 3 is_stmt 1 view .LVU5
  44              		.loc 1 111 12 is_stmt 0 view .LVU6
  45 0006 531C     		adds	r3, r2, #1
  46              		.loc 1 111 22 view .LVU7
  47 0008 4068     		ldr	r0, [r0, #4]
  48              	.LVL2:
  49              		.loc 1 111 6 view .LVU8
  50 000a 8342     		cmp	r3, r0
  51 000c 05D8     		bhi	.L2
 112:base/debug/RTT/SEGGER_RTT_printf.c ****     *(p->pBuffer + Cnt) = c;
  52              		.loc 1 112 5 is_stmt 1 view .LVU9
  53              		.loc 1 112 8 is_stmt 0 view .LVU10
  54 000e 2068     		ldr	r0, [r4]
  55              		.loc 1 112 25 view .LVU11
  56 0010 8154     		strb	r1, [r0, r2]
 113:base/debug/RTT/SEGGER_RTT_printf.c ****     p->Cnt = Cnt + 1u;
  57              		.loc 1 113 5 is_stmt 1 view .LVU12
  58              		.loc 1 113 12 is_stmt 0 view .LVU13
  59 0012 A360     		str	r3, [r4, #8]
ARM GAS  /tmp/ccSbJIsV.s 			page 4


 114:base/debug/RTT/SEGGER_RTT_printf.c ****     p->ReturnValue++;
  60              		.loc 1 114 5 is_stmt 1 view .LVU14
  61              		.loc 1 114 6 is_stmt 0 view .LVU15
  62 0014 E368     		ldr	r3, [r4, #12]
  63              		.loc 1 114 19 view .LVU16
  64 0016 0133     		adds	r3, r3, #1
  65 0018 E360     		str	r3, [r4, #12]
  66              	.L2:
 115:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 116:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 117:base/debug/RTT/SEGGER_RTT_printf.c ****   // Write part of string, when the buffer is full
 118:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 119:base/debug/RTT/SEGGER_RTT_printf.c ****   if (p->Cnt == p->BufferSize) {
  67              		.loc 1 119 3 is_stmt 1 view .LVU17
  68              		.loc 1 119 8 is_stmt 0 view .LVU18
  69 001a A268     		ldr	r2, [r4, #8]
  70              	.LVL3:
  71              		.loc 1 119 18 view .LVU19
  72 001c 6368     		ldr	r3, [r4, #4]
  73              		.loc 1 119 6 view .LVU20
  74 001e 9A42     		cmp	r2, r3
  75 0020 00D0     		beq	.L6
  76              	.LVL4:
  77              	.L1:
 120:base/debug/RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
 121:base/debug/RTT/SEGGER_RTT_printf.c ****       p->ReturnValue = -1;
 122:base/debug/RTT/SEGGER_RTT_printf.c ****     } else {
 123:base/debug/RTT/SEGGER_RTT_printf.c ****       p->Cnt = 0u;
 124:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 125:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 126:base/debug/RTT/SEGGER_RTT_printf.c **** }
  78              		.loc 1 126 1 view .LVU21
  79 0022 10BD     		pop	{r4, pc}
  80              	.LVL5:
  81              	.L6:
 120:base/debug/RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  82              		.loc 1 120 5 is_stmt 1 view .LVU22
 120:base/debug/RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  83              		.loc 1 120 9 is_stmt 0 view .LVU23
  84 0024 2168     		ldr	r1, [r4]
  85              	.LVL6:
 120:base/debug/RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  86              		.loc 1 120 9 view .LVU24
  87 0026 2069     		ldr	r0, [r4, #16]
  88 0028 FFF7FEFF 		bl	SEGGER_RTT_Write
  89              	.LVL7:
 120:base/debug/RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  90              		.loc 1 120 69 view .LVU25
  91 002c A368     		ldr	r3, [r4, #8]
 120:base/debug/RTT/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  92              		.loc 1 120 8 view .LVU26
  93 002e 9842     		cmp	r0, r3
  94 0030 03D0     		beq	.L4
 121:base/debug/RTT/SEGGER_RTT_printf.c ****     } else {
  95              		.loc 1 121 7 is_stmt 1 view .LVU27
 121:base/debug/RTT/SEGGER_RTT_printf.c ****     } else {
  96              		.loc 1 121 22 is_stmt 0 view .LVU28
ARM GAS  /tmp/ccSbJIsV.s 			page 5


  97 0032 4FF0FF33 		mov	r3, #-1
  98 0036 E360     		str	r3, [r4, #12]
  99 0038 F3E7     		b	.L1
 100              	.L4:
 123:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 101              		.loc 1 123 7 is_stmt 1 view .LVU29
 123:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 102              		.loc 1 123 14 is_stmt 0 view .LVU30
 103 003a 0023     		movs	r3, #0
 104 003c A360     		str	r3, [r4, #8]
 105              		.loc 1 126 1 view .LVU31
 106 003e F0E7     		b	.L1
 107              		.cfi_endproc
 108              	.LFE0:
 110              		.section	.text._PrintUnsigned,"ax",%progbits
 111              		.align	1
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	_PrintUnsigned:
 118              	.LVL8:
 119              	.LFB1:
 127:base/debug/RTT/SEGGER_RTT_printf.c **** 
 128:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 129:base/debug/RTT/SEGGER_RTT_printf.c **** *
 130:base/debug/RTT/SEGGER_RTT_printf.c **** *       _PrintUnsigned
 131:base/debug/RTT/SEGGER_RTT_printf.c **** */
 132:base/debug/RTT/SEGGER_RTT_printf.c **** static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigne
 120              		.loc 1 132 156 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 8, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		.loc 1 132 156 is_stmt 0 view .LVU33
 125 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 126              	.LCFI1:
 127              		.cfi_def_cfa_offset 40
 128              		.cfi_offset 3, -40
 129              		.cfi_offset 4, -36
 130              		.cfi_offset 5, -32
 131              		.cfi_offset 6, -28
 132              		.cfi_offset 7, -24
 133              		.cfi_offset 8, -20
 134              		.cfi_offset 9, -16
 135              		.cfi_offset 10, -12
 136              		.cfi_offset 11, -8
 137              		.cfi_offset 14, -4
 138 0004 8146     		mov	r9, r0
 139 0006 0F46     		mov	r7, r1
 140 0008 1546     		mov	r5, r2
 141 000a 1E46     		mov	r6, r3
 142 000c DDF828A0 		ldr	r10, [sp, #40]
 143 0010 0B9A     		ldr	r2, [sp, #44]
 144              	.LVL9:
 133:base/debug/RTT/SEGGER_RTT_printf.c ****   static const char _aV2C[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', '
 145              		.loc 1 133 3 is_stmt 1 view .LVU34
 134:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned Div;
ARM GAS  /tmp/ccSbJIsV.s 			page 6


 146              		.loc 1 134 3 view .LVU35
 135:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned Digit;
 147              		.loc 1 135 3 view .LVU36
 136:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned Number;
 148              		.loc 1 136 3 view .LVU37
 137:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned Width;
 149              		.loc 1 137 3 view .LVU38
 138:base/debug/RTT/SEGGER_RTT_printf.c ****   char c;
 150              		.loc 1 138 3 view .LVU39
 139:base/debug/RTT/SEGGER_RTT_printf.c **** 
 140:base/debug/RTT/SEGGER_RTT_printf.c ****   Number = v;
 151              		.loc 1 140 3 view .LVU40
 141:base/debug/RTT/SEGGER_RTT_printf.c ****   Digit = 1u;
 152              		.loc 1 141 3 view .LVU41
 142:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 143:base/debug/RTT/SEGGER_RTT_printf.c ****   // Get actual field width
 144:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 145:base/debug/RTT/SEGGER_RTT_printf.c ****   Width = 1u;
 153              		.loc 1 145 3 view .LVU42
 146:base/debug/RTT/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 154              		.loc 1 146 3 view .LVU43
 140:base/debug/RTT/SEGGER_RTT_printf.c ****   Digit = 1u;
 155              		.loc 1 140 10 is_stmt 0 view .LVU44
 156 0012 0B46     		mov	r3, r1
 157              	.LVL10:
 145:base/debug/RTT/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 158              		.loc 1 145 9 view .LVU45
 159 0014 4FF00108 		mov	r8, #1
 160              		.loc 1 146 9 view .LVU46
 161 0018 03E0     		b	.L8
 162              	.LVL11:
 163              	.L9:
 147:base/debug/RTT/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 164              		.loc 1 147 5 is_stmt 1 view .LVU47
 165              		.loc 1 147 12 is_stmt 0 view .LVU48
 166 001a B3FBF5F3 		udiv	r3, r3, r5
 167              	.LVL12:
 148:base/debug/RTT/SEGGER_RTT_printf.c ****     Width++;
 168              		.loc 1 148 5 is_stmt 1 view .LVU49
 169              		.loc 1 148 10 is_stmt 0 view .LVU50
 170 001e 08F10108 		add	r8, r8, #1
 171              	.LVL13:
 172              	.L8:
 146:base/debug/RTT/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 173              		.loc 1 146 17 is_stmt 1 view .LVU51
 174 0022 AB42     		cmp	r3, r5
 175 0024 F9D2     		bcs	.L9
 149:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 150:base/debug/RTT/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 176              		.loc 1 150 3 view .LVU52
 177              		.loc 1 150 6 is_stmt 0 view .LVU53
 178 0026 B045     		cmp	r8, r6
 179 0028 00D2     		bcs	.L10
 151:base/debug/RTT/SEGGER_RTT_printf.c ****     Width = NumDigits;
 180              		.loc 1 151 11 view .LVU54
 181 002a B046     		mov	r8, r6
 182              	.LVL14:
ARM GAS  /tmp/ccSbJIsV.s 			page 7


 183              	.L10:
 152:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 153:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 154:base/debug/RTT/SEGGER_RTT_printf.c ****   // Print leading chars if necessary
 155:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 156:base/debug/RTT/SEGGER_RTT_printf.c ****   if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) {
 184              		.loc 1 156 3 is_stmt 1 view .LVU55
 185              		.loc 1 156 6 is_stmt 0 view .LVU56
 186 002c 12F0010B 		ands	fp, r2, #1
 187 0030 18D1     		bne	.L11
 157:base/debug/RTT/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 188              		.loc 1 157 5 is_stmt 1 view .LVU57
 189              		.loc 1 157 8 is_stmt 0 view .LVU58
 190 0032 BAF1000F 		cmp	r10, #0
 191 0036 15D0     		beq	.L11
 158:base/debug/RTT/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
 192              		.loc 1 158 7 is_stmt 1 view .LVU59
 193              		.loc 1 158 10 is_stmt 0 view .LVU60
 194 0038 12F0020F 		tst	r2, #2
 195 003c 02D0     		beq	.L24
 196              		.loc 1 158 74 discriminator 1 view .LVU61
 197 003e BEB1     		cbz	r6, .L25
 159:base/debug/RTT/SEGGER_RTT_printf.c ****         c = '0';
 160:base/debug/RTT/SEGGER_RTT_printf.c ****       } else {
 161:base/debug/RTT/SEGGER_RTT_printf.c ****         c = ' ';
 198              		.loc 1 161 11 view .LVU62
 199 0040 2024     		movs	r4, #32
 200 0042 00E0     		b	.L13
 201              	.L24:
 202 0044 2024     		movs	r4, #32
 203              	.LVL15:
 204              	.L13:
 162:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 163:base/debug/RTT/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 205              		.loc 1 163 33 is_stmt 1 view .LVU63
 206 0046 BAF1000F 		cmp	r10, #0
 207 004a 0BD0     		beq	.L11
 208              		.loc 1 163 33 is_stmt 0 discriminator 1 view .LVU64
 209 004c C245     		cmp	r10, r8
 210 004e 09D9     		bls	.L11
 164:base/debug/RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 211              		.loc 1 164 9 is_stmt 1 view .LVU65
 212              		.loc 1 164 19 is_stmt 0 view .LVU66
 213 0050 0AF1FF3A 		add	r10, r10, #-1
 214              	.LVL16:
 165:base/debug/RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, c);
 215              		.loc 1 165 9 is_stmt 1 view .LVU67
 216 0054 2146     		mov	r1, r4
 217 0056 4846     		mov	r0, r9
 218 0058 FFF7FEFF 		bl	_StoreChar
 219              	.LVL17:
 166:base/debug/RTT/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 220              		.loc 1 166 9 view .LVU68
 221              		.loc 1 166 24 is_stmt 0 view .LVU69
 222 005c D9F80C30 		ldr	r3, [r9, #12]
 223              		.loc 1 166 12 view .LVU70
 224 0060 002B     		cmp	r3, #0
ARM GAS  /tmp/ccSbJIsV.s 			page 8


 225 0062 F0DA     		bge	.L13
 226              	.LVL18:
 227              	.L11:
 167:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 168:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 169:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 170:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 171:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 172:base/debug/RTT/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 228              		.loc 1 172 3 is_stmt 1 view .LVU71
 229              		.loc 1 172 18 is_stmt 0 view .LVU72
 230 0064 D9F80C30 		ldr	r3, [r9, #12]
 231              		.loc 1 172 6 view .LVU73
 232 0068 002B     		cmp	r3, #0
 233 006a 25DB     		blt	.L7
 141:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 234              		.loc 1 141 9 view .LVU74
 235 006c 0124     		movs	r4, #1
 236 006e 04E0     		b	.L19
 237              	.LVL19:
 238              	.L25:
 159:base/debug/RTT/SEGGER_RTT_printf.c ****       } else {
 239              		.loc 1 159 11 view .LVU75
 240 0070 3024     		movs	r4, #48
 241 0072 E8E7     		b	.L13
 242              	.LVL20:
 243              	.L28:
 173:base/debug/RTT/SEGGER_RTT_printf.c ****     //
 174:base/debug/RTT/SEGGER_RTT_printf.c ****     // Compute Digit.
 175:base/debug/RTT/SEGGER_RTT_printf.c ****     // Loop until Digit has the value of the highest digit required.
 176:base/debug/RTT/SEGGER_RTT_printf.c ****     // Example: If the output is 345 (Base 10), loop 2 times until Digit is 100.
 177:base/debug/RTT/SEGGER_RTT_printf.c ****     //
 178:base/debug/RTT/SEGGER_RTT_printf.c ****     while (1) {
 179:base/debug/RTT/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 180:base/debug/RTT/SEGGER_RTT_printf.c ****         NumDigits--;
 244              		.loc 1 180 9 is_stmt 1 view .LVU76
 245              		.loc 1 180 18 is_stmt 0 view .LVU77
 246 0074 013E     		subs	r6, r6, #1
 247              	.LVL21:
 248              	.L17:
 181:base/debug/RTT/SEGGER_RTT_printf.c ****       } else {
 182:base/debug/RTT/SEGGER_RTT_printf.c ****         Div = v / Digit;
 183:base/debug/RTT/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 184:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 185:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 186:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 187:base/debug/RTT/SEGGER_RTT_printf.c ****       Digit *= Base;
 249              		.loc 1 187 7 is_stmt 1 view .LVU78
 250              		.loc 1 187 13 is_stmt 0 view .LVU79
 251 0076 05FB04F4 		mul	r4, r5, r4
 252              	.LVL22:
 178:base/debug/RTT/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 253              		.loc 1 178 11 is_stmt 1 view .LVU80
 254              	.L19:
 178:base/debug/RTT/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 255              		.loc 1 178 5 view .LVU81
 179:base/debug/RTT/SEGGER_RTT_printf.c ****         NumDigits--;
ARM GAS  /tmp/ccSbJIsV.s 			page 9


 256              		.loc 1 179 7 view .LVU82
 179:base/debug/RTT/SEGGER_RTT_printf.c ****         NumDigits--;
 257              		.loc 1 179 10 is_stmt 0 view .LVU83
 258 007a 012E     		cmp	r6, #1
 259 007c FAD8     		bhi	.L28
 182:base/debug/RTT/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 260              		.loc 1 182 9 is_stmt 1 view .LVU84
 182:base/debug/RTT/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 261              		.loc 1 182 13 is_stmt 0 view .LVU85
 262 007e B7FBF4F3 		udiv	r3, r7, r4
 263              	.LVL23:
 183:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 264              		.loc 1 183 9 is_stmt 1 view .LVU86
 183:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 265              		.loc 1 183 12 is_stmt 0 view .LVU87
 266 0082 9D42     		cmp	r5, r3
 267 0084 F7D9     		bls	.L17
 268 0086 00E0     		b	.L18
 269              	.LVL24:
 270              	.L26:
 188:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 189:base/debug/RTT/SEGGER_RTT_printf.c ****     //
 190:base/debug/RTT/SEGGER_RTT_printf.c ****     // Output digits
 191:base/debug/RTT/SEGGER_RTT_printf.c ****     //
 192:base/debug/RTT/SEGGER_RTT_printf.c ****     do {
 193:base/debug/RTT/SEGGER_RTT_printf.c ****       Div = v / Digit;
 194:base/debug/RTT/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 195:base/debug/RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 196:base/debug/RTT/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 197:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 198:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 199:base/debug/RTT/SEGGER_RTT_printf.c ****       Digit /= Base;
 271              		.loc 1 199 13 view .LVU88
 272 0088 1C46     		mov	r4, r3
 273              	.LVL25:
 274              	.L18:
 192:base/debug/RTT/SEGGER_RTT_printf.c ****       Div = v / Digit;
 275              		.loc 1 192 5 is_stmt 1 view .LVU89
 193:base/debug/RTT/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 276              		.loc 1 193 7 view .LVU90
 193:base/debug/RTT/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 277              		.loc 1 193 11 is_stmt 0 view .LVU91
 278 008a B7FBF4F3 		udiv	r3, r7, r4
 279              	.LVL26:
 194:base/debug/RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 280              		.loc 1 194 7 is_stmt 1 view .LVU92
 281 008e 04FB1377 		mls	r7, r4, r3, r7
 282              	.LVL27:
 195:base/debug/RTT/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 283              		.loc 1 195 7 view .LVU93
 284 0092 124A     		ldr	r2, .L29
 285 0094 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 286 0096 4846     		mov	r0, r9
 287 0098 FFF7FEFF 		bl	_StoreChar
 288              	.LVL28:
 196:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 289              		.loc 1 196 7 view .LVU94
ARM GAS  /tmp/ccSbJIsV.s 			page 10


 196:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 290              		.loc 1 196 22 is_stmt 0 view .LVU95
 291 009c D9F80C30 		ldr	r3, [r9, #12]
 196:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 292              		.loc 1 196 10 view .LVU96
 293 00a0 002B     		cmp	r3, #0
 294 00a2 03DB     		blt	.L20
 295              		.loc 1 199 7 is_stmt 1 view .LVU97
 296              		.loc 1 199 13 is_stmt 0 view .LVU98
 297 00a4 B4FBF5F3 		udiv	r3, r4, r5
 298              	.LVL29:
 200:base/debug/RTT/SEGGER_RTT_printf.c ****     } while (Digit);
 299              		.loc 1 200 14 is_stmt 1 view .LVU99
 300 00a8 AC42     		cmp	r4, r5
 301 00aa EDD2     		bcs	.L26
 302              	.LVL30:
 303              	.L20:
 201:base/debug/RTT/SEGGER_RTT_printf.c ****     //
 202:base/debug/RTT/SEGGER_RTT_printf.c ****     // Print trailing spaces if necessary
 203:base/debug/RTT/SEGGER_RTT_printf.c ****     //
 204:base/debug/RTT/SEGGER_RTT_printf.c ****     if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == FORMAT_FLAG_LEFT_JUSTIFY) {
 304              		.loc 1 204 5 view .LVU100
 305              		.loc 1 204 8 is_stmt 0 view .LVU101
 306 00ac BBF1000F 		cmp	fp, #0
 307 00b0 02D0     		beq	.L7
 205:base/debug/RTT/SEGGER_RTT_printf.c ****       if (FieldWidth != 0u) {
 308              		.loc 1 205 7 is_stmt 1 view .LVU102
 309              		.loc 1 205 10 is_stmt 0 view .LVU103
 310 00b2 BAF1000F 		cmp	r10, #0
 311 00b6 01D1     		bne	.L21
 312              	.L7:
 206:base/debug/RTT/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 207:base/debug/RTT/SEGGER_RTT_printf.c ****           FieldWidth--;
 208:base/debug/RTT/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 209:base/debug/RTT/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 210:base/debug/RTT/SEGGER_RTT_printf.c ****             break;
 211:base/debug/RTT/SEGGER_RTT_printf.c ****           }
 212:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 213:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 214:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 215:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 216:base/debug/RTT/SEGGER_RTT_printf.c **** }
 313              		.loc 1 216 1 view .LVU104
 314 00b8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 315              	.LVL31:
 316              	.L21:
 206:base/debug/RTT/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 317              		.loc 1 206 35 is_stmt 1 view .LVU105
 318 00bc BAF1000F 		cmp	r10, #0
 319 00c0 FAD0     		beq	.L7
 206:base/debug/RTT/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 320              		.loc 1 206 35 is_stmt 0 discriminator 1 view .LVU106
 321 00c2 C245     		cmp	r10, r8
 322 00c4 F8D9     		bls	.L7
 207:base/debug/RTT/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 323              		.loc 1 207 11 is_stmt 1 view .LVU107
 207:base/debug/RTT/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
ARM GAS  /tmp/ccSbJIsV.s 			page 11


 324              		.loc 1 207 21 is_stmt 0 view .LVU108
 325 00c6 0AF1FF3A 		add	r10, r10, #-1
 326              	.LVL32:
 208:base/debug/RTT/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 327              		.loc 1 208 11 is_stmt 1 view .LVU109
 328 00ca 2021     		movs	r1, #32
 329 00cc 4846     		mov	r0, r9
 330 00ce FFF7FEFF 		bl	_StoreChar
 331              	.LVL33:
 209:base/debug/RTT/SEGGER_RTT_printf.c ****             break;
 332              		.loc 1 209 11 view .LVU110
 209:base/debug/RTT/SEGGER_RTT_printf.c ****             break;
 333              		.loc 1 209 26 is_stmt 0 view .LVU111
 334 00d2 D9F80C30 		ldr	r3, [r9, #12]
 209:base/debug/RTT/SEGGER_RTT_printf.c ****             break;
 335              		.loc 1 209 14 view .LVU112
 336 00d6 002B     		cmp	r3, #0
 337 00d8 F0DA     		bge	.L21
 338 00da EDE7     		b	.L7
 339              	.L30:
 340              		.align	2
 341              	.L29:
 342 00dc 00000000 		.word	.LANCHOR0
 343              		.cfi_endproc
 344              	.LFE1:
 346              		.section	.text._PrintInt,"ax",%progbits
 347              		.align	1
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 353              	_PrintInt:
 354              	.LVL34:
 355              	.LFB2:
 217:base/debug/RTT/SEGGER_RTT_printf.c **** 
 218:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 219:base/debug/RTT/SEGGER_RTT_printf.c **** *
 220:base/debug/RTT/SEGGER_RTT_printf.c **** *       _PrintInt
 221:base/debug/RTT/SEGGER_RTT_printf.c **** */
 222:base/debug/RTT/SEGGER_RTT_printf.c **** static void _PrintInt(SEGGER_RTT_PRINTF_DESC * pBufferDesc, int v, unsigned Base, unsigned NumDigit
 356              		.loc 1 222 146 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 8, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		.loc 1 222 146 is_stmt 0 view .LVU114
 361 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 362              	.LCFI2:
 363              		.cfi_def_cfa_offset 32
 364              		.cfi_offset 4, -32
 365              		.cfi_offset 5, -28
 366              		.cfi_offset 6, -24
 367              		.cfi_offset 7, -20
 368              		.cfi_offset 8, -16
 369              		.cfi_offset 9, -12
 370              		.cfi_offset 10, -8
 371              		.cfi_offset 14, -4
 372 0004 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccSbJIsV.s 			page 12


 373              	.LCFI3:
 374              		.cfi_def_cfa_offset 40
 375 0006 0746     		mov	r7, r0
 376 0008 8846     		mov	r8, r1
 377 000a 1546     		mov	r5, r2
 378 000c 9946     		mov	r9, r3
 379 000e 0A9E     		ldr	r6, [sp, #40]
 380 0010 DDF82CA0 		ldr	r10, [sp, #44]
 223:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned Width;
 381              		.loc 1 223 3 is_stmt 1 view .LVU115
 224:base/debug/RTT/SEGGER_RTT_printf.c ****   int Number;
 382              		.loc 1 224 3 view .LVU116
 225:base/debug/RTT/SEGGER_RTT_printf.c **** 
 226:base/debug/RTT/SEGGER_RTT_printf.c ****   Number = (v < 0) ? -v : v;
 383              		.loc 1 226 3 view .LVU117
 384              		.loc 1 226 10 is_stmt 0 view .LVU118
 385 0014 81EAE17C 		eor	ip, r1, r1, asr #31
 386 0018 ACEBE17C 		sub	ip, ip, r1, asr #31
 387              	.LVL35:
 227:base/debug/RTT/SEGGER_RTT_printf.c **** 
 228:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 229:base/debug/RTT/SEGGER_RTT_printf.c ****   // Get actual field width
 230:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 231:base/debug/RTT/SEGGER_RTT_printf.c ****   Width = 1u;
 388              		.loc 1 231 3 is_stmt 1 view .LVU119
 232:base/debug/RTT/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 389              		.loc 1 232 3 view .LVU120
 231:base/debug/RTT/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 390              		.loc 1 231 9 is_stmt 0 view .LVU121
 391 001c 0124     		movs	r4, #1
 392              		.loc 1 232 9 view .LVU122
 393 001e 02E0     		b	.L32
 394              	.LVL36:
 395              	.L33:
 233:base/debug/RTT/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 396              		.loc 1 233 5 is_stmt 1 view .LVU123
 397              		.loc 1 233 12 is_stmt 0 view .LVU124
 398 0020 9CFBF5FC 		sdiv	ip, ip, r5
 399              	.LVL37:
 234:base/debug/RTT/SEGGER_RTT_printf.c ****     Width++;
 400              		.loc 1 234 5 is_stmt 1 view .LVU125
 401              		.loc 1 234 10 is_stmt 0 view .LVU126
 402 0024 0134     		adds	r4, r4, #1
 403              	.LVL38:
 404              	.L32:
 232:base/debug/RTT/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 405              		.loc 1 232 17 is_stmt 1 view .LVU127
 406 0026 6545     		cmp	r5, ip
 407 0028 FADD     		ble	.L33
 235:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 236:base/debug/RTT/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 408              		.loc 1 236 3 view .LVU128
 409              		.loc 1 236 6 is_stmt 0 view .LVU129
 410 002a 4C45     		cmp	r4, r9
 411 002c 00D2     		bcs	.L34
 237:base/debug/RTT/SEGGER_RTT_printf.c ****     Width = NumDigits;
 412              		.loc 1 237 11 view .LVU130
ARM GAS  /tmp/ccSbJIsV.s 			page 13


 413 002e 4C46     		mov	r4, r9
 414              	.LVL39:
 415              	.L34:
 238:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 239:base/debug/RTT/SEGGER_RTT_printf.c ****   if ((FieldWidth > 0u) && ((v < 0) || ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT
 416              		.loc 1 239 3 is_stmt 1 view .LVU131
 417              		.loc 1 239 6 is_stmt 0 view .LVU132
 418 0030 36B1     		cbz	r6, .L35
 419              		.loc 1 239 25 discriminator 1 view .LVU133
 420 0032 B8F1000F 		cmp	r8, #0
 421 0036 02DB     		blt	.L36
 422              		.loc 1 239 37 discriminator 2 view .LVU134
 423 0038 1AF0040F 		tst	r10, #4
 424 003c 00D0     		beq	.L35
 425              	.L36:
 240:base/debug/RTT/SEGGER_RTT_printf.c ****     FieldWidth--;
 426              		.loc 1 240 5 is_stmt 1 view .LVU135
 427              		.loc 1 240 15 is_stmt 0 view .LVU136
 428 003e 013E     		subs	r6, r6, #1
 429              	.LVL40:
 430              	.L35:
 241:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 242:base/debug/RTT/SEGGER_RTT_printf.c **** 
 243:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 244:base/debug/RTT/SEGGER_RTT_printf.c ****   // Print leading spaces if necessary
 245:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 246:base/debug/RTT/SEGGER_RTT_printf.c ****   if ((((FormatFlags & FORMAT_FLAG_PAD_ZERO) == 0u) || (NumDigits != 0u)) && ((FormatFlags & FORMAT
 431              		.loc 1 246 3 is_stmt 1 view .LVU137
 432              		.loc 1 246 6 is_stmt 0 view .LVU138
 433 0040 1AF0020F 		tst	r10, #2
 434 0044 02D0     		beq	.L37
 435              		.loc 1 246 53 discriminator 2 view .LVU139
 436 0046 B9F1000F 		cmp	r9, #0
 437 004a 03D0     		beq	.L38
 438              	.L37:
 439              		.loc 1 246 75 discriminator 3 view .LVU140
 440 004c 1AF0010F 		tst	r10, #1
 441 0050 00D1     		bne	.L38
 247:base/debug/RTT/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 442              		.loc 1 247 5 is_stmt 1 view .LVU141
 443              		.loc 1 247 8 is_stmt 0 view .LVU142
 444 0052 AEB9     		cbnz	r6, .L39
 445              	.LVL41:
 446              	.L38:
 248:base/debug/RTT/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 249:base/debug/RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 250:base/debug/RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 251:base/debug/RTT/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 252:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 253:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 254:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 255:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 256:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 257:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 258:base/debug/RTT/SEGGER_RTT_printf.c ****   // Print sign if necessary
 259:base/debug/RTT/SEGGER_RTT_printf.c ****   //
 260:base/debug/RTT/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
ARM GAS  /tmp/ccSbJIsV.s 			page 14


 447              		.loc 1 260 3 is_stmt 1 view .LVU143
 448              		.loc 1 260 18 is_stmt 0 view .LVU144
 449 0054 FB68     		ldr	r3, [r7, #12]
 450              		.loc 1 260 6 view .LVU145
 451 0056 002B     		cmp	r3, #0
 452 0058 0FDB     		blt	.L31
 261:base/debug/RTT/SEGGER_RTT_printf.c ****     if (v < 0) {
 453              		.loc 1 261 5 is_stmt 1 view .LVU146
 454              		.loc 1 261 8 is_stmt 0 view .LVU147
 455 005a B8F1000F 		cmp	r8, #0
 456 005e 1CDB     		blt	.L49
 262:base/debug/RTT/SEGGER_RTT_printf.c ****       v = -v;
 263:base/debug/RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 264:base/debug/RTT/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 457              		.loc 1 264 12 is_stmt 1 view .LVU148
 458              		.loc 1 264 15 is_stmt 0 view .LVU149
 459 0060 1AF0040F 		tst	r10, #4
 460 0064 20D1     		bne	.L50
 461              	.L43:
 265:base/debug/RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '+');
 266:base/debug/RTT/SEGGER_RTT_printf.c ****     } else {
 267:base/debug/RTT/SEGGER_RTT_printf.c **** 
 268:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 462              		.loc 1 268 5 is_stmt 1 view .LVU150
 269:base/debug/RTT/SEGGER_RTT_printf.c ****     if (pBufferDesc->ReturnValue >= 0) {
 463              		.loc 1 269 5 view .LVU151
 464              		.loc 1 269 20 is_stmt 0 view .LVU152
 465 0066 FB68     		ldr	r3, [r7, #12]
 466              		.loc 1 269 8 view .LVU153
 467 0068 002B     		cmp	r3, #0
 468 006a 06DB     		blt	.L31
 270:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 271:base/debug/RTT/SEGGER_RTT_printf.c ****       // Print leading zeros if necessary
 272:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 273:base/debug/RTT/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && ((FormatFlags & FORMAT_
 469              		.loc 1 273 7 is_stmt 1 view .LVU154
 470              		.loc 1 273 74 is_stmt 0 view .LVU155
 471 006c 0AF00303 		and	r3, r10, #3
 472              		.loc 1 273 10 view .LVU156
 473 0070 022B     		cmp	r3, #2
 474 0072 1ED0     		beq	.L51
 475              	.L44:
 274:base/debug/RTT/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 275:base/debug/RTT/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 276:base/debug/RTT/SEGGER_RTT_printf.c ****             FieldWidth--;
 277:base/debug/RTT/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 278:base/debug/RTT/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 279:base/debug/RTT/SEGGER_RTT_printf.c ****               break;
 280:base/debug/RTT/SEGGER_RTT_printf.c ****             }
 281:base/debug/RTT/SEGGER_RTT_printf.c ****           }
 282:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 283:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 284:base/debug/RTT/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue >= 0) {
 476              		.loc 1 284 7 is_stmt 1 view .LVU157
 477              		.loc 1 284 22 is_stmt 0 view .LVU158
 478 0074 FB68     		ldr	r3, [r7, #12]
 479              		.loc 1 284 10 view .LVU159
ARM GAS  /tmp/ccSbJIsV.s 			page 15


 480 0076 002B     		cmp	r3, #0
 481 0078 2DDA     		bge	.L52
 482              	.L31:
 285:base/debug/RTT/SEGGER_RTT_printf.c ****         //
 286:base/debug/RTT/SEGGER_RTT_printf.c ****         // Print number without sign
 287:base/debug/RTT/SEGGER_RTT_printf.c ****         //
 288:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(pBufferDesc, (unsigned)v, Base, NumDigits, FieldWidth, FormatFlags);
 289:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 290:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 291:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 292:base/debug/RTT/SEGGER_RTT_printf.c **** }
 483              		.loc 1 292 1 view .LVU160
 484 007a 02B0     		add	sp, sp, #8
 485              	.LCFI4:
 486              		.cfi_remember_state
 487              		.cfi_def_cfa_offset 32
 488              		@ sp needed
 489 007c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 490              	.LVL42:
 491              	.L39:
 492              	.LCFI5:
 493              		.cfi_restore_state
 248:base/debug/RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 494              		.loc 1 248 33 is_stmt 1 view .LVU161
 495 0080 002E     		cmp	r6, #0
 496 0082 E7D0     		beq	.L38
 248:base/debug/RTT/SEGGER_RTT_printf.c ****         FieldWidth--;
 497              		.loc 1 248 33 is_stmt 0 discriminator 1 view .LVU162
 498 0084 A642     		cmp	r6, r4
 499 0086 E5D9     		bls	.L38
 249:base/debug/RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 500              		.loc 1 249 9 is_stmt 1 view .LVU163
 249:base/debug/RTT/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 501              		.loc 1 249 19 is_stmt 0 view .LVU164
 502 0088 013E     		subs	r6, r6, #1
 503              	.LVL43:
 250:base/debug/RTT/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 504              		.loc 1 250 9 is_stmt 1 view .LVU165
 505 008a 2021     		movs	r1, #32
 506 008c 3846     		mov	r0, r7
 507 008e FFF7FEFF 		bl	_StoreChar
 508              	.LVL44:
 251:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 509              		.loc 1 251 9 view .LVU166
 251:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 510              		.loc 1 251 24 is_stmt 0 view .LVU167
 511 0092 FB68     		ldr	r3, [r7, #12]
 251:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 512              		.loc 1 251 12 view .LVU168
 513 0094 002B     		cmp	r3, #0
 514 0096 F3DA     		bge	.L39
 515 0098 DCE7     		b	.L38
 516              	.L49:
 262:base/debug/RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 517              		.loc 1 262 7 is_stmt 1 view .LVU169
 262:base/debug/RTT/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 518              		.loc 1 262 9 is_stmt 0 view .LVU170
ARM GAS  /tmp/ccSbJIsV.s 			page 16


 519 009a C8F10008 		rsb	r8, r8, #0
 520              	.LVL45:
 263:base/debug/RTT/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 521              		.loc 1 263 7 is_stmt 1 view .LVU171
 522 009e 2D21     		movs	r1, #45
 523 00a0 3846     		mov	r0, r7
 524 00a2 FFF7FEFF 		bl	_StoreChar
 525              	.LVL46:
 526 00a6 DEE7     		b	.L43
 527              	.L50:
 265:base/debug/RTT/SEGGER_RTT_printf.c ****     } else {
 528              		.loc 1 265 7 view .LVU172
 529 00a8 2B21     		movs	r1, #43
 530 00aa 3846     		mov	r0, r7
 531 00ac FFF7FEFF 		bl	_StoreChar
 532              	.LVL47:
 533 00b0 D9E7     		b	.L43
 534              	.L51:
 273:base/debug/RTT/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 535              		.loc 1 273 126 is_stmt 0 discriminator 1 view .LVU173
 536 00b2 B9F1000F 		cmp	r9, #0
 537 00b6 DDD1     		bne	.L44
 274:base/debug/RTT/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 538              		.loc 1 274 9 is_stmt 1 view .LVU174
 274:base/debug/RTT/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 539              		.loc 1 274 12 is_stmt 0 view .LVU175
 540 00b8 002E     		cmp	r6, #0
 541 00ba DBD0     		beq	.L44
 542              	.L45:
 275:base/debug/RTT/SEGGER_RTT_printf.c ****             FieldWidth--;
 543              		.loc 1 275 37 is_stmt 1 view .LVU176
 544 00bc 002E     		cmp	r6, #0
 545 00be D9D0     		beq	.L44
 275:base/debug/RTT/SEGGER_RTT_printf.c ****             FieldWidth--;
 546              		.loc 1 275 37 is_stmt 0 discriminator 1 view .LVU177
 547 00c0 A642     		cmp	r6, r4
 548 00c2 D7D9     		bls	.L44
 276:base/debug/RTT/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 549              		.loc 1 276 13 is_stmt 1 view .LVU178
 276:base/debug/RTT/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 550              		.loc 1 276 23 is_stmt 0 view .LVU179
 551 00c4 013E     		subs	r6, r6, #1
 552              	.LVL48:
 277:base/debug/RTT/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 553              		.loc 1 277 13 is_stmt 1 view .LVU180
 554 00c6 3021     		movs	r1, #48
 555 00c8 3846     		mov	r0, r7
 556 00ca FFF7FEFF 		bl	_StoreChar
 557              	.LVL49:
 278:base/debug/RTT/SEGGER_RTT_printf.c ****               break;
 558              		.loc 1 278 13 view .LVU181
 278:base/debug/RTT/SEGGER_RTT_printf.c ****               break;
 559              		.loc 1 278 28 is_stmt 0 view .LVU182
 560 00ce FB68     		ldr	r3, [r7, #12]
 278:base/debug/RTT/SEGGER_RTT_printf.c ****               break;
 561              		.loc 1 278 16 view .LVU183
 562 00d0 002B     		cmp	r3, #0
ARM GAS  /tmp/ccSbJIsV.s 			page 17


 563 00d2 F3DA     		bge	.L45
 564 00d4 CEE7     		b	.L44
 565              	.L52:
 288:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 566              		.loc 1 288 9 is_stmt 1 view .LVU184
 567 00d6 CDF804A0 		str	r10, [sp, #4]
 568 00da 0096     		str	r6, [sp]
 569 00dc 4B46     		mov	r3, r9
 570 00de 2A46     		mov	r2, r5
 571 00e0 4146     		mov	r1, r8
 572 00e2 3846     		mov	r0, r7
 573 00e4 FFF7FEFF 		bl	_PrintUnsigned
 574              	.LVL50:
 575              		.loc 1 292 1 is_stmt 0 view .LVU185
 576 00e8 C7E7     		b	.L31
 577              		.cfi_endproc
 578              	.LFE2:
 580              		.section	.text.SEGGER_RTT_vprintf,"ax",%progbits
 581              		.align	1
 582              		.global	SEGGER_RTT_vprintf
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu softvfp
 588              	SEGGER_RTT_vprintf:
 589              	.LVL51:
 590              	.LFB3:
 293:base/debug/RTT/SEGGER_RTT_printf.c **** 
 294:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 295:base/debug/RTT/SEGGER_RTT_printf.c **** *
 296:base/debug/RTT/SEGGER_RTT_printf.c **** *       Public code
 297:base/debug/RTT/SEGGER_RTT_printf.c **** *
 298:base/debug/RTT/SEGGER_RTT_printf.c **** **********************************************************************
 299:base/debug/RTT/SEGGER_RTT_printf.c **** */
 300:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 301:base/debug/RTT/SEGGER_RTT_printf.c **** *
 302:base/debug/RTT/SEGGER_RTT_printf.c **** *       SEGGER_RTT_vprintf
 303:base/debug/RTT/SEGGER_RTT_printf.c **** *
 304:base/debug/RTT/SEGGER_RTT_printf.c **** *  Function description
 305:base/debug/RTT/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 306:base/debug/RTT/SEGGER_RTT_printf.c **** *    This data is read by the host.
 307:base/debug/RTT/SEGGER_RTT_printf.c **** *
 308:base/debug/RTT/SEGGER_RTT_printf.c **** *  Parameters
 309:base/debug/RTT/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 310:base/debug/RTT/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string
 311:base/debug/RTT/SEGGER_RTT_printf.c **** *    pParamList   Pointer to the list of arguments for the format string
 312:base/debug/RTT/SEGGER_RTT_printf.c **** *
 313:base/debug/RTT/SEGGER_RTT_printf.c **** *  Return values
 314:base/debug/RTT/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 315:base/debug/RTT/SEGGER_RTT_printf.c **** *     < 0:  Error
 316:base/debug/RTT/SEGGER_RTT_printf.c **** */
 317:base/debug/RTT/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
 591              		.loc 1 317 90 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 88
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		.loc 1 317 90 is_stmt 0 view .LVU187
ARM GAS  /tmp/ccSbJIsV.s 			page 18


 596 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 597              	.LCFI6:
 598              		.cfi_def_cfa_offset 20
 599              		.cfi_offset 4, -20
 600              		.cfi_offset 5, -16
 601              		.cfi_offset 6, -12
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
 604 0002 99B0     		sub	sp, sp, #100
 605              	.LCFI7:
 606              		.cfi_def_cfa_offset 120
 607 0004 0646     		mov	r6, r0
 608 0006 0C46     		mov	r4, r1
 609 0008 1546     		mov	r5, r2
 318:base/debug/RTT/SEGGER_RTT_printf.c ****   char c;
 610              		.loc 1 318 3 is_stmt 1 view .LVU188
 319:base/debug/RTT/SEGGER_RTT_printf.c ****   SEGGER_RTT_PRINTF_DESC BufferDesc;
 611              		.loc 1 319 3 view .LVU189
 320:base/debug/RTT/SEGGER_RTT_printf.c ****   int v;
 612              		.loc 1 320 3 view .LVU190
 321:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned NumDigits;
 613              		.loc 1 321 3 view .LVU191
 322:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned FormatFlags;
 614              		.loc 1 322 3 view .LVU192
 323:base/debug/RTT/SEGGER_RTT_printf.c ****   unsigned FieldWidth;
 615              		.loc 1 323 3 view .LVU193
 324:base/debug/RTT/SEGGER_RTT_printf.c ****   char acBuffer[SEGGER_RTT_PRINTF_BUFFER_SIZE];
 616              		.loc 1 324 3 view .LVU194
 325:base/debug/RTT/SEGGER_RTT_printf.c **** 
 326:base/debug/RTT/SEGGER_RTT_printf.c ****   BufferDesc.pBuffer        = acBuffer;
 617              		.loc 1 326 3 view .LVU195
 618              		.loc 1 326 29 is_stmt 0 view .LVU196
 619 000a 03AB     		add	r3, sp, #12
 620 000c 1393     		str	r3, [sp, #76]
 327:base/debug/RTT/SEGGER_RTT_printf.c ****   BufferDesc.BufferSize     = SEGGER_RTT_PRINTF_BUFFER_SIZE;
 621              		.loc 1 327 3 is_stmt 1 view .LVU197
 622              		.loc 1 327 29 is_stmt 0 view .LVU198
 623 000e 4023     		movs	r3, #64
 624 0010 1493     		str	r3, [sp, #80]
 328:base/debug/RTT/SEGGER_RTT_printf.c ****   BufferDesc.Cnt            = 0u;
 625              		.loc 1 328 3 is_stmt 1 view .LVU199
 626              		.loc 1 328 29 is_stmt 0 view .LVU200
 627 0012 0023     		movs	r3, #0
 628 0014 1593     		str	r3, [sp, #84]
 329:base/debug/RTT/SEGGER_RTT_printf.c ****   BufferDesc.RTTBufferIndex = BufferIndex;
 629              		.loc 1 329 3 is_stmt 1 view .LVU201
 630              		.loc 1 329 29 is_stmt 0 view .LVU202
 631 0016 1790     		str	r0, [sp, #92]
 330:base/debug/RTT/SEGGER_RTT_printf.c ****   BufferDesc.ReturnValue    = 0;
 632              		.loc 1 330 3 is_stmt 1 view .LVU203
 633              		.loc 1 330 29 is_stmt 0 view .LVU204
 634 0018 1693     		str	r3, [sp, #88]
 635 001a 8BE0     		b	.L81
 636              	.LVL52:
 637              	.L90:
 331:base/debug/RTT/SEGGER_RTT_printf.c **** 
 332:base/debug/RTT/SEGGER_RTT_printf.c ****   do {
ARM GAS  /tmp/ccSbJIsV.s 			page 19


 333:base/debug/RTT/SEGGER_RTT_printf.c ****     c = *sFormat;
 334:base/debug/RTT/SEGGER_RTT_printf.c ****     sFormat++;
 335:base/debug/RTT/SEGGER_RTT_printf.c ****     if (c == 0u) {
 336:base/debug/RTT/SEGGER_RTT_printf.c ****       break;
 337:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 338:base/debug/RTT/SEGGER_RTT_printf.c ****     if (c == '%') {
 339:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 340:base/debug/RTT/SEGGER_RTT_printf.c ****       // Filter out flags
 341:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 342:base/debug/RTT/SEGGER_RTT_printf.c ****       FormatFlags = 0u;
 638              		.loc 1 342 19 view .LVU205
 639 001c 0020     		movs	r0, #0
 343:base/debug/RTT/SEGGER_RTT_printf.c ****       v = 1;
 640              		.loc 1 343 9 view .LVU206
 641 001e 0122     		movs	r2, #1
 642 0020 11E0     		b	.L62
 643              	.LVL53:
 644              	.L59:
 344:base/debug/RTT/SEGGER_RTT_printf.c ****       do {
 345:base/debug/RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 346:base/debug/RTT/SEGGER_RTT_printf.c ****         switch (c) {
 347:base/debug/RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 645              		.loc 1 347 19 is_stmt 1 view .LVU207
 646              		.loc 1 347 31 is_stmt 0 view .LVU208
 647 0022 40F00100 		orr	r0, r0, #1
 648              	.LVL54:
 649              		.loc 1 347 60 is_stmt 1 view .LVU209
 650              		.loc 1 347 67 is_stmt 0 view .LVU210
 651 0026 0134     		adds	r4, r4, #1
 652              	.LVL55:
 653              		.loc 1 347 71 is_stmt 1 view .LVU211
 654 0028 0CE0     		b	.L56
 655              	.LVL56:
 656              	.L57:
 348:base/debug/RTT/SEGGER_RTT_printf.c ****         case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
 657              		.loc 1 348 19 view .LVU212
 658              		.loc 1 348 31 is_stmt 0 view .LVU213
 659 002a 40F00200 		orr	r0, r0, #2
 660              	.LVL57:
 661              		.loc 1 348 60 is_stmt 1 view .LVU214
 662              		.loc 1 348 67 is_stmt 0 view .LVU215
 663 002e 0134     		adds	r4, r4, #1
 664              	.LVL58:
 665              		.loc 1 348 71 is_stmt 1 view .LVU216
 666 0030 08E0     		b	.L56
 667              	.LVL59:
 668              	.L60:
 349:base/debug/RTT/SEGGER_RTT_printf.c ****         case '+': FormatFlags |= FORMAT_FLAG_PRINT_SIGN;   sFormat++; break;
 669              		.loc 1 349 19 view .LVU217
 670              		.loc 1 349 31 is_stmt 0 view .LVU218
 671 0032 40F00400 		orr	r0, r0, #4
 672              	.LVL60:
 673              		.loc 1 349 60 is_stmt 1 view .LVU219
 674              		.loc 1 349 67 is_stmt 0 view .LVU220
 675 0036 0134     		adds	r4, r4, #1
 676              	.LVL61:
 677              		.loc 1 349 71 is_stmt 1 view .LVU221
ARM GAS  /tmp/ccSbJIsV.s 			page 20


 678 0038 04E0     		b	.L56
 679              	.LVL62:
 680              	.L61:
 350:base/debug/RTT/SEGGER_RTT_printf.c ****         case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
 681              		.loc 1 350 19 view .LVU222
 682              		.loc 1 350 31 is_stmt 0 view .LVU223
 683 003a 40F00800 		orr	r0, r0, #8
 684              	.LVL63:
 685              		.loc 1 350 60 is_stmt 1 view .LVU224
 686              		.loc 1 350 67 is_stmt 0 view .LVU225
 687 003e 0134     		adds	r4, r4, #1
 688              	.LVL64:
 689              		.loc 1 350 71 is_stmt 1 view .LVU226
 690 0040 00E0     		b	.L56
 691              	.LVL65:
 692              	.L84:
 346:base/debug/RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 693              		.loc 1 346 9 is_stmt 0 view .LVU227
 694 0042 0022     		movs	r2, #0
 695              	.LVL66:
 696              	.L56:
 351:base/debug/RTT/SEGGER_RTT_printf.c ****         default:  v = 0; break;
 352:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 353:base/debug/RTT/SEGGER_RTT_printf.c ****       } while (v);
 697              		.loc 1 353 16 is_stmt 1 view .LVU228
 698 0044 12B3     		cbz	r2, .L64
 699              	.LVL67:
 700              	.L62:
 344:base/debug/RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 701              		.loc 1 344 7 view .LVU229
 345:base/debug/RTT/SEGGER_RTT_printf.c ****         switch (c) {
 702              		.loc 1 345 9 view .LVU230
 345:base/debug/RTT/SEGGER_RTT_printf.c ****         switch (c) {
 703              		.loc 1 345 11 is_stmt 0 view .LVU231
 704 0046 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 705              	.LVL68:
 346:base/debug/RTT/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 706              		.loc 1 346 9 is_stmt 1 view .LVU232
 707 0048 233B     		subs	r3, r3, #35
 708 004a 0D2B     		cmp	r3, #13
 709 004c F9D8     		bhi	.L84
 710 004e 01A1     		adr	r1, .L58
 711 0050 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 712              		.p2align 2
 713              	.L58:
 714 0054 3B000000 		.word	.L61+1
 715 0058 43000000 		.word	.L84+1
 716 005c 43000000 		.word	.L84+1
 717 0060 43000000 		.word	.L84+1
 718 0064 43000000 		.word	.L84+1
 719 0068 43000000 		.word	.L84+1
 720 006c 43000000 		.word	.L84+1
 721 0070 43000000 		.word	.L84+1
 722 0074 33000000 		.word	.L60+1
 723 0078 43000000 		.word	.L84+1
 724 007c 23000000 		.word	.L59+1
 725 0080 43000000 		.word	.L84+1
ARM GAS  /tmp/ccSbJIsV.s 			page 21


 726 0084 43000000 		.word	.L84+1
 727 0088 2B000000 		.word	.L57+1
 728              	.LVL69:
 729              		.p2align 1
 730              	.L64:
 354:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 355:base/debug/RTT/SEGGER_RTT_printf.c ****       // filter out field with
 356:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 357:base/debug/RTT/SEGGER_RTT_printf.c ****       FieldWidth = 0u;
 358:base/debug/RTT/SEGGER_RTT_printf.c ****       do {
 731              		.loc 1 358 7 view .LVU233
 359:base/debug/RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 732              		.loc 1 359 9 view .LVU234
 733              		.loc 1 359 11 is_stmt 0 view .LVU235
 734 008c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 735              	.LVL70:
 360:base/debug/RTT/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 736              		.loc 1 360 9 is_stmt 1 view .LVU236
 737              		.loc 1 360 23 is_stmt 0 view .LVU237
 738 008e A3F13001 		sub	r1, r3, #48
 739 0092 C9B2     		uxtb	r1, r1
 740              		.loc 1 360 12 view .LVU238
 741 0094 0929     		cmp	r1, #9
 742 0096 07D8     		bhi	.L63
 361:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 362:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 363:base/debug/RTT/SEGGER_RTT_printf.c ****         sFormat++;
 743              		.loc 1 363 9 is_stmt 1 view .LVU239
 744              		.loc 1 363 16 is_stmt 0 view .LVU240
 745 0098 0134     		adds	r4, r4, #1
 746              	.LVL71:
 364:base/debug/RTT/SEGGER_RTT_printf.c ****         FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
 747              		.loc 1 364 9 is_stmt 1 view .LVU241
 748              		.loc 1 364 34 is_stmt 0 view .LVU242
 749 009a 02EB8202 		add	r2, r2, r2, lsl #2
 750              	.LVL72:
 751              		.loc 1 364 41 view .LVU243
 752 009e 03EB4203 		add	r3, r3, r2, lsl #1
 753              	.LVL73:
 754              		.loc 1 364 20 view .LVU244
 755 00a2 A3F13002 		sub	r2, r3, #48
 756              	.LVL74:
 358:base/debug/RTT/SEGGER_RTT_printf.c ****         c = *sFormat;
 757              		.loc 1 358 10 is_stmt 1 view .LVU245
 359:base/debug/RTT/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 758              		.loc 1 359 11 is_stmt 0 view .LVU246
 759 00a6 F1E7     		b	.L64
 760              	.LVL75:
 761              	.L63:
 365:base/debug/RTT/SEGGER_RTT_printf.c ****       } while (1);
 366:base/debug/RTT/SEGGER_RTT_printf.c **** 
 367:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 368:base/debug/RTT/SEGGER_RTT_printf.c ****       // Filter out precision (number of digits to display)
 369:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 370:base/debug/RTT/SEGGER_RTT_printf.c ****       NumDigits = 0u;
 762              		.loc 1 370 7 is_stmt 1 view .LVU247
 371:base/debug/RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
ARM GAS  /tmp/ccSbJIsV.s 			page 22


 763              		.loc 1 371 7 view .LVU248
 372:base/debug/RTT/SEGGER_RTT_printf.c ****       if (c == '.') {
 764              		.loc 1 372 7 view .LVU249
 765              		.loc 1 372 10 is_stmt 0 view .LVU250
 766 00a8 2E2B     		cmp	r3, #46
 767 00aa 02D0     		beq	.L88
 370:base/debug/RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 768              		.loc 1 370 17 view .LVU251
 769 00ac 0023     		movs	r3, #0
 770              	.LVL76:
 771              	.L65:
 373:base/debug/RTT/SEGGER_RTT_printf.c ****         sFormat++;
 374:base/debug/RTT/SEGGER_RTT_printf.c ****         do {
 375:base/debug/RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 376:base/debug/RTT/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 377:base/debug/RTT/SEGGER_RTT_printf.c ****             break;
 378:base/debug/RTT/SEGGER_RTT_printf.c ****           }
 379:base/debug/RTT/SEGGER_RTT_printf.c ****           sFormat++;
 380:base/debug/RTT/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 381:base/debug/RTT/SEGGER_RTT_printf.c ****         } while (1);
 382:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 383:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 384:base/debug/RTT/SEGGER_RTT_printf.c ****       // Filter out length modifier
 385:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 386:base/debug/RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 772              		.loc 1 386 7 is_stmt 1 view .LVU252
 773              		.loc 1 386 9 is_stmt 0 view .LVU253
 774 00ae 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 775              	.LVL77:
 776              		.loc 1 386 9 view .LVU254
 777 00b0 14E0     		b	.L69
 778              	.LVL78:
 779              	.L88:
 373:base/debug/RTT/SEGGER_RTT_printf.c ****         sFormat++;
 780              		.loc 1 373 9 is_stmt 1 view .LVU255
 373:base/debug/RTT/SEGGER_RTT_printf.c ****         sFormat++;
 781              		.loc 1 373 16 is_stmt 0 view .LVU256
 782 00b2 0134     		adds	r4, r4, #1
 783              	.LVL79:
 370:base/debug/RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 784              		.loc 1 370 17 view .LVU257
 785 00b4 0023     		movs	r3, #0
 786              	.LVL80:
 370:base/debug/RTT/SEGGER_RTT_printf.c ****       c = *sFormat;
 787              		.loc 1 370 17 view .LVU258
 788 00b6 06E0     		b	.L66
 789              	.LVL81:
 790              	.L89:
 379:base/debug/RTT/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 791              		.loc 1 379 11 is_stmt 1 view .LVU259
 379:base/debug/RTT/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 792              		.loc 1 379 18 is_stmt 0 view .LVU260
 793 00b8 0134     		adds	r4, r4, #1
 794              	.LVL82:
 380:base/debug/RTT/SEGGER_RTT_printf.c ****         } while (1);
 795              		.loc 1 380 11 is_stmt 1 view .LVU261
 380:base/debug/RTT/SEGGER_RTT_printf.c ****         } while (1);
ARM GAS  /tmp/ccSbJIsV.s 			page 23


 796              		.loc 1 380 33 is_stmt 0 view .LVU262
 797 00ba 03EB8303 		add	r3, r3, r3, lsl #2
 798              	.LVL83:
 380:base/debug/RTT/SEGGER_RTT_printf.c ****         } while (1);
 799              		.loc 1 380 39 view .LVU263
 800 00be 01EB4301 		add	r1, r1, r3, lsl #1
 801              	.LVL84:
 380:base/debug/RTT/SEGGER_RTT_printf.c ****         } while (1);
 802              		.loc 1 380 21 view .LVU264
 803 00c2 A1F13003 		sub	r3, r1, #48
 804              	.LVL85:
 374:base/debug/RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 805              		.loc 1 374 12 is_stmt 1 view .LVU265
 806              	.L66:
 374:base/debug/RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 807              		.loc 1 374 9 view .LVU266
 375:base/debug/RTT/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 808              		.loc 1 375 11 view .LVU267
 375:base/debug/RTT/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 809              		.loc 1 375 13 is_stmt 0 view .LVU268
 810 00c6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 811              	.LVL86:
 376:base/debug/RTT/SEGGER_RTT_printf.c ****             break;
 812              		.loc 1 376 11 is_stmt 1 view .LVU269
 376:base/debug/RTT/SEGGER_RTT_printf.c ****             break;
 813              		.loc 1 376 25 is_stmt 0 view .LVU270
 814 00c8 A1F1300C 		sub	ip, r1, #48
 815 00cc 5FFA8CFC 		uxtb	ip, ip
 376:base/debug/RTT/SEGGER_RTT_printf.c ****             break;
 816              		.loc 1 376 14 view .LVU271
 817 00d0 BCF1090F 		cmp	ip, #9
 818 00d4 F0D9     		bls	.L89
 376:base/debug/RTT/SEGGER_RTT_printf.c ****             break;
 819              		.loc 1 376 14 view .LVU272
 820 00d6 EAE7     		b	.L65
 821              	.L67:
 387:base/debug/RTT/SEGGER_RTT_printf.c ****       do {
 388:base/debug/RTT/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 389:base/debug/RTT/SEGGER_RTT_printf.c ****           sFormat++;
 822              		.loc 1 389 11 is_stmt 1 view .LVU273
 823              	.LVL87:
 390:base/debug/RTT/SEGGER_RTT_printf.c ****           c = *sFormat;
 824              		.loc 1 390 11 view .LVU274
 825              		.loc 1 390 13 is_stmt 0 view .LVU275
 826 00d8 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 827              	.LVL88:
 387:base/debug/RTT/SEGGER_RTT_printf.c ****       do {
 828              		.loc 1 387 10 is_stmt 1 view .LVU276
 829              	.L69:
 387:base/debug/RTT/SEGGER_RTT_printf.c ****       do {
 830              		.loc 1 387 7 view .LVU277
 388:base/debug/RTT/SEGGER_RTT_printf.c ****           sFormat++;
 831              		.loc 1 388 9 view .LVU278
 388:base/debug/RTT/SEGGER_RTT_printf.c ****           sFormat++;
 832              		.loc 1 388 12 is_stmt 0 view .LVU279
 833 00dc 6C29     		cmp	r1, #108
 834 00de FBD0     		beq	.L67
ARM GAS  /tmp/ccSbJIsV.s 			page 24


 388:base/debug/RTT/SEGGER_RTT_printf.c ****           sFormat++;
 835              		.loc 1 388 24 discriminator 1 view .LVU280
 836 00e0 6829     		cmp	r1, #104
 837 00e2 F9D0     		beq	.L67
 391:base/debug/RTT/SEGGER_RTT_printf.c ****         } else {
 392:base/debug/RTT/SEGGER_RTT_printf.c ****           break;
 393:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 394:base/debug/RTT/SEGGER_RTT_printf.c ****       } while (1);
 395:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 396:base/debug/RTT/SEGGER_RTT_printf.c ****       // Handle specifiers
 397:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 398:base/debug/RTT/SEGGER_RTT_printf.c ****       switch (c) {
 838              		.loc 1 398 7 is_stmt 1 view .LVU281
 839 00e4 2529     		cmp	r1, #37
 840 00e6 6DD0     		beq	.L70
 841 00e8 20D3     		bcc	.L71
 842 00ea 7829     		cmp	r1, #120
 843 00ec 1ED8     		bhi	.L71
 844 00ee 5829     		cmp	r1, #88
 845 00f0 1CD3     		bcc	.L71
 846 00f2 5839     		subs	r1, r1, #88
 847              	.LVL89:
 848              		.loc 1 398 7 is_stmt 0 view .LVU282
 849 00f4 2029     		cmp	r1, #32
 850 00f6 19D8     		bhi	.L71
 851 00f8 DFE801F0 		tbb	[pc, r1]
 852              	.L73:
 853 00fc 3D       		.byte	(.L72-.L73)/2
 854 00fd 18       		.byte	(.L71-.L73)/2
 855 00fe 18       		.byte	(.L71-.L73)/2
 856 00ff 18       		.byte	(.L71-.L73)/2
 857 0100 18       		.byte	(.L71-.L73)/2
 858 0101 18       		.byte	(.L71-.L73)/2
 859 0102 18       		.byte	(.L71-.L73)/2
 860 0103 18       		.byte	(.L71-.L73)/2
 861 0104 18       		.byte	(.L71-.L73)/2
 862 0105 18       		.byte	(.L71-.L73)/2
 863 0106 18       		.byte	(.L71-.L73)/2
 864 0107 11       		.byte	(.L78-.L73)/2
 865 0108 27       		.byte	(.L77-.L73)/2
 866 0109 18       		.byte	(.L71-.L73)/2
 867 010a 18       		.byte	(.L71-.L73)/2
 868 010b 18       		.byte	(.L71-.L73)/2
 869 010c 18       		.byte	(.L71-.L73)/2
 870 010d 18       		.byte	(.L71-.L73)/2
 871 010e 18       		.byte	(.L71-.L73)/2
 872 010f 18       		.byte	(.L71-.L73)/2
 873 0110 18       		.byte	(.L71-.L73)/2
 874 0111 18       		.byte	(.L71-.L73)/2
 875 0112 18       		.byte	(.L71-.L73)/2
 876 0113 18       		.byte	(.L71-.L73)/2
 877 0114 57       		.byte	(.L76-.L73)/2
 878 0115 18       		.byte	(.L71-.L73)/2
 879 0116 18       		.byte	(.L71-.L73)/2
 880 0117 48       		.byte	(.L75-.L73)/2
 881 0118 18       		.byte	(.L71-.L73)/2
 882 0119 32       		.byte	(.L74-.L73)/2
ARM GAS  /tmp/ccSbJIsV.s 			page 25


 883 011a 18       		.byte	(.L71-.L73)/2
 884 011b 18       		.byte	(.L71-.L73)/2
 885 011c 3D       		.byte	(.L72-.L73)/2
 886 011d 00       		.p2align 1
 887              	.L78:
 888              	.LBB2:
 399:base/debug/RTT/SEGGER_RTT_printf.c ****       case 'c': {
 400:base/debug/RTT/SEGGER_RTT_printf.c ****         char c0;
 889              		.loc 1 400 9 is_stmt 1 view .LVU283
 401:base/debug/RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 890              		.loc 1 401 9 view .LVU284
 891              		.loc 1 401 11 is_stmt 0 view .LVU285
 892 011e 2B68     		ldr	r3, [r5]
 893              	.LVL90:
 894              		.loc 1 401 11 view .LVU286
 895 0120 1A1D     		adds	r2, r3, #4
 896              	.LVL91:
 897              		.loc 1 401 11 view .LVU287
 898 0122 2A60     		str	r2, [r5]
 402:base/debug/RTT/SEGGER_RTT_printf.c ****         c0 = (char)v;
 899              		.loc 1 402 9 is_stmt 1 view .LVU288
 900              	.LVL92:
 403:base/debug/RTT/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 901              		.loc 1 403 9 view .LVU289
 902 0124 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 903 0126 13A8     		add	r0, sp, #76
 904              	.LVL93:
 905              		.loc 1 403 9 is_stmt 0 view .LVU290
 906 0128 FFF7FEFF 		bl	_StoreChar
 907              	.LVL94:
 404:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 908              		.loc 1 404 9 is_stmt 1 view .LVU291
 909              	.L71:
 910              		.loc 1 404 9 is_stmt 0 view .LVU292
 911              	.LBE2:
 405:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 406:base/debug/RTT/SEGGER_RTT_printf.c ****       case 'd':
 407:base/debug/RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 408:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 409:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 410:base/debug/RTT/SEGGER_RTT_printf.c ****       case 'u':
 411:base/debug/RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 412:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 413:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 414:base/debug/RTT/SEGGER_RTT_printf.c ****       case 'x':
 415:base/debug/RTT/SEGGER_RTT_printf.c ****       case 'X':
 416:base/debug/RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 417:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 418:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 419:base/debug/RTT/SEGGER_RTT_printf.c ****       case 's':
 420:base/debug/RTT/SEGGER_RTT_printf.c ****         {
 421:base/debug/RTT/SEGGER_RTT_printf.c ****           const char * s = va_arg(*pParamList, const char *);
 422:base/debug/RTT/SEGGER_RTT_printf.c ****           do {
 423:base/debug/RTT/SEGGER_RTT_printf.c ****             c = *s;
 424:base/debug/RTT/SEGGER_RTT_printf.c ****             s++;
 425:base/debug/RTT/SEGGER_RTT_printf.c ****             if (c == '\0') {
 426:base/debug/RTT/SEGGER_RTT_printf.c ****               break;
ARM GAS  /tmp/ccSbJIsV.s 			page 26


 427:base/debug/RTT/SEGGER_RTT_printf.c ****             }
 428:base/debug/RTT/SEGGER_RTT_printf.c ****            _StoreChar(&BufferDesc, c);
 429:base/debug/RTT/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 430:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 431:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 432:base/debug/RTT/SEGGER_RTT_printf.c ****       case 'p':
 433:base/debug/RTT/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 434:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 435:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 436:base/debug/RTT/SEGGER_RTT_printf.c ****       case '%':
 437:base/debug/RTT/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, '%');
 438:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 439:base/debug/RTT/SEGGER_RTT_printf.c ****       default:
 440:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 441:base/debug/RTT/SEGGER_RTT_printf.c ****       }
 442:base/debug/RTT/SEGGER_RTT_printf.c ****       sFormat++;
 912              		.loc 1 442 7 is_stmt 1 view .LVU293
 913              		.loc 1 442 14 is_stmt 0 view .LVU294
 914 012c 0134     		adds	r4, r4, #1
 915              	.LVL95:
 916              	.L80:
 443:base/debug/RTT/SEGGER_RTT_printf.c ****     } else {
 444:base/debug/RTT/SEGGER_RTT_printf.c ****       _StoreChar(&BufferDesc, c);
 445:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 446:base/debug/RTT/SEGGER_RTT_printf.c ****   } while (BufferDesc.ReturnValue >= 0);
 917              		.loc 1 446 35 is_stmt 1 view .LVU295
 918              		.loc 1 446 22 is_stmt 0 view .LVU296
 919 012e 169B     		ldr	r3, [sp, #88]
 920              		.loc 1 446 35 view .LVU297
 921 0130 002B     		cmp	r3, #0
 922 0132 4CDB     		blt	.L54
 923              	.L81:
 332:base/debug/RTT/SEGGER_RTT_printf.c ****     c = *sFormat;
 924              		.loc 1 332 3 is_stmt 1 view .LVU298
 333:base/debug/RTT/SEGGER_RTT_printf.c ****     sFormat++;
 925              		.loc 1 333 5 view .LVU299
 333:base/debug/RTT/SEGGER_RTT_printf.c ****     sFormat++;
 926              		.loc 1 333 7 is_stmt 0 view .LVU300
 927 0134 14F8011B 		ldrb	r1, [r4], #1	@ zero_extendqisi2
 928              	.LVL96:
 334:base/debug/RTT/SEGGER_RTT_printf.c ****     if (c == 0u) {
 929              		.loc 1 334 5 is_stmt 1 view .LVU301
 335:base/debug/RTT/SEGGER_RTT_printf.c ****       break;
 930              		.loc 1 335 5 view .LVU302
 335:base/debug/RTT/SEGGER_RTT_printf.c ****       break;
 931              		.loc 1 335 8 is_stmt 0 view .LVU303
 932 0138 0029     		cmp	r1, #0
 933 013a 48D0     		beq	.L54
 338:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 934              		.loc 1 338 5 is_stmt 1 view .LVU304
 338:base/debug/RTT/SEGGER_RTT_printf.c ****       //
 935              		.loc 1 338 8 is_stmt 0 view .LVU305
 936 013c 2529     		cmp	r1, #37
 937 013e 3FF46DAF 		beq	.L90
 444:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 938              		.loc 1 444 7 is_stmt 1 view .LVU306
 939 0142 13A8     		add	r0, sp, #76
ARM GAS  /tmp/ccSbJIsV.s 			page 27


 940 0144 FFF7FEFF 		bl	_StoreChar
 941              	.LVL97:
 444:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 942              		.loc 1 444 7 is_stmt 0 view .LVU307
 943 0148 F1E7     		b	.L80
 944              	.LVL98:
 945              	.L77:
 407:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 946              		.loc 1 407 9 is_stmt 1 view .LVU308
 407:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 947              		.loc 1 407 11 is_stmt 0 view .LVU309
 948 014a 2968     		ldr	r1, [r5]
 949 014c 0F1D     		adds	r7, r1, #4
 950 014e 2F60     		str	r7, [r5]
 951 0150 0968     		ldr	r1, [r1]
 408:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 952              		.loc 1 408 9 is_stmt 1 view .LVU310
 953 0152 0190     		str	r0, [sp, #4]
 954 0154 0092     		str	r2, [sp]
 955 0156 0A22     		movs	r2, #10
 956              	.LVL99:
 408:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 957              		.loc 1 408 9 is_stmt 0 view .LVU311
 958 0158 13A8     		add	r0, sp, #76
 959              	.LVL100:
 408:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 960              		.loc 1 408 9 view .LVU312
 961 015a FFF7FEFF 		bl	_PrintInt
 962              	.LVL101:
 409:base/debug/RTT/SEGGER_RTT_printf.c ****       case 'u':
 963              		.loc 1 409 9 is_stmt 1 view .LVU313
 964 015e E5E7     		b	.L71
 965              	.LVL102:
 966              	.L74:
 411:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 967              		.loc 1 411 9 view .LVU314
 411:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 968              		.loc 1 411 11 is_stmt 0 view .LVU315
 969 0160 2968     		ldr	r1, [r5]
 970 0162 0F1D     		adds	r7, r1, #4
 971 0164 2F60     		str	r7, [r5]
 972 0166 0968     		ldr	r1, [r1]
 412:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 973              		.loc 1 412 9 is_stmt 1 view .LVU316
 974 0168 0190     		str	r0, [sp, #4]
 975 016a 0092     		str	r2, [sp]
 976 016c 0A22     		movs	r2, #10
 977              	.LVL103:
 412:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 978              		.loc 1 412 9 is_stmt 0 view .LVU317
 979 016e 13A8     		add	r0, sp, #76
 980              	.LVL104:
 412:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 981              		.loc 1 412 9 view .LVU318
 982 0170 FFF7FEFF 		bl	_PrintUnsigned
 983              	.LVL105:
 413:base/debug/RTT/SEGGER_RTT_printf.c ****       case 'x':
ARM GAS  /tmp/ccSbJIsV.s 			page 28


 984              		.loc 1 413 9 is_stmt 1 view .LVU319
 985 0174 DAE7     		b	.L71
 986              	.LVL106:
 987              	.L72:
 416:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 988              		.loc 1 416 9 view .LVU320
 416:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 989              		.loc 1 416 11 is_stmt 0 view .LVU321
 990 0176 2968     		ldr	r1, [r5]
 991 0178 0F1D     		adds	r7, r1, #4
 992 017a 2F60     		str	r7, [r5]
 993 017c 0968     		ldr	r1, [r1]
 417:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 994              		.loc 1 417 9 is_stmt 1 view .LVU322
 995 017e 0190     		str	r0, [sp, #4]
 996 0180 0092     		str	r2, [sp]
 997 0182 1022     		movs	r2, #16
 998              	.LVL107:
 417:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 999              		.loc 1 417 9 is_stmt 0 view .LVU323
 1000 0184 13A8     		add	r0, sp, #76
 1001              	.LVL108:
 417:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 1002              		.loc 1 417 9 view .LVU324
 1003 0186 FFF7FEFF 		bl	_PrintUnsigned
 1004              	.LVL109:
 418:base/debug/RTT/SEGGER_RTT_printf.c ****       case 's':
 1005              		.loc 1 418 9 is_stmt 1 view .LVU325
 1006 018a CFE7     		b	.L71
 1007              	.LVL110:
 1008              	.L75:
 1009              	.LBB3:
 421:base/debug/RTT/SEGGER_RTT_printf.c ****           do {
 1010              		.loc 1 421 11 view .LVU326
 421:base/debug/RTT/SEGGER_RTT_printf.c ****           do {
 1011              		.loc 1 421 24 is_stmt 0 view .LVU327
 1012 018c 2B68     		ldr	r3, [r5]
 1013              	.LVL111:
 421:base/debug/RTT/SEGGER_RTT_printf.c ****           do {
 1014              		.loc 1 421 24 view .LVU328
 1015 018e 1A1D     		adds	r2, r3, #4
 1016              	.LVL112:
 421:base/debug/RTT/SEGGER_RTT_printf.c ****           do {
 1017              		.loc 1 421 24 view .LVU329
 1018 0190 2A60     		str	r2, [r5]
 1019 0192 1F68     		ldr	r7, [r3]
 1020              	.LVL113:
 1021              	.L79:
 422:base/debug/RTT/SEGGER_RTT_printf.c ****             c = *s;
 1022              		.loc 1 422 11 is_stmt 1 view .LVU330
 423:base/debug/RTT/SEGGER_RTT_printf.c ****             s++;
 1023              		.loc 1 423 13 view .LVU331
 423:base/debug/RTT/SEGGER_RTT_printf.c ****             s++;
 1024              		.loc 1 423 15 is_stmt 0 view .LVU332
 1025 0194 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 1026              	.LVL114:
 424:base/debug/RTT/SEGGER_RTT_printf.c ****             if (c == '\0') {
ARM GAS  /tmp/ccSbJIsV.s 			page 29


 1027              		.loc 1 424 13 is_stmt 1 view .LVU333
 425:base/debug/RTT/SEGGER_RTT_printf.c ****               break;
 1028              		.loc 1 425 13 view .LVU334
 425:base/debug/RTT/SEGGER_RTT_printf.c ****               break;
 1029              		.loc 1 425 16 is_stmt 0 view .LVU335
 1030 0198 0029     		cmp	r1, #0
 1031 019a C7D0     		beq	.L71
 428:base/debug/RTT/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 1032              		.loc 1 428 12 is_stmt 1 view .LVU336
 1033 019c 13A8     		add	r0, sp, #76
 1034 019e FFF7FEFF 		bl	_StoreChar
 1035              	.LVL115:
 429:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 1036              		.loc 1 429 43 view .LVU337
 429:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 1037              		.loc 1 429 30 is_stmt 0 view .LVU338
 1038 01a2 169B     		ldr	r3, [sp, #88]
 429:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 1039              		.loc 1 429 43 view .LVU339
 1040 01a4 002B     		cmp	r3, #0
 1041 01a6 F5DA     		bge	.L79
 1042 01a8 C0E7     		b	.L71
 1043              	.LVL116:
 1044              	.L76:
 429:base/debug/RTT/SEGGER_RTT_printf.c ****         }
 1045              		.loc 1 429 43 view .LVU340
 1046              	.LBE3:
 433:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1047              		.loc 1 433 9 is_stmt 1 view .LVU341
 433:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1048              		.loc 1 433 11 is_stmt 0 view .LVU342
 1049 01aa 2B68     		ldr	r3, [r5]
 1050              	.LVL117:
 433:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1051              		.loc 1 433 11 view .LVU343
 1052 01ac 1A1D     		adds	r2, r3, #4
 1053              	.LVL118:
 433:base/debug/RTT/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1054              		.loc 1 433 11 view .LVU344
 1055 01ae 2A60     		str	r2, [r5]
 1056 01b0 1968     		ldr	r1, [r3]
 434:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 1057              		.loc 1 434 9 is_stmt 1 view .LVU345
 1058 01b2 0023     		movs	r3, #0
 1059 01b4 0193     		str	r3, [sp, #4]
 1060 01b6 0823     		movs	r3, #8
 1061 01b8 0093     		str	r3, [sp]
 1062 01ba 1022     		movs	r2, #16
 1063 01bc 13A8     		add	r0, sp, #76
 1064              	.LVL119:
 434:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 1065              		.loc 1 434 9 is_stmt 0 view .LVU346
 1066 01be FFF7FEFF 		bl	_PrintUnsigned
 1067              	.LVL120:
 435:base/debug/RTT/SEGGER_RTT_printf.c ****       case '%':
 1068              		.loc 1 435 9 is_stmt 1 view .LVU347
 1069 01c2 B3E7     		b	.L71
ARM GAS  /tmp/ccSbJIsV.s 			page 30


 1070              	.LVL121:
 1071              	.L70:
 437:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 1072              		.loc 1 437 9 view .LVU348
 1073 01c4 2521     		movs	r1, #37
 1074              	.LVL122:
 437:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 1075              		.loc 1 437 9 is_stmt 0 view .LVU349
 1076 01c6 13A8     		add	r0, sp, #76
 1077              	.LVL123:
 437:base/debug/RTT/SEGGER_RTT_printf.c ****         break;
 1078              		.loc 1 437 9 view .LVU350
 1079 01c8 FFF7FEFF 		bl	_StoreChar
 1080              	.LVL124:
 438:base/debug/RTT/SEGGER_RTT_printf.c ****       default:
 1081              		.loc 1 438 9 is_stmt 1 view .LVU351
 1082 01cc AEE7     		b	.L71
 1083              	.L54:
 447:base/debug/RTT/SEGGER_RTT_printf.c **** 
 448:base/debug/RTT/SEGGER_RTT_printf.c ****   if (BufferDesc.ReturnValue > 0) {
 1084              		.loc 1 448 3 view .LVU352
 1085              		.loc 1 448 17 is_stmt 0 view .LVU353
 1086 01ce 169B     		ldr	r3, [sp, #88]
 1087              		.loc 1 448 6 view .LVU354
 1088 01d0 002B     		cmp	r3, #0
 1089 01d2 05DD     		ble	.L82
 449:base/debug/RTT/SEGGER_RTT_printf.c ****     //
 450:base/debug/RTT/SEGGER_RTT_printf.c ****     // Write remaining data, if any
 451:base/debug/RTT/SEGGER_RTT_printf.c ****     //
 452:base/debug/RTT/SEGGER_RTT_printf.c ****     if (BufferDesc.Cnt != 0u) {
 1090              		.loc 1 452 5 is_stmt 1 view .LVU355
 1091              		.loc 1 452 19 is_stmt 0 view .LVU356
 1092 01d4 159A     		ldr	r2, [sp, #84]
 1093              		.loc 1 452 8 view .LVU357
 1094 01d6 32B9     		cbnz	r2, .L91
 1095              	.L83:
 453:base/debug/RTT/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 454:base/debug/RTT/SEGGER_RTT_printf.c ****     }
 455:base/debug/RTT/SEGGER_RTT_printf.c ****     BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
 1096              		.loc 1 455 5 is_stmt 1 view .LVU358
 1097              		.loc 1 455 28 is_stmt 0 view .LVU359
 1098 01d8 159A     		ldr	r2, [sp, #84]
 1099 01da 169B     		ldr	r3, [sp, #88]
 1100 01dc 1344     		add	r3, r3, r2
 1101 01de 1693     		str	r3, [sp, #88]
 1102              	.L82:
 456:base/debug/RTT/SEGGER_RTT_printf.c ****   }
 457:base/debug/RTT/SEGGER_RTT_printf.c ****   return BufferDesc.ReturnValue;
 1103              		.loc 1 457 3 is_stmt 1 view .LVU360
 458:base/debug/RTT/SEGGER_RTT_printf.c **** }
 1104              		.loc 1 458 1 is_stmt 0 view .LVU361
 1105 01e0 1698     		ldr	r0, [sp, #88]
 1106 01e2 19B0     		add	sp, sp, #100
 1107              	.LCFI8:
 1108              		.cfi_remember_state
 1109              		.cfi_def_cfa_offset 20
 1110              		@ sp needed
ARM GAS  /tmp/ccSbJIsV.s 			page 31


 1111 01e4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1112              	.LVL125:
 1113              	.L91:
 1114              	.LCFI9:
 1115              		.cfi_restore_state
 453:base/debug/RTT/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 1116              		.loc 1 453 7 is_stmt 1 view .LVU362
 1117 01e6 03A9     		add	r1, sp, #12
 1118 01e8 3046     		mov	r0, r6
 1119 01ea FFF7FEFF 		bl	SEGGER_RTT_Write
 1120              	.LVL126:
 1121 01ee F3E7     		b	.L83
 1122              		.cfi_endproc
 1123              	.LFE3:
 1125              		.section	.text.SEGGER_RTT_printf,"ax",%progbits
 1126              		.align	1
 1127              		.global	SEGGER_RTT_printf
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1131              		.fpu softvfp
 1133              	SEGGER_RTT_printf:
 1134              	.LVL127:
 1135              	.LFB4:
 459:base/debug/RTT/SEGGER_RTT_printf.c **** 
 460:base/debug/RTT/SEGGER_RTT_printf.c **** /*********************************************************************
 461:base/debug/RTT/SEGGER_RTT_printf.c **** *
 462:base/debug/RTT/SEGGER_RTT_printf.c **** *       SEGGER_RTT_printf
 463:base/debug/RTT/SEGGER_RTT_printf.c **** *
 464:base/debug/RTT/SEGGER_RTT_printf.c **** *  Function description
 465:base/debug/RTT/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 466:base/debug/RTT/SEGGER_RTT_printf.c **** *    This data is read by the host.
 467:base/debug/RTT/SEGGER_RTT_printf.c **** *
 468:base/debug/RTT/SEGGER_RTT_printf.c **** *  Parameters
 469:base/debug/RTT/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 470:base/debug/RTT/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string, followed by the arguments for conversion
 471:base/debug/RTT/SEGGER_RTT_printf.c **** *
 472:base/debug/RTT/SEGGER_RTT_printf.c **** *  Return values
 473:base/debug/RTT/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 474:base/debug/RTT/SEGGER_RTT_printf.c **** *     < 0:  Error
 475:base/debug/RTT/SEGGER_RTT_printf.c **** *
 476:base/debug/RTT/SEGGER_RTT_printf.c **** *  Notes
 477:base/debug/RTT/SEGGER_RTT_printf.c **** *    (1) Conversion specifications have following syntax:
 478:base/debug/RTT/SEGGER_RTT_printf.c **** *          %[flags][FieldWidth][.Precision]ConversionSpecifier
 479:base/debug/RTT/SEGGER_RTT_printf.c **** *    (2) Supported flags:
 480:base/debug/RTT/SEGGER_RTT_printf.c **** *          -: Left justify within the field width
 481:base/debug/RTT/SEGGER_RTT_printf.c **** *          +: Always print sign extension for signed conversions
 482:base/debug/RTT/SEGGER_RTT_printf.c **** *          0: Pad with 0 instead of spaces. Ignored when using '-'-flag or precision
 483:base/debug/RTT/SEGGER_RTT_printf.c **** *        Supported conversion specifiers:
 484:base/debug/RTT/SEGGER_RTT_printf.c **** *          c: Print the argument as one char
 485:base/debug/RTT/SEGGER_RTT_printf.c **** *          d: Print the argument as a signed integer
 486:base/debug/RTT/SEGGER_RTT_printf.c **** *          u: Print the argument as an unsigned integer
 487:base/debug/RTT/SEGGER_RTT_printf.c **** *          x: Print the argument as an hexadecimal integer
 488:base/debug/RTT/SEGGER_RTT_printf.c **** *          s: Print the string pointed to by the argument
 489:base/debug/RTT/SEGGER_RTT_printf.c **** *          p: Print the argument as an 8-digit hexadecimal integer. (Argument shall be a pointer to
 490:base/debug/RTT/SEGGER_RTT_printf.c **** */
 491:base/debug/RTT/SEGGER_RTT_printf.c **** int SEGGER_RTT_printf(unsigned BufferIndex, const char * sFormat, ...) {
ARM GAS  /tmp/ccSbJIsV.s 			page 32


 1136              		.loc 1 491 72 view -0
 1137              		.cfi_startproc
 1138              		@ args = 4, pretend = 12, frame = 8
 1139              		@ frame_needed = 0, uses_anonymous_args = 1
 1140              		.loc 1 491 72 is_stmt 0 view .LVU364
 1141 0000 0EB4     		push	{r1, r2, r3}
 1142              	.LCFI10:
 1143              		.cfi_def_cfa_offset 12
 1144              		.cfi_offset 1, -12
 1145              		.cfi_offset 2, -8
 1146              		.cfi_offset 3, -4
 1147 0002 00B5     		push	{lr}
 1148              	.LCFI11:
 1149              		.cfi_def_cfa_offset 16
 1150              		.cfi_offset 14, -16
 1151 0004 82B0     		sub	sp, sp, #8
 1152              	.LCFI12:
 1153              		.cfi_def_cfa_offset 24
 1154 0006 03AB     		add	r3, sp, #12
 1155 0008 53F8041B 		ldr	r1, [r3], #4
 492:base/debug/RTT/SEGGER_RTT_printf.c ****   int r;
 1156              		.loc 1 492 3 is_stmt 1 view .LVU365
 493:base/debug/RTT/SEGGER_RTT_printf.c ****   va_list ParamList;
 1157              		.loc 1 493 3 view .LVU366
 494:base/debug/RTT/SEGGER_RTT_printf.c **** 
 495:base/debug/RTT/SEGGER_RTT_printf.c ****   va_start(ParamList, sFormat);
 1158              		.loc 1 495 3 view .LVU367
 1159 000c 0193     		str	r3, [sp, #4]
 496:base/debug/RTT/SEGGER_RTT_printf.c ****   r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
 1160              		.loc 1 496 3 view .LVU368
 1161              		.loc 1 496 7 is_stmt 0 view .LVU369
 1162 000e 01AA     		add	r2, sp, #4
 1163 0010 FFF7FEFF 		bl	SEGGER_RTT_vprintf
 1164              	.LVL128:
 497:base/debug/RTT/SEGGER_RTT_printf.c ****   va_end(ParamList);
 1165              		.loc 1 497 3 is_stmt 1 view .LVU370
 498:base/debug/RTT/SEGGER_RTT_printf.c ****   return r;
 1166              		.loc 1 498 3 view .LVU371
 499:base/debug/RTT/SEGGER_RTT_printf.c **** }
 1167              		.loc 1 499 1 is_stmt 0 view .LVU372
 1168 0014 02B0     		add	sp, sp, #8
 1169              	.LCFI13:
 1170              		.cfi_def_cfa_offset 16
 1171              		@ sp needed
 1172 0016 5DF804EB 		ldr	lr, [sp], #4
 1173              	.LCFI14:
 1174              		.cfi_restore 14
 1175              		.cfi_def_cfa_offset 12
 1176 001a 03B0     		add	sp, sp, #12
 1177              	.LCFI15:
 1178              		.cfi_restore 3
 1179              		.cfi_restore 2
 1180              		.cfi_restore 1
 1181              		.cfi_def_cfa_offset 0
 1182 001c 7047     		bx	lr
 1183              		.cfi_endproc
 1184              	.LFE4:
ARM GAS  /tmp/ccSbJIsV.s 			page 33


 1186              		.section	.rodata._aV2C.0,"a"
 1187              		.align	2
 1188              		.set	.LANCHOR0,. + 0
 1191              	_aV2C.0:
 1192 0000 30313233 		.ascii	"0123456789ABCDEF"
 1192      34353637 
 1192      38394142 
 1192      43444546 
 1193              		.text
 1194              	.Letext0:
 1195              		.file 2 "/usr/lib/gcc/arm-none-eabi/11.1.0/include/stdarg.h"
 1196              		.file 3 "<built-in>"
 1197              		.file 4 "base/debug/RTT/SEGGER_RTT.h"
ARM GAS  /tmp/ccSbJIsV.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SEGGER_RTT_printf.c
     /tmp/ccSbJIsV.s:16     .text._StoreChar:0000000000000000 $t
     /tmp/ccSbJIsV.s:23     .text._StoreChar:0000000000000000 _StoreChar
     /tmp/ccSbJIsV.s:111    .text._PrintUnsigned:0000000000000000 $t
     /tmp/ccSbJIsV.s:117    .text._PrintUnsigned:0000000000000000 _PrintUnsigned
     /tmp/ccSbJIsV.s:342    .text._PrintUnsigned:00000000000000dc $d
     /tmp/ccSbJIsV.s:347    .text._PrintInt:0000000000000000 $t
     /tmp/ccSbJIsV.s:353    .text._PrintInt:0000000000000000 _PrintInt
     /tmp/ccSbJIsV.s:581    .text.SEGGER_RTT_vprintf:0000000000000000 $t
     /tmp/ccSbJIsV.s:588    .text.SEGGER_RTT_vprintf:0000000000000000 SEGGER_RTT_vprintf
     /tmp/ccSbJIsV.s:714    .text.SEGGER_RTT_vprintf:0000000000000054 $d
     /tmp/ccSbJIsV.s:729    .text.SEGGER_RTT_vprintf:000000000000008c $t
     /tmp/ccSbJIsV.s:853    .text.SEGGER_RTT_vprintf:00000000000000fc $d
     /tmp/ccSbJIsV.s:1126   .text.SEGGER_RTT_printf:0000000000000000 $t
     /tmp/ccSbJIsV.s:1133   .text.SEGGER_RTT_printf:0000000000000000 SEGGER_RTT_printf
     /tmp/ccSbJIsV.s:1187   .rodata._aV2C.0:0000000000000000 $d
     /tmp/ccSbJIsV.s:1191   .rodata._aV2C.0:0000000000000000 _aV2C.0
     /tmp/ccSbJIsV.s:886    .text.SEGGER_RTT_vprintf:000000000000011d $d
     /tmp/ccSbJIsV.s:886    .text.SEGGER_RTT_vprintf:000000000000011e $t

UNDEFINED SYMBOLS
SEGGER_RTT_Write
